{"ast":null,"code":"function isIndentSizeConstant(indent) {\n  return indent === '2xs' || indent === 'xs' || indent === 's' || indent === 'm' || indent === 'l' || indent === 'xl' || indent === '2xl' || indent === '3xl' || indent === '4xl';\n}\nfunction calculateIndent(indent) {\n  if (isIndentSizeConstant(indent)) {\n    return;\n  }\n  return typeof indent === 'string' ? indent : `${indent}px`;\n}\nexport const resolveIndent = (indent, cssProperty, classNames) => {\n  if (!indent) {\n    return [undefined, undefined];\n  }\n  const calculatedIndent = calculateIndent(indent);\n  if (calculatedIndent) {\n    return [{\n      [cssProperty]: calculatedIndent\n    }, undefined];\n  }\n  return [undefined, classNames[indent]];\n};\nexport const mutableRemoveElement = (arr, element) => {\n  arr.splice(arr.indexOf(element), 1);\n};","map":{"version":3,"names":["isIndentSizeConstant","indent","calculateIndent","resolveIndent","cssProperty","classNames","undefined","calculatedIndent","mutableRemoveElement","arr","element","splice","indexOf"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/components/ImageBase/ImageBaseFloatElement/helpers.ts"],"sourcesContent":["import { type FloatElementIndentation } from './ImageBaseFloatElement';\n\nfunction isIndentSizeConstant(indent: FloatElementIndentation) {\n  return (\n    indent === '2xs' ||\n    indent === 'xs' ||\n    indent === 's' ||\n    indent === 'm' ||\n    indent === 'l' ||\n    indent === 'xl' ||\n    indent === '2xl' ||\n    indent === '3xl' ||\n    indent === '4xl'\n  );\n}\n\nfunction calculateIndent(indent: FloatElementIndentation) {\n  if (isIndentSizeConstant(indent)) {\n    return;\n  }\n  return typeof indent === 'string' ? indent : `${indent}px`;\n}\n\nexport const resolveIndent = (\n  indent: FloatElementIndentation | undefined,\n  cssProperty: string,\n  classNames: Record<string, string>,\n): [React.CSSProperties | undefined, string | undefined] => {\n  if (!indent) {\n    return [undefined, undefined];\n  }\n\n  const calculatedIndent = calculateIndent(indent);\n\n  if (calculatedIndent) {\n    return [{ [cssProperty]: calculatedIndent }, undefined];\n  }\n\n  return [undefined, classNames[indent]];\n};\n\nexport const mutableRemoveElement = <T>(arr: T[], element: T) => {\n  arr.splice(arr.indexOf(element), 1);\n};\n"],"mappings":"AAEA,SAASA,qBAAqBC,MAA+B;EAC3D,OACEA,MAAA,KAAW,SACXA,MAAA,KAAW,QACXA,MAAA,KAAW,OACXA,MAAA,KAAW,OACXA,MAAA,KAAW,OACXA,MAAA,KAAW,QACXA,MAAA,KAAW,SACXA,MAAA,KAAW,SACXA,MAAA,KAAW;AAEf;AAEA,SAASC,gBAAgBD,MAA+B;EACtD,IAAID,oBAAA,CAAqBC,MAAA,GAAS;IAChC;EACF;EACA,OAAO,OAAOA,MAAA,KAAW,WAAWA,MAAA,GAAS,GAAGA,MAAA,IAAU;AAC5D;AAEA,OAAO,MAAME,aAAA,GAAgBA,CAC3BF,MAAA,EACAG,WAAA,EACAC,UAAA;EAEA,IAAI,CAACJ,MAAA,EAAQ;IACX,OAAO,CAACK,SAAA,EAAWA,SAAA,CAAU;EAC/B;EAEA,MAAMC,gBAAA,GAAmBL,eAAA,CAAgBD,MAAA;EAEzC,IAAIM,gBAAA,EAAkB;IACpB,OAAO,CAAC;MAAE,CAACH,WAAA,GAAcG;IAAiB,GAAGD,SAAA,CAAU;EACzD;EAEA,OAAO,CAACA,SAAA,EAAWD,UAAU,CAACJ,MAAA,CAAO,CAAC;AACxC;AAEA,OAAO,MAAMO,oBAAA,GAAuBA,CAAIC,GAAA,EAAUC,OAAA;EAChDD,GAAA,CAAIE,MAAM,CAACF,GAAA,CAAIG,OAAO,CAACF,OAAA,GAAU;AACnC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}