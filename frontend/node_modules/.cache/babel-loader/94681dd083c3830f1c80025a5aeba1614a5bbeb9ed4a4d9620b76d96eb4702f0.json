{"ast":null,"code":"'use client';\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nimport { noop } from \"@vkontakte/vkjs\";\nimport { clamp } from \"../../helpers/math.js\";\nimport { useDOM } from \"../../lib/dom.js\";\nconst clearDisableScrollStyle = node => {\n  Object.assign(node.style, {\n    position: '',\n    top: '',\n    left: '',\n    right: '',\n    overscrollBehavior: '',\n    overflowY: '',\n    overflowX: ''\n  });\n};\nconst getPageYOffsetWithoutKeyboardHeight = (window, scrollTop) => {\n  // Note: здесь расчёт на то, что `clientHeight` равен `window.innerHeight`.\n  //  Это достигается тем, что тегу `html` задали`height: 100%` и у него нет отступов сверху и снизу. Если есть отступы,\n  //  то надо задать `box-sizing: border-box`, чтобы они не учитывались.\n  const diffOfClientHeightAndViewportHeight = window.document.documentElement.clientHeight - window.innerHeight;\n  return scrollTop - diffOfClientHeightAndViewportHeight;\n};\nexport const ScrollContext = /*#__PURE__*/React.createContext({\n  getScroll: () => ({\n    x: 0,\n    y: 0\n  }),\n  scrollTo: noop,\n  incrementScrollLockCounter: noop,\n  decrementScrollLockCounter: noop\n});\nexport const useScroll = () => React.useContext(ScrollContext);\n/**\n * Управляет блокировкой окна в зависимости от внутреннего счетчика.\n * Если счетчик больше нуля, требуется заблокировать прокрутку\n */\nfunction useScrollLockController(enableScrollLock, disableScrollLock) {\n  const countRef = React.useRef(0);\n  const updateScrollLock = React.useCallback(() => {\n    if (countRef.current > 0) {\n      enableScrollLock();\n    } else {\n      disableScrollLock();\n    }\n  }, [enableScrollLock, disableScrollLock]);\n  const incrementScrollLockCounter = React.useCallback(() => {\n    countRef.current += 1;\n    updateScrollLock();\n  }, [updateScrollLock]);\n  const decrementScrollLockCounter = React.useCallback(() => {\n    countRef.current -= 1;\n    updateScrollLock();\n  }, [updateScrollLock]);\n  return [incrementScrollLockCounter, decrementScrollLockCounter];\n}\nexport function useManualScroll() {\n  const {\n    scrollTo,\n    getScroll\n  } = React.useContext(ScrollContext);\n  return React.useMemo(() => ({\n    scrollTo,\n    getScroll\n  }), [getScroll, scrollTo]);\n}\nconst _scrollTo = _ref => {\n  let {\n    x,\n    y,\n    scrollWidth,\n    clientWidth,\n    scrollHeight,\n    clientHeight,\n    scrollLockEnabled,\n    lockedElement,\n    elementToScroll\n  } = _ref;\n  // Some iOS versions do not normalize scroll — do it manually.\n  const left = x ? clamp(x, 0, scrollWidth - clientWidth) : 0;\n  const top = y ? clamp(y, 0, scrollHeight - clientHeight) : 0;\n  if (scrollLockEnabled) {\n    Object.assign(lockedElement.style, {\n      left: `-${left}px`,\n      top: `-${top}px`\n    });\n  } else {\n    elementToScroll.scrollTo({\n      left,\n      top\n    });\n  }\n};\nconst _getScroll = _ref2 => {\n  let {\n    xOffset,\n    yOffset,\n    element,\n    scrollLockEnabled,\n    customCalcY = v => v\n  } = _ref2;\n  const elementStyles = element.style;\n  const [scrollLeft, scrollTop] = scrollLockEnabled ? [-parseFloat(elementStyles.left || '0'), -parseFloat(elementStyles.top || '0')] : [xOffset, yOffset];\n  return {\n    x: scrollLeft,\n    y: customCalcY(scrollTop)\n  };\n};\nexport const GlobalScrollController = _ref3 => {\n  let {\n    children\n  } = _ref3;\n  const {\n    window,\n    document\n  } = useDOM();\n  const beforeScrollLockFnSetRef = React.useRef(new Set());\n  const scrollLockEnabledRef = React.useRef(false);\n  const getScroll = React.useCallback(function () {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      compensateKeyboardHeight: true\n    };\n    if (!window || !document) {\n      return {\n        x: 0,\n        y: 0\n      };\n    }\n    return _getScroll({\n      xOffset: window.pageXOffset,\n      yOffset: window.pageYOffset,\n      element: document.documentElement,\n      scrollLockEnabled: scrollLockEnabledRef.current,\n      customCalcY: scrollTop => options.compensateKeyboardHeight ? getPageYOffsetWithoutKeyboardHeight(window, scrollTop) : scrollTop\n    });\n  }, [document, window]);\n  const scrollTo = React.useCallback(function () {\n    let x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    if (!window || !document) {\n      return;\n    }\n    _scrollTo({\n      x,\n      y,\n      scrollWidth: document.body.scrollWidth,\n      clientWidth: window.innerWidth,\n      scrollHeight: document.body.scrollHeight,\n      clientHeight: window.innerHeight,\n      scrollLockEnabled: scrollLockEnabledRef.current,\n      lockedElement: document.documentElement,\n      elementToScroll: window\n    });\n  }, [document, window]);\n  const enableScrollLock = React.useCallback(() => {\n    beforeScrollLockFnSetRef.current.forEach(fn => {\n      fn();\n    });\n    const {\n      x: scrollX,\n      y: scrollY\n    } = getScroll({\n      compensateKeyboardHeight: false\n    });\n    const overflowY = window.innerWidth > document.documentElement.clientWidth ? 'scroll' : '';\n    const overflowX = window.innerHeight > document.documentElement.clientHeight ? 'scroll' : '';\n    Object.assign(document.documentElement.style, {\n      position: 'fixed',\n      right: '0',\n      overscrollBehavior: 'none',\n      overflowY,\n      overflowX\n    });\n    scrollLockEnabledRef.current = true;\n    scrollTo(scrollX, scrollY);\n  }, [document, getScroll, scrollTo, window]);\n  const disableScrollLock = React.useCallback(() => {\n    const scrollData = getScroll({\n      compensateKeyboardHeight: false\n    });\n    clearDisableScrollStyle(document.documentElement);\n    scrollLockEnabledRef.current = false;\n    scrollTo(scrollData.x, scrollData.y);\n  }, [document, getScroll, scrollTo]);\n  const [incrementScrollLockCounter, decrementScrollLockCounter] = useScrollLockController(enableScrollLock, disableScrollLock);\n  const scrollController = React.useMemo(() => ({\n    getScroll,\n    scrollTo,\n    incrementScrollLockCounter,\n    decrementScrollLockCounter,\n    beforeScrollLockFnSetRef: beforeScrollLockFnSetRef\n  }), [getScroll, scrollTo, incrementScrollLockCounter, decrementScrollLockCounter]);\n  return /*#__PURE__*/_jsx(ScrollContext.Provider, {\n    value: scrollController,\n    children: children\n  });\n};\nexport const ElementScrollController = _ref4 => {\n  let {\n    elRef,\n    children\n  } = _ref4;\n  const beforeScrollLockFnSetRef = React.useRef(new Set());\n  const scrollLockEnabledRef = React.useRef(false);\n  const getScroll = React.useCallback(() => {\n    const element = elRef.current;\n    if (!element) {\n      return {\n        x: 0,\n        y: 0\n      };\n    }\n    return _getScroll({\n      xOffset: element.scrollLeft,\n      yOffset: element.scrollTop,\n      element: element,\n      scrollLockEnabled: scrollLockEnabledRef.current\n    });\n  }, [elRef]);\n  const scrollTo = React.useCallback(function () {\n    let x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    const el = elRef.current;\n    if (!el) {\n      return;\n    }\n    _scrollTo({\n      x,\n      y,\n      scrollWidth: el.scrollWidth,\n      clientWidth: el.clientWidth,\n      scrollHeight: el.scrollHeight,\n      clientHeight: el.clientHeight,\n      scrollLockEnabled: scrollLockEnabledRef.current,\n      lockedElement: el,\n      elementToScroll: el\n    });\n  }, [elRef]);\n  const enableScrollLock = React.useCallback(() => {\n    const el = elRef.current;\n    if (!el) {\n      return;\n    }\n    beforeScrollLockFnSetRef.current.forEach(fn => {\n      fn();\n    });\n    const {\n      x: scrollX,\n      y: scrollY\n    } = getScroll();\n    const overflowY = el.scrollWidth > el.clientWidth ? 'scroll' : '';\n    const overflowX = el.scrollHeight > el.clientHeight ? 'scroll' : '';\n    Object.assign(el.style, {\n      position: 'absolute',\n      right: '0',\n      overflowY,\n      overflowX\n    });\n    scrollLockEnabledRef.current = true;\n    scrollTo(scrollX, scrollY);\n  }, [elRef, getScroll, scrollTo]);\n  const disableScrollLock = React.useCallback(() => {\n    const el = elRef.current;\n    if (!el) {\n      return;\n    }\n    const scrollData = getScroll();\n    clearDisableScrollStyle(el);\n    scrollLockEnabledRef.current = false;\n    scrollTo(scrollData.x, scrollData.y);\n  }, [elRef, getScroll, scrollTo]);\n  const [incrementScrollLockCounter, decrementScrollLockCounter] = useScrollLockController(enableScrollLock, disableScrollLock);\n  const scrollController = React.useMemo(() => ({\n    getScroll,\n    scrollTo,\n    incrementScrollLockCounter,\n    decrementScrollLockCounter,\n    beforeScrollLockFnSetRef\n  }), [getScroll, scrollTo, incrementScrollLockCounter, decrementScrollLockCounter]);\n  return /*#__PURE__*/_jsx(ScrollContext.Provider, {\n    value: scrollController,\n    children: children\n  });\n};\n/**\n * Блокирует прокрутку окна\n *\n * @param enabled - если false то не будет блокировать\n */\nexport const useScrollLock = function () {\n  let enabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  const {\n    incrementScrollLockCounter,\n    decrementScrollLockCounter\n  } = useScroll();\n  React.useEffect(() => {\n    if (enabled) {\n      incrementScrollLockCounter();\n      return decrementScrollLockCounter;\n    }\n    return noop;\n  }, [enabled, incrementScrollLockCounter, decrementScrollLockCounter]);\n};","map":{"version":3,"names":["React","noop","clamp","useDOM","clearDisableScrollStyle","node","Object","assign","style","position","top","left","right","overscrollBehavior","overflowY","overflowX","getPageYOffsetWithoutKeyboardHeight","window","scrollTop","diffOfClientHeightAndViewportHeight","document","documentElement","clientHeight","innerHeight","ScrollContext","createContext","getScroll","x","y","scrollTo","incrementScrollLockCounter","decrementScrollLockCounter","useScroll","useContext","useScrollLockController","enableScrollLock","disableScrollLock","countRef","useRef","updateScrollLock","useCallback","current","useManualScroll","useMemo","_scrollTo","_ref","scrollWidth","clientWidth","scrollHeight","scrollLockEnabled","lockedElement","elementToScroll","_getScroll","_ref2","xOffset","yOffset","element","customCalcY","v","elementStyles","scrollLeft","parseFloat","GlobalScrollController","_ref3","children","beforeScrollLockFnSetRef","Set","scrollLockEnabledRef","options","arguments","length","undefined","compensateKeyboardHeight","pageXOffset","pageYOffset","body","innerWidth","forEach","fn","scrollX","scrollY","scrollData","scrollController","_jsx","Provider","value","ElementScrollController","_ref4","elRef","el","useScrollLock","enabled","useEffect"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/components/AppRoot/ScrollContext.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { noop } from '@vkontakte/vkjs';\nimport { clamp } from '../../helpers/math';\nimport { useDOM } from '../../lib/dom';\nimport type { HasChildren } from '../../types';\n\nconst clearDisableScrollStyle = (node: HTMLElement) => {\n  Object.assign(node.style, {\n    position: '',\n    top: '',\n    left: '',\n    right: '',\n    overscrollBehavior: '',\n    overflowY: '',\n    overflowX: '',\n  });\n};\n\nconst getPageYOffsetWithoutKeyboardHeight = (window: Window, scrollTop: number) => {\n  // Note: здесь расчёт на то, что `clientHeight` равен `window.innerHeight`.\n  //  Это достигается тем, что тегу `html` задали`height: 100%` и у него нет отступов сверху и снизу. Если есть отступы,\n  //  то надо задать `box-sizing: border-box`, чтобы они не учитывались.\n  const diffOfClientHeightAndViewportHeight =\n    window.document.documentElement.clientHeight - window.innerHeight;\n  return scrollTop - diffOfClientHeightAndViewportHeight;\n};\n\nexport type GetScrollOptions = {\n  compensateKeyboardHeight?: boolean;\n};\n\nexport interface ScrollContextInterface {\n  getScroll: (this: void, options?: GetScrollOptions) => { x: number; y: number };\n  scrollTo: (this: void, x?: number, y?: number) => void;\n  /**\n   * Увеличивает счетчик блокировки прокрутки\n   */\n  incrementScrollLockCounter: (this: void) => void;\n  /**\n   * Уменьшает счетчик блокировки прокрутки\n   */\n  decrementScrollLockCounter: (this: void) => void;\n  beforeScrollLockFnSetRef?: React.RefObject<Set<() => void>>;\n}\n\nexport const ScrollContext: React.Context<ScrollContextInterface> =\n  React.createContext<ScrollContextInterface>({\n    getScroll: () => ({ x: 0, y: 0 }),\n    scrollTo: noop,\n    incrementScrollLockCounter: noop,\n    decrementScrollLockCounter: noop,\n  });\n\nexport const useScroll = (): ScrollContextInterface => React.useContext(ScrollContext);\n\n/**\n * Управляет блокировкой окна в зависимости от внутреннего счетчика.\n * Если счетчик больше нуля, требуется заблокировать прокрутку\n */\nfunction useScrollLockController(enableScrollLock: () => void, disableScrollLock: () => void) {\n  const countRef = React.useRef(0);\n\n  const updateScrollLock = React.useCallback(() => {\n    if (countRef.current > 0) {\n      enableScrollLock();\n    } else {\n      disableScrollLock();\n    }\n  }, [enableScrollLock, disableScrollLock]);\n\n  const incrementScrollLockCounter = React.useCallback(() => {\n    countRef.current += 1;\n    updateScrollLock();\n  }, [updateScrollLock]);\n\n  const decrementScrollLockCounter = React.useCallback(() => {\n    countRef.current -= 1;\n    updateScrollLock();\n  }, [updateScrollLock]);\n\n  return [incrementScrollLockCounter, decrementScrollLockCounter];\n}\n\nexport function useManualScroll(): Pick<ScrollContextInterface, 'scrollTo' | 'getScroll'> {\n  const { scrollTo, getScroll } = React.useContext(ScrollContext);\n  return React.useMemo(\n    () => ({\n      scrollTo,\n      getScroll,\n    }),\n    [getScroll, scrollTo],\n  );\n}\n\nexport interface ScrollControllerProps extends HasChildren {\n  elRef: React.RefObject<HTMLElement | null>;\n}\n\nconst _scrollTo = ({\n  x,\n  y,\n  scrollWidth,\n  clientWidth,\n  scrollHeight,\n  clientHeight,\n  scrollLockEnabled,\n  lockedElement,\n  elementToScroll,\n}: {\n  x: number;\n  y: number;\n  scrollWidth: number;\n  clientWidth: number;\n  scrollHeight: number;\n  clientHeight: number;\n  scrollLockEnabled: boolean;\n  lockedElement: HTMLElement;\n  elementToScroll: Window | HTMLElement;\n}) => {\n  // Some iOS versions do not normalize scroll — do it manually.\n  const left = x ? clamp(x, 0, scrollWidth - clientWidth) : 0;\n  const top = y ? clamp(y, 0, scrollHeight - clientHeight) : 0;\n\n  if (scrollLockEnabled) {\n    Object.assign(lockedElement.style, {\n      left: `-${left}px`,\n      top: `-${top}px`,\n    });\n  } else {\n    elementToScroll.scrollTo({\n      left,\n      top,\n    });\n  }\n};\n\nconst _getScroll = ({\n  xOffset,\n  yOffset,\n  element,\n  scrollLockEnabled,\n  customCalcY = (v) => v,\n}: {\n  xOffset: number;\n  yOffset: number;\n  element: HTMLElement;\n  scrollLockEnabled: boolean;\n  customCalcY?: (scrollTop: number) => number;\n}) => {\n  const elementStyles = element.style;\n  const [scrollLeft, scrollTop] = scrollLockEnabled\n    ? [-parseFloat(elementStyles.left || '0'), -parseFloat(elementStyles.top || '0')]\n    : [xOffset, yOffset];\n  return {\n    x: scrollLeft,\n    y: customCalcY(scrollTop),\n  };\n};\n\nexport const GlobalScrollController = ({ children }: ScrollControllerProps): React.ReactNode => {\n  const { window, document } = useDOM();\n  const beforeScrollLockFnSetRef = React.useRef<Set<() => void>>(new Set());\n  const scrollLockEnabledRef = React.useRef(false);\n\n  const getScroll = React.useCallback<ScrollContextInterface['getScroll']>(\n    (options = { compensateKeyboardHeight: true }) => {\n      if (!window || !document) {\n        return { x: 0, y: 0 };\n      }\n      return _getScroll({\n        xOffset: window.pageXOffset,\n        yOffset: window.pageYOffset,\n        element: document.documentElement,\n        scrollLockEnabled: scrollLockEnabledRef.current,\n        customCalcY: (scrollTop) =>\n          options.compensateKeyboardHeight\n            ? getPageYOffsetWithoutKeyboardHeight(window, scrollTop)\n            : scrollTop,\n      });\n    },\n    [document, window],\n  );\n  const scrollTo = React.useCallback<ScrollContextInterface['scrollTo']>(\n    (x = 0, y = 0) => {\n      if (!window || !document) {\n        return;\n      }\n      _scrollTo({\n        x,\n        y,\n\n        scrollWidth: document.body.scrollWidth,\n        clientWidth: window.innerWidth,\n\n        scrollHeight: document.body.scrollHeight,\n        clientHeight: window.innerHeight,\n\n        scrollLockEnabled: scrollLockEnabledRef.current,\n        lockedElement: document.documentElement,\n        elementToScroll: window,\n      });\n    },\n    [document, window],\n  );\n\n  const enableScrollLock = React.useCallback(() => {\n    beforeScrollLockFnSetRef.current.forEach((fn) => {\n      fn();\n    });\n    const { x: scrollX, y: scrollY } = getScroll({ compensateKeyboardHeight: false });\n    const overflowY = window!.innerWidth > document!.documentElement.clientWidth ? 'scroll' : '';\n    const overflowX = window!.innerHeight > document!.documentElement.clientHeight ? 'scroll' : '';\n\n    Object.assign(document!.documentElement.style, {\n      position: 'fixed',\n      right: '0',\n      overscrollBehavior: 'none',\n      overflowY,\n      overflowX,\n    });\n\n    scrollLockEnabledRef.current = true;\n\n    scrollTo(scrollX, scrollY);\n  }, [document, getScroll, scrollTo, window]);\n\n  const disableScrollLock = React.useCallback(() => {\n    const scrollData = getScroll({ compensateKeyboardHeight: false });\n    clearDisableScrollStyle(document!.documentElement);\n    scrollLockEnabledRef.current = false;\n\n    scrollTo(scrollData.x, scrollData.y);\n  }, [document, getScroll, scrollTo]);\n\n  const [incrementScrollLockCounter, decrementScrollLockCounter] = useScrollLockController(\n    enableScrollLock,\n    disableScrollLock,\n  );\n\n  const scrollController = React.useMemo<ScrollContextInterface>(\n    () => ({\n      getScroll,\n      scrollTo,\n      incrementScrollLockCounter,\n      decrementScrollLockCounter,\n      beforeScrollLockFnSetRef: beforeScrollLockFnSetRef,\n    }),\n    [getScroll, scrollTo, incrementScrollLockCounter, decrementScrollLockCounter],\n  );\n\n  return <ScrollContext.Provider value={scrollController}>{children}</ScrollContext.Provider>;\n};\n\nexport const ElementScrollController = ({\n  elRef,\n  children,\n}: ScrollControllerProps): React.ReactNode => {\n  const beforeScrollLockFnSetRef = React.useRef<Set<() => void>>(new Set());\n  const scrollLockEnabledRef = React.useRef(false);\n\n  const getScroll = React.useCallback<ScrollContextInterface['getScroll']>(() => {\n    const element = elRef.current;\n    if (!element) {\n      return { x: 0, y: 0 };\n    }\n    return _getScroll({\n      xOffset: element.scrollLeft,\n      yOffset: element.scrollTop,\n      element: element,\n      scrollLockEnabled: scrollLockEnabledRef.current,\n    });\n  }, [elRef]);\n\n  const scrollTo = React.useCallback<ScrollContextInterface['scrollTo']>(\n    (x = 0, y = 0) => {\n      const el = elRef.current;\n      if (!el) {\n        return;\n      }\n      _scrollTo({\n        x,\n        y,\n\n        scrollWidth: el.scrollWidth,\n        clientWidth: el.clientWidth,\n\n        scrollHeight: el.scrollHeight,\n        clientHeight: el.clientHeight,\n\n        scrollLockEnabled: scrollLockEnabledRef.current,\n        lockedElement: el,\n        elementToScroll: el,\n      });\n    },\n    [elRef],\n  );\n\n  const enableScrollLock = React.useCallback(() => {\n    const el = elRef.current;\n    if (!el) {\n      return;\n    }\n    beforeScrollLockFnSetRef.current.forEach((fn) => {\n      fn();\n    });\n\n    const { x: scrollX, y: scrollY } = getScroll();\n\n    const overflowY = el.scrollWidth > el.clientWidth ? 'scroll' : '';\n    const overflowX = el.scrollHeight > el.clientHeight ? 'scroll' : '';\n\n    Object.assign(el.style, {\n      position: 'absolute',\n      right: '0',\n      overflowY,\n      overflowX,\n    });\n    scrollLockEnabledRef.current = true;\n\n    scrollTo(scrollX, scrollY);\n  }, [elRef, getScroll, scrollTo]);\n\n  const disableScrollLock = React.useCallback(() => {\n    const el = elRef.current;\n    if (!el) {\n      return;\n    }\n\n    const scrollData = getScroll();\n    clearDisableScrollStyle(el);\n    scrollLockEnabledRef.current = false;\n\n    scrollTo(scrollData.x, scrollData.y);\n  }, [elRef, getScroll, scrollTo]);\n\n  const [incrementScrollLockCounter, decrementScrollLockCounter] = useScrollLockController(\n    enableScrollLock,\n    disableScrollLock,\n  );\n\n  const scrollController = React.useMemo<ScrollContextInterface>(\n    () => ({\n      getScroll,\n      scrollTo,\n      incrementScrollLockCounter,\n      decrementScrollLockCounter,\n      beforeScrollLockFnSetRef,\n    }),\n    [getScroll, scrollTo, incrementScrollLockCounter, decrementScrollLockCounter],\n  );\n\n  return <ScrollContext.Provider value={scrollController}>{children}</ScrollContext.Provider>;\n};\n\n/**\n * Блокирует прокрутку окна\n *\n * @param enabled - если false то не будет блокировать\n */\nexport const useScrollLock = (enabled = true): void => {\n  const { incrementScrollLockCounter, decrementScrollLockCounter } = useScroll();\n\n  React.useEffect(() => {\n    if (enabled) {\n      incrementScrollLockCounter();\n      return decrementScrollLockCounter;\n    }\n\n    return noop;\n  }, [enabled, incrementScrollLockCounter, decrementScrollLockCounter]);\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}