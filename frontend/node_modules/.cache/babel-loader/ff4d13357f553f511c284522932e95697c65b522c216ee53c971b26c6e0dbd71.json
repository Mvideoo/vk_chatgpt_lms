{"ast":null,"code":"'use client';\n\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nimport { addMonths, endOfDay, isAfter, isBefore, isSameDay, isSameMonth, isWithinInterval, startOfDay, subMonths } from \"date-fns\";\nimport { useCalendar } from \"../../hooks/useCalendar.js\";\nimport { useCustomEnsuredControl } from \"../../hooks/useEnsuredControl.js\";\nimport { isFirstDay, isLastDay, navigateDate } from \"../../lib/calendar.js\";\nimport { CalendarDays } from \"../CalendarDays/CalendarDays.js\";\nimport { CalendarHeader } from \"../CalendarHeader/CalendarHeader.js\";\nimport { RootComponent } from \"../RootComponent/RootComponent.js\";\nconst getIsDaySelected = (day, value) => {\n  if (!(value === null || value === void 0 ? void 0 : value[0]) || !value[1]) {\n    return false;\n  }\n  return isWithinInterval(day, {\n    start: startOfDay(value[0]),\n    end: endOfDay(value[1])\n  });\n};\n/**\n * @see https://vkcom.github.io/VKUI/#/CalendarRange\n */\nexport const CalendarRange = _param => {\n  var {\n      value: valueProp,\n      defaultValue,\n      onChange,\n      disablePast,\n      disableFuture,\n      shouldDisableDate,\n      onClose,\n      weekStartsOn = 1,\n      disablePickers,\n      prevMonthLabel = 'Предыдущий месяц',\n      nextMonthLabel = 'Следующий месяц',\n      changeMonthLabel = 'Изменить месяц',\n      changeYearLabel = 'Изменить год',\n      changeDayLabel = 'Изменить день',\n      prevMonthIcon,\n      nextMonthIcon,\n      listenDayChangesForUpdate,\n      renderDayContent,\n      dayTestId,\n      leftPartHeaderTestsData,\n      rightPartHeaderTestsData,\n      getRootRef\n    } = _param,\n    props = _object_without_properties(_param, [\"value\", \"defaultValue\", \"onChange\", \"disablePast\", \"disableFuture\", \"shouldDisableDate\", \"onClose\", \"weekStartsOn\", \"disablePickers\", \"prevMonthLabel\", \"nextMonthLabel\", \"changeMonthLabel\", \"changeYearLabel\", \"changeDayLabel\", \"prevMonthIcon\", \"nextMonthIcon\", \"listenDayChangesForUpdate\", \"renderDayContent\", \"dayTestId\", \"leftPartHeaderTestsData\", \"rightPartHeaderTestsData\", \"getRootRef\"]);\n  const [value, updateValue] = useCustomEnsuredControl({\n    value: valueProp,\n    defaultValue,\n    onChange\n  });\n  const {\n    viewDate,\n    setViewDate,\n    setPrevMonth,\n    setNextMonth,\n    focusedDay,\n    setFocusedDay,\n    isDayFocused,\n    isDayDisabled,\n    resetSelectedDay,\n    isMonthDisabled,\n    isYearDisabled\n  } = useCalendar({\n    value,\n    disableFuture,\n    disablePast,\n    shouldDisableDate\n  });\n  const [hintedDate, setHintedDate] = React.useState();\n  const secondViewDate = addMonths(viewDate, 1);\n  const handleKeyDown = React.useCallback(event => {\n    if (['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'].includes(event.key)) {\n      event.preventDefault();\n    }\n    const newFocusedDay = navigateDate(focusedDay !== null && focusedDay !== void 0 ? focusedDay : value === null || value === void 0 ? void 0 : value[1], event.key);\n    if (newFocusedDay && !isSameMonth(newFocusedDay, viewDate) && !isSameMonth(newFocusedDay, addMonths(viewDate, 1))) {\n      setViewDate(newFocusedDay);\n    }\n    setFocusedDay(newFocusedDay);\n  }, [focusedDay, setFocusedDay, setViewDate, value, viewDate]);\n  const getNewValue = React.useCallback(date => {\n    const isValueEmpty = !value || value[0] === null && value[1] === null;\n    const isRangeSelected = value && !!value[0] && !!value[1];\n    if (isValueEmpty || isRangeSelected) {\n      return [date, null];\n    }\n    const [start] = value;\n    if (start && isSameDay(date, start)) {\n      return [startOfDay(start), endOfDay(start)];\n    } else if (start && isBefore(date, start)) {\n      return [startOfDay(date), endOfDay(start)];\n    } else if (start && isAfter(date, start)) {\n      return [start, endOfDay(date)];\n    }\n    return value;\n  }, [value]);\n  const onDayChange = React.useCallback(date => {\n    updateValue(getNewValue(date));\n    setHintedDate(undefined);\n  }, [updateValue, getNewValue]);\n  const isDaySelected = React.useCallback(day => getIsDaySelected(day, value), [value]);\n  const isDayActive = React.useCallback(day => Boolean((value === null || value === void 0 ? void 0 : value[0]) && isSameDay(day, value[0]) || (value === null || value === void 0 ? void 0 : value[1]) && isSameDay(day, value[1])), [value]);\n  const isDaySelectionEnd = React.useCallback((day, dayOfWeek) => Boolean(isLastDay(day, dayOfWeek) || (value === null || value === void 0 ? void 0 : value[1]) && isSameDay(day, value[1])), [value]);\n  const isHintedDaySelectionEnd = React.useCallback((day, dayOfWeek) => Boolean(isLastDay(day, dayOfWeek) || (hintedDate === null || hintedDate === void 0 ? void 0 : hintedDate[1]) && isSameDay(day, hintedDate[1])), [hintedDate]);\n  const isDaySelectionStart = React.useCallback((day, dayOfWeek) => Boolean(isFirstDay(day, dayOfWeek) || (value === null || value === void 0 ? void 0 : value[0]) && isSameDay(day, value[0])), [value]);\n  const isHintedDaySelectionStart = React.useCallback((day, dayOfWeek) => Boolean(isFirstDay(day, dayOfWeek) || (hintedDate === null || hintedDate === void 0 ? void 0 : hintedDate[0]) && isSameDay(day, hintedDate[0])), [hintedDate]);\n  const onDayEnter = React.useCallback(date => setHintedDate(getNewValue(date)), [setHintedDate, getNewValue]);\n  const onDayLeave = React.useCallback(() => setHintedDate(undefined), [setHintedDate]);\n  const isDayHinted = React.useCallback(day => getIsDaySelected(day, hintedDate), [hintedDate]);\n  const onRightPartViewDateChange = React.useCallback(newDate => setViewDate(subMonths(newDate, 1)), [setViewDate]);\n  return /*#__PURE__*/_jsxs(RootComponent, _object_spread_props(_object_spread({}, props), {\n    baseClassName: \"vkuiCalendarRange__host\",\n    getRootRef: getRootRef,\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: \"vkuiCalendarRange__inner\",\n      children: [/*#__PURE__*/_jsx(CalendarHeader, _object_spread({\n        viewDate: viewDate,\n        onChange: setViewDate,\n        nextMonthHidden: true,\n        onPrevMonth: setPrevMonth,\n        disablePickers: disablePickers,\n        className: \"vkuiCalendarRange__header\",\n        prevMonthLabel: prevMonthLabel,\n        nextMonthLabel: nextMonthLabel,\n        changeMonthLabel: changeMonthLabel,\n        changeYearLabel: changeYearLabel,\n        prevMonthIcon: prevMonthIcon,\n        isMonthDisabled: isMonthDisabled,\n        isYearDisabled: isYearDisabled\n      }, leftPartHeaderTestsData)), /*#__PURE__*/_jsx(CalendarDays, {\n        viewDate: viewDate,\n        value: value,\n        weekStartsOn: weekStartsOn,\n        onKeyDown: handleKeyDown,\n        isDayFocused: isDayFocused,\n        onDayChange: onDayChange,\n        isDaySelected: isDaySelected,\n        isDayActive: isDayActive,\n        isDaySelectionEnd: isDaySelectionEnd,\n        isDaySelectionStart: isDaySelectionStart,\n        isDayHinted: isDayHinted,\n        onDayEnter: onDayEnter,\n        onDayLeave: onDayLeave,\n        isHintedDaySelectionEnd: isHintedDaySelectionEnd,\n        isHintedDaySelectionStart: isHintedDaySelectionStart,\n        isDayDisabled: isDayDisabled,\n        listenDayChangesForUpdate: listenDayChangesForUpdate,\n        renderDayContent: renderDayContent,\n        \"aria-label\": changeDayLabel,\n        dayTestId: dayTestId\n      })]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: \"vkuiCalendarRange__inner\",\n      children: [/*#__PURE__*/_jsx(CalendarHeader, _object_spread({\n        viewDate: secondViewDate,\n        onChange: onRightPartViewDateChange,\n        prevMonthHidden: true,\n        onNextMonth: setNextMonth,\n        disablePickers: disablePickers,\n        className: \"vkuiCalendarRange__header\",\n        prevMonthLabel: prevMonthLabel,\n        nextMonthLabel: nextMonthLabel,\n        changeMonthLabel: changeMonthLabel,\n        changeYearLabel: changeYearLabel,\n        nextMonthIcon: nextMonthIcon,\n        isMonthDisabled: isMonthDisabled,\n        isYearDisabled: isYearDisabled\n      }, rightPartHeaderTestsData)), /*#__PURE__*/_jsx(CalendarDays, {\n        viewDate: secondViewDate,\n        value: value,\n        weekStartsOn: weekStartsOn,\n        \"aria-label\": changeDayLabel,\n        onKeyDown: handleKeyDown,\n        isDayFocused: isDayFocused,\n        onDayChange: onDayChange,\n        isDaySelected: isDaySelected,\n        isDayActive: isDayActive,\n        isDaySelectionEnd: isDaySelectionEnd,\n        isDaySelectionStart: isDaySelectionStart,\n        isDayHinted: isDayHinted,\n        onDayEnter: onDayEnter,\n        onDayLeave: onDayLeave,\n        isHintedDaySelectionEnd: isHintedDaySelectionEnd,\n        isHintedDaySelectionStart: isHintedDaySelectionStart,\n        isDayDisabled: isDayDisabled,\n        listenDayChangesForUpdate: listenDayChangesForUpdate,\n        renderDayContent: renderDayContent,\n        tabIndex: 0,\n        onBlur: resetSelectedDay,\n        dayTestId: dayTestId\n      })]\n    })]\n  }));\n};","map":{"version":3,"names":["React","addMonths","endOfDay","isAfter","isBefore","isSameDay","isSameMonth","isWithinInterval","startOfDay","subMonths","useCalendar","useCustomEnsuredControl","isFirstDay","isLastDay","navigateDate","CalendarDays","CalendarHeader","RootComponent","getIsDaySelected","day","value","start","end","CalendarRange","_param","valueProp","defaultValue","onChange","disablePast","disableFuture","shouldDisableDate","onClose","weekStartsOn","disablePickers","prevMonthLabel","nextMonthLabel","changeMonthLabel","changeYearLabel","changeDayLabel","prevMonthIcon","nextMonthIcon","listenDayChangesForUpdate","renderDayContent","dayTestId","leftPartHeaderTestsData","rightPartHeaderTestsData","getRootRef","props","_object_without_properties","updateValue","viewDate","setViewDate","setPrevMonth","setNextMonth","focusedDay","setFocusedDay","isDayFocused","isDayDisabled","resetSelectedDay","isMonthDisabled","isYearDisabled","hintedDate","setHintedDate","useState","secondViewDate","handleKeyDown","useCallback","event","includes","key","preventDefault","newFocusedDay","getNewValue","date","isValueEmpty","isRangeSelected","onDayChange","undefined","isDaySelected","isDayActive","Boolean","isDaySelectionEnd","dayOfWeek","isHintedDaySelectionEnd","isDaySelectionStart","isHintedDaySelectionStart","onDayEnter","onDayLeave","isDayHinted","onRightPartViewDateChange","newDate","_jsxs","_object_spread_props","_object_spread","baseClassName","className","_jsx","nextMonthHidden","onPrevMonth","onKeyDown","prevMonthHidden","onNextMonth","tabIndex","onBlur"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/components/CalendarRange/CalendarRange.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport {\n  addMonths,\n  endOfDay,\n  isAfter,\n  isBefore,\n  isSameDay,\n  isSameMonth,\n  isWithinInterval,\n  startOfDay,\n  subMonths,\n} from 'date-fns';\nimport { useCalendar } from '../../hooks/useCalendar';\nimport { useCustomEnsuredControl } from '../../hooks/useEnsuredControl';\nimport { isFirstDay, isLastDay, navigateDate } from '../../lib/calendar';\nimport type { HTMLAttributesWithRootRef } from '../../types';\nimport {\n  CalendarDays,\n  type CalendarDaysProps,\n  type CalendarDaysTestsProps,\n} from '../CalendarDays/CalendarDays';\nimport {\n  CalendarHeader,\n  type CalendarHeaderProps,\n  type CalendarHeaderTestsProps,\n} from '../CalendarHeader/CalendarHeader';\nimport { RootComponent } from '../RootComponent/RootComponent';\nimport styles from './CalendarRange.module.css';\n\nexport type DateRangeType = [Date | null, Date | null];\n\nexport type CalendarRangeTestsProps = CalendarDaysTestsProps & {\n  /**\n   * Передает атрибуты `data-testid` для интерактивных элементов в заголовке календаря в левой части\n   */\n  leftPartHeaderTestsData?: CalendarHeaderTestsProps;\n  /**\n   * Передает атрибуты `data-testid` для интерактивных элементов в заголовке календаря в правой части\n   */\n  rightPartHeaderTestsData?: CalendarHeaderTestsProps;\n};\n\nexport interface CalendarRangeProps\n  extends Omit<HTMLAttributesWithRootRef<HTMLDivElement>, 'onChange' | 'defaultValue'>,\n    Pick<\n      CalendarHeaderProps,\n      | 'prevMonthLabel'\n      | 'nextMonthLabel'\n      | 'changeMonthLabel'\n      | 'changeYearLabel'\n      | 'prevMonthIcon'\n      | 'nextMonthIcon'\n    >,\n    Pick<CalendarDaysProps, 'listenDayChangesForUpdate' | 'renderDayContent'>,\n    CalendarRangeTestsProps {\n  value?: DateRangeType;\n  defaultValue?: DateRangeType;\n  disablePast?: boolean;\n  disableFuture?: boolean;\n  disablePickers?: boolean;\n  changeDayLabel?: string;\n  weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6;\n  onChange?: (value: DateRangeType | undefined) => void;\n  shouldDisableDate?: (value: Date) => boolean;\n  onClose?: () => void;\n}\n\nconst getIsDaySelected = (day: Date, value?: DateRangeType) => {\n  if (!value?.[0] || !value[1]) {\n    return false;\n  }\n\n  return isWithinInterval(day, { start: startOfDay(value[0]), end: endOfDay(value[1]) });\n};\n\n/**\n * @see https://vkcom.github.io/VKUI/#/CalendarRange\n */\nexport const CalendarRange = ({\n  value: valueProp,\n  defaultValue,\n  onChange,\n  disablePast,\n  disableFuture,\n  shouldDisableDate,\n  onClose,\n  weekStartsOn = 1,\n  disablePickers,\n  prevMonthLabel = 'Предыдущий месяц',\n  nextMonthLabel = 'Следующий месяц',\n  changeMonthLabel = 'Изменить месяц',\n  changeYearLabel = 'Изменить год',\n  changeDayLabel = 'Изменить день',\n  prevMonthIcon,\n  nextMonthIcon,\n  listenDayChangesForUpdate,\n  renderDayContent,\n  dayTestId,\n  leftPartHeaderTestsData,\n  rightPartHeaderTestsData,\n  getRootRef,\n  ...props\n}: CalendarRangeProps): React.ReactNode => {\n  const [value, updateValue] = useCustomEnsuredControl<DateRangeType | undefined>({\n    value: valueProp,\n    defaultValue,\n    onChange,\n  });\n\n  const {\n    viewDate,\n    setViewDate,\n    setPrevMonth,\n    setNextMonth,\n    focusedDay,\n    setFocusedDay,\n    isDayFocused,\n    isDayDisabled,\n    resetSelectedDay,\n    isMonthDisabled,\n    isYearDisabled,\n  } = useCalendar({ value, disableFuture, disablePast, shouldDisableDate });\n\n  const [hintedDate, setHintedDate] = React.useState<DateRangeType>();\n  const secondViewDate = addMonths(viewDate, 1);\n\n  const handleKeyDown = React.useCallback(\n    (event: React.KeyboardEvent) => {\n      if (['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'].includes(event.key)) {\n        event.preventDefault();\n      }\n\n      const newFocusedDay = navigateDate(focusedDay ?? value?.[1], event.key);\n\n      if (\n        newFocusedDay &&\n        !isSameMonth(newFocusedDay, viewDate) &&\n        !isSameMonth(newFocusedDay, addMonths(viewDate, 1))\n      ) {\n        setViewDate(newFocusedDay);\n      }\n      setFocusedDay(newFocusedDay);\n    },\n    [focusedDay, setFocusedDay, setViewDate, value, viewDate],\n  );\n\n  const getNewValue = React.useCallback(\n    (date: Date): DateRangeType => {\n      const isValueEmpty = !value || (value[0] === null && value[1] === null);\n      const isRangeSelected = value && !!value[0] && !!value[1];\n      if (isValueEmpty || isRangeSelected) {\n        return [date, null];\n      }\n\n      const [start] = value;\n      if (start && isSameDay(date, start)) {\n        return [startOfDay(start), endOfDay(start)];\n      } else if (start && isBefore(date, start)) {\n        return [startOfDay(date), endOfDay(start)];\n      } else if (start && isAfter(date, start)) {\n        return [start, endOfDay(date)];\n      }\n      return value;\n    },\n    [value],\n  );\n\n  const onDayChange = React.useCallback(\n    (date: Date) => {\n      updateValue(getNewValue(date));\n      setHintedDate(undefined);\n    },\n    [updateValue, getNewValue],\n  );\n\n  const isDaySelected = React.useCallback((day: Date) => getIsDaySelected(day, value), [value]);\n\n  const isDayActive = React.useCallback(\n    (day: Date) =>\n      Boolean((value?.[0] && isSameDay(day, value[0])) || (value?.[1] && isSameDay(day, value[1]))),\n    [value],\n  );\n\n  const isDaySelectionEnd = React.useCallback(\n    (day: Date, dayOfWeek: number) =>\n      Boolean(isLastDay(day, dayOfWeek) || (value?.[1] && isSameDay(day, value[1]))),\n    [value],\n  );\n\n  const isHintedDaySelectionEnd = React.useCallback(\n    (day: Date, dayOfWeek: number) =>\n      Boolean(isLastDay(day, dayOfWeek) || (hintedDate?.[1] && isSameDay(day, hintedDate[1]))),\n    [hintedDate],\n  );\n\n  const isDaySelectionStart = React.useCallback(\n    (day: Date, dayOfWeek: number) =>\n      Boolean(isFirstDay(day, dayOfWeek) || (value?.[0] && isSameDay(day, value[0]))),\n    [value],\n  );\n\n  const isHintedDaySelectionStart = React.useCallback(\n    (day: Date, dayOfWeek: number) =>\n      Boolean(isFirstDay(day, dayOfWeek) || (hintedDate?.[0] && isSameDay(day, hintedDate[0]))),\n    [hintedDate],\n  );\n\n  const onDayEnter = React.useCallback(\n    (date: Date) => setHintedDate(getNewValue(date)),\n    [setHintedDate, getNewValue],\n  );\n\n  const onDayLeave = React.useCallback(() => setHintedDate(undefined), [setHintedDate]);\n\n  const isDayHinted = React.useCallback(\n    (day: Date) => getIsDaySelected(day, hintedDate),\n    [hintedDate],\n  );\n\n  const onRightPartViewDateChange = React.useCallback(\n    (newDate: Date) => setViewDate(subMonths(newDate, 1)),\n    [setViewDate],\n  );\n\n  return (\n    <RootComponent {...props} baseClassName={styles.host} getRootRef={getRootRef}>\n      <div className={styles.inner}>\n        <CalendarHeader\n          viewDate={viewDate}\n          onChange={setViewDate}\n          nextMonthHidden\n          onPrevMonth={setPrevMonth}\n          disablePickers={disablePickers}\n          className={styles.header}\n          prevMonthLabel={prevMonthLabel}\n          nextMonthLabel={nextMonthLabel}\n          changeMonthLabel={changeMonthLabel}\n          changeYearLabel={changeYearLabel}\n          prevMonthIcon={prevMonthIcon}\n          isMonthDisabled={isMonthDisabled}\n          isYearDisabled={isYearDisabled}\n          {...leftPartHeaderTestsData}\n        />\n        <CalendarDays\n          viewDate={viewDate}\n          value={value}\n          weekStartsOn={weekStartsOn}\n          onKeyDown={handleKeyDown}\n          isDayFocused={isDayFocused}\n          onDayChange={onDayChange}\n          isDaySelected={isDaySelected}\n          isDayActive={isDayActive}\n          isDaySelectionEnd={isDaySelectionEnd}\n          isDaySelectionStart={isDaySelectionStart}\n          isDayHinted={isDayHinted}\n          onDayEnter={onDayEnter}\n          onDayLeave={onDayLeave}\n          isHintedDaySelectionEnd={isHintedDaySelectionEnd}\n          isHintedDaySelectionStart={isHintedDaySelectionStart}\n          isDayDisabled={isDayDisabled}\n          listenDayChangesForUpdate={listenDayChangesForUpdate}\n          renderDayContent={renderDayContent}\n          aria-label={changeDayLabel}\n          dayTestId={dayTestId}\n        />\n      </div>\n      <div className={styles.inner}>\n        <CalendarHeader\n          viewDate={secondViewDate}\n          onChange={onRightPartViewDateChange}\n          prevMonthHidden\n          onNextMonth={setNextMonth}\n          disablePickers={disablePickers}\n          className={styles.header}\n          prevMonthLabel={prevMonthLabel}\n          nextMonthLabel={nextMonthLabel}\n          changeMonthLabel={changeMonthLabel}\n          changeYearLabel={changeYearLabel}\n          nextMonthIcon={nextMonthIcon}\n          isMonthDisabled={isMonthDisabled}\n          isYearDisabled={isYearDisabled}\n          {...rightPartHeaderTestsData}\n        />\n        <CalendarDays\n          viewDate={secondViewDate}\n          value={value}\n          weekStartsOn={weekStartsOn}\n          aria-label={changeDayLabel}\n          onKeyDown={handleKeyDown}\n          isDayFocused={isDayFocused}\n          onDayChange={onDayChange}\n          isDaySelected={isDaySelected}\n          isDayActive={isDayActive}\n          isDaySelectionEnd={isDaySelectionEnd}\n          isDaySelectionStart={isDaySelectionStart}\n          isDayHinted={isDayHinted}\n          onDayEnter={onDayEnter}\n          onDayLeave={onDayLeave}\n          isHintedDaySelectionEnd={isHintedDaySelectionEnd}\n          isHintedDaySelectionStart={isHintedDaySelectionStart}\n          isDayDisabled={isDayDisabled}\n          listenDayChangesForUpdate={listenDayChangesForUpdate}\n          renderDayContent={renderDayContent}\n          tabIndex={0}\n          onBlur={resetSelectedDay}\n          dayTestId={dayTestId}\n        />\n      </div>\n    </RootComponent>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}