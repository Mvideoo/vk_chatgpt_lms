{"ast":null,"code":"'use client';\n\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nimport { useReferenceElement } from \"../../hooks/useReferenceElement.js\";\nimport { usePopover } from \"./usePopover.js\";\n/**\n * @see https://vkcom.github.io/VKUI/#/Popover\n */\nexport const Popover = _param => {\n  var {\n      children\n    } = _param,\n    restProps = _object_without_properties(_param, [\"children\"]);\n  const {\n    anchorRef,\n    anchorProps,\n    popover\n  } = usePopover(restProps);\n  const reference = useReferenceElement(children, anchorProps, anchorRef);\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [reference, popover]\n  });\n};","map":{"version":3,"names":["React","useReferenceElement","usePopover","Popover","_param","children","restProps","_object_without_properties","anchorRef","anchorProps","popover","reference","_jsxs","Fragment"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/components/Popover/Popover.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { useReferenceElement } from '../../hooks/useReferenceElement';\nimport {\n  type FloatingComponentProps,\n  type FloatingContentRenderProp,\n  type OnShownChange,\n} from '../../lib/floating';\nimport type { HTMLAttributesWithRootRef } from '../../types';\nimport { type FloatingArrowProps as FloatingArrowPropsPrivate } from '../FloatingArrow/FloatingArrow';\nimport type { FocusTrapProps } from '../FocusTrap/FocusTrap';\nimport { usePopover } from './usePopover';\n\n/**\n * @alias\n * @public\n */\nexport type PopoverArrowProps = Omit<\n  FloatingArrowPropsPrivate,\n  'getRootRef' | 'coords' | 'placement' | 'Icon'\n>;\n\n/**\n * @alias\n * @public\n */\nexport type PopoverOnShownChange = OnShownChange;\n\n/**\n * @alias\n * @public\n */\nexport type PopoverContentRenderProp = FloatingContentRenderProp;\n\ntype AllowedFloatingComponentProps = Pick<\n  FloatingComponentProps,\n  | 'arrow'\n  | 'arrowHeight'\n  | 'arrowPadding'\n  | 'placement'\n  | 'onPlacementChange'\n  | 'trigger'\n  | 'content'\n  | 'hoverDelay'\n  | 'closeAfterClick'\n  | 'offsetByMainAxis'\n  | 'offsetByCrossAxis'\n  | 'defaultShown'\n  | 'shown'\n  | 'onShownChange'\n  | 'onShownChanged'\n  | 'usePortal'\n  | 'sameWidth'\n  | 'hideWhenReferenceHidden'\n  | 'onReferenceHiddenChange'\n  | 'disabled'\n  | 'disableInteractive'\n  | 'disableCloseOnClickOutside'\n  | 'disableCloseOnEscKey'\n  | 'autoFocus'\n  | 'restoreFocus'\n  | 'children'\n  | 'zIndex'\n  | 'disableFlipMiddleware'\n  | 'customMiddlewares'\n  | 'strategy'\n  | 'disableFocusTrap'\n>;\n\n/**\n * @public\n */\nexport interface PopoverProps\n  extends Omit<AllowedFloatingComponentProps, 'autoFocus'>,\n    Omit<HTMLAttributesWithRootRef<HTMLDivElement>, keyof FloatingComponentProps> {\n  /**\n   * Отключает у всплывающего элемента стилизацию по умолчанию.\n   *\n   * У `content`:\n   * - _background_\n   * - _border-radius_\n   * - _box-shadow_\n   *\n   * У `arrow`:\n   * - _color_\n   *\n   * Используется в случае, если необходимо стилизовать по своему. Для `arrow` _color_ можно\n   * определить через в `arrowProps.iconClassName` или `arrowProps.iconStyle`.\n   */\n  noStyling?: boolean;\n  /**\n   * Позволяет набросить на стрелку пользовательские атрибуты.\n   */\n  arrowProps?: PopoverArrowProps;\n  /**\n   * Пользовательская SVG иконка.\n   *\n   * Требования:\n   *\n   * 1. Иконка по умолчанию должна быть направлена вверх (a.k.a `IconUp`).\n   * 2. Чтобы избежать проблемы с пространством между стрелкой и контентом на некоторых экранах,\n   *    растяните кривую по высоте на `1px` и увеличьте на этот размер `height` и `viewBox` SVG.\n   *    (см. https://github.com/VKCOM/VKUI/pull/4496).\n   * 3. Передайте высоту иконки в параметр `arrowHeight`. В значении высоты можно исключить хак с `1px` из п.2.\n   * 4. Убедитесь, что компонент принимает все валидные для SVG параметры.\n   * 5. Убедитесь, что SVG и её элементы наследует цвет через `fill=\"currentColor\"`.\n   */\n  ArrowIcon?: FloatingArrowPropsPrivate['Icon'];\n  /**\n   * Используется для того, чтобы не удалять поповер из DOM дерева при скрытии.\n   */\n  keepMounted?: boolean;\n  autoFocus?: FocusTrapProps['autoFocus'];\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Popover\n */\nexport const Popover = ({ children, ...restProps }: PopoverProps): React.ReactNode => {\n  const { anchorRef, anchorProps, popover } = usePopover<HTMLDivElement>(restProps);\n\n  const reference = useReferenceElement(children, anchorProps, anchorRef);\n\n  return (\n    <React.Fragment>\n      {reference}\n      {popover}\n    </React.Fragment>\n  );\n};\n"],"mappings":"AAAA;;;;AAEA,YAAYA,KAAA,MAAW;AACvB,SAASC,mBAAmB,QAAQ;AASpC,SAASC,UAAU,QAAQ;AAwG3B;;;AAGA,OAAO,MAAMC,OAAA,GAAUC,MAAA;MAAC;MAAEC;IAAQ,CAA8B,GAAAD,MAAA;IAAzBE,SAAA,GAAAC,0BAAA,CAAAH,MAAA,GAAb,W;EACxB,MAAM;IAAEI,SAAS;IAAEC,WAAW;IAAEC;EAAO,CAAE,GAAGR,UAAA,CAA2BI,SAAA;EAEvE,MAAMK,SAAA,GAAYV,mBAAA,CAAoBI,QAAA,EAAUI,WAAA,EAAaD,SAAA;EAE7D,oBACEI,KAAA,CAACZ,KAAA,CAAMa,QAAQ;eACZF,SAAA,EACAD,OAAA;;AAGP","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}