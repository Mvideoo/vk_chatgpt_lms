{"ast":null,"code":"import { DEFAULT_INPUT_VALUE } from \"./constants.js\";\n/**\n * @private\n */\nexport const isValueLikeChipOptionObject = v => typeof v === 'object' && 'value' in v;\n/**\n * @private\n */\nexport const isInputValueEmpty = input => input ? input.value === DEFAULT_INPUT_VALUE : true;\n/**\n * @private\n */\nexport const getChipOptionIndexByValueProp = (optionProp, valueProp) => {\n  const value = isValueLikeChipOptionObject(optionProp) ? optionProp.value : optionProp;\n  return valueProp.findIndex(option => option.value === value);\n};\n/**\n * @private\n */\nexport const getChipOptionIndexByHTMLElement = el => {\n  const value = el && el.dataset.index;\n  return typeof value === 'string' ? Number(value) : -1;\n};\n/**\n * @private\n */\nexport const getChipOptionValueByHTMLElement = el => {\n  const value = el && el.dataset.value;\n  return typeof value === 'string' ? value : -1;\n};\n/**\n * @private\n */\nexport const getNextChipOptionIndexByNavigateToProp = (currentIndex, navigateTo, length) => {\n  const LAST_INDEX = length - 1;\n  switch (navigateTo) {\n    case 'prev':\n      const prevIndex = currentIndex - 1;\n      return prevIndex < 0 ? LAST_INDEX : prevIndex;\n    case 'next':\n      const nextIndex = currentIndex + 1;\n      return nextIndex > LAST_INDEX ? 0 : nextIndex;\n    case 'last':\n      return LAST_INDEX;\n    default:\n      /* istanbul ignore next */return -1;\n  }\n};","map":{"version":3,"names":["DEFAULT_INPUT_VALUE","isValueLikeChipOptionObject","v","isInputValueEmpty","input","value","getChipOptionIndexByValueProp","optionProp","valueProp","findIndex","option","getChipOptionIndexByHTMLElement","el","dataset","index","Number","getChipOptionValueByHTMLElement","getNextChipOptionIndexByNavigateToProp","currentIndex","navigateTo","length","LAST_INDEX","prevIndex","nextIndex"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/components/ChipsInputBase/helpers.ts"],"sourcesContent":["import { DEFAULT_INPUT_VALUE } from './constants';\nimport type { ChipOption, ChipOptionValue, NavigateTo } from './types';\n\n/**\n * @private\n */\nexport const isValueLikeChipOptionObject = <O extends ChipOption>(v: O | ChipOptionValue): v is O =>\n  typeof v === 'object' && 'value' in v;\n\n/**\n * @private\n */\nexport const isInputValueEmpty = (input: HTMLInputElement | null): boolean =>\n  input ? input.value === DEFAULT_INPUT_VALUE : true;\n\n/**\n * @private\n */\nexport const getChipOptionIndexByValueProp = <O extends ChipOption>(\n  optionProp: O | ChipOptionValue,\n  valueProp: O[],\n): number => {\n  const value = isValueLikeChipOptionObject(optionProp) ? optionProp.value : optionProp;\n  return valueProp.findIndex((option) => option.value === value);\n};\n\n/**\n * @private\n */\nexport const getChipOptionIndexByHTMLElement = (el: HTMLElement | null): number => {\n  const value = el && el.dataset.index;\n  return typeof value === 'string' ? Number(value) : -1;\n};\n\n/**\n * @private\n */\nexport const getChipOptionValueByHTMLElement = (el: HTMLElement | null): string | -1 => {\n  const value = el && el.dataset.value;\n  return typeof value === 'string' ? value : -1;\n};\n\n/**\n * @private\n */\nexport const getNextChipOptionIndexByNavigateToProp = (\n  currentIndex: number,\n  navigateTo: NavigateTo,\n  length: number,\n): number => {\n  const LAST_INDEX = length - 1;\n  switch (navigateTo) {\n    case 'prev':\n      const prevIndex = currentIndex - 1;\n      return prevIndex < 0 ? LAST_INDEX : prevIndex;\n    case 'next':\n      const nextIndex = currentIndex + 1;\n      return nextIndex > LAST_INDEX ? 0 : nextIndex;\n    case 'last':\n      return LAST_INDEX;\n    default:\n      /* istanbul ignore next */\n      return -1;\n  }\n};\n"],"mappings":"AAAA,SAASA,mBAAmB,QAAQ;AAGpC;;;AAGA,OAAO,MAAMC,2BAAA,GAAqDC,CAAA,IAChE,OAAOA,CAAA,KAAM,YAAY,WAAWA,CAAA;AAEtC;;;AAGA,OAAO,MAAMC,iBAAA,GAAqBC,KAAA,IAChCA,KAAA,GAAQA,KAAA,CAAMC,KAAK,KAAKL,mBAAA,GAAsB;AAEhD;;;AAGA,OAAO,MAAMM,6BAAA,GAAgCA,CAC3CC,UAAA,EACAC,SAAA;EAEA,MAAMH,KAAA,GAAQJ,2BAAA,CAA4BM,UAAA,IAAcA,UAAA,CAAWF,KAAK,GAAGE,UAAA;EAC3E,OAAOC,SAAA,CAAUC,SAAS,CAAEC,MAAA,IAAWA,MAAA,CAAOL,KAAK,KAAKA,KAAA;AAC1D;AAEA;;;AAGA,OAAO,MAAMM,+BAAA,GAAmCC,EAAA;EAC9C,MAAMP,KAAA,GAAQO,EAAA,IAAMA,EAAA,CAAGC,OAAO,CAACC,KAAK;EACpC,OAAO,OAAOT,KAAA,KAAU,WAAWU,MAAA,CAAOV,KAAA,IAAS,CAAC;AACtD;AAEA;;;AAGA,OAAO,MAAMW,+BAAA,GAAmCJ,EAAA;EAC9C,MAAMP,KAAA,GAAQO,EAAA,IAAMA,EAAA,CAAGC,OAAO,CAACR,KAAK;EACpC,OAAO,OAAOA,KAAA,KAAU,WAAWA,KAAA,GAAQ,CAAC;AAC9C;AAEA;;;AAGA,OAAO,MAAMY,sCAAA,GAAyCA,CACpDC,YAAA,EACAC,UAAA,EACAC,MAAA;EAEA,MAAMC,UAAA,GAAaD,MAAA,GAAS;EAC5B,QAAQD,UAAA;IACN,KAAK;MACH,MAAMG,SAAA,GAAYJ,YAAA,GAAe;MACjC,OAAOI,SAAA,GAAY,IAAID,UAAA,GAAaC,SAAA;IACtC,KAAK;MACH,MAAMC,SAAA,GAAYL,YAAA,GAAe;MACjC,OAAOK,SAAA,GAAYF,UAAA,GAAa,IAAIE,SAAA;IACtC,KAAK;MACH,OAAOF,UAAA;IACT;MACE,0BACA,OAAO,CAAC;EACZ;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}