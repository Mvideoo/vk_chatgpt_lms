{"ast":null,"code":"'use client';\n\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nimport { classNames } from \"@vkontakte/vkjs\";\nimport { useAdaptivity } from \"../../hooks/useAdaptivity.js\";\nimport { useExternRef } from \"../../hooks/useExternRef.js\";\nimport { useMediaQueries } from \"../../hooks/useMediaQueries.js\";\nimport { ViewWidth, viewWidthToClassName } from \"../../lib/adaptivity/index.js\";\nimport { matchMediaListAddListener, matchMediaListRemoveListener } from \"../../lib/matchMedia.js\";\nimport { RootComponent } from \"../RootComponent/RootComponent.js\";\nimport { SplitColContext } from \"./SplitColContext.js\";\nconst breakpointClassNames = {\n  none: classNames(\"vkuiSplitCol__viewWidthNone\", 'vkuiInternalSplitCol--viewWidth-none'),\n  tabletMinus: \"vkuiSplitCol__viewWidthTabletMinus\",\n  smallTabletPlus: \"vkuiSplitCol__viewWidthSmallTabletPlus\",\n  tabletPlus: 'vkuiInternalSplitCol--viewWidth-tabletPlus'\n};\nfunction useTransitionAnimate(animateProp) {\n  const {\n    viewWidth\n  } = useAdaptivity();\n  const [animate, setAnimate] = React.useState(Boolean(animateProp));\n  const mediaQueries = useMediaQueries();\n  React.useEffect(() => {\n    if (animateProp !== undefined) {\n      setAnimate(animateProp);\n      return;\n    }\n    if (viewWidth !== undefined) {\n      setAnimate(viewWidth < ViewWidth.TABLET);\n      return;\n    }\n    // eslint-disable-next-line no-restricted-properties\n    const listener = () => setAnimate(!mediaQueries.smallTabletPlus.matches);\n    listener();\n    matchMediaListAddListener(mediaQueries.smallTabletPlus, listener);\n    return () => {\n      matchMediaListRemoveListener(mediaQueries.smallTabletPlus, listener);\n    };\n  }, [animateProp, viewWidth, mediaQueries]);\n  return animate;\n}\n/**\n * @see https://vkcom.github.io/VKUI/#/SplitCol\n */\nexport const SplitCol = props => {\n  const {\n      children,\n      width,\n      maxWidth,\n      minWidth,\n      animate: animateProp,\n      fixed,\n      autoSpaced,\n      stretchedOnMobile,\n      getRootRef\n    } = props,\n    restProps = _object_without_properties(props, [\"children\", \"width\", \"maxWidth\", \"minWidth\", \"animate\", \"fixed\", \"autoSpaced\", \"stretchedOnMobile\", \"getRootRef\"]);\n  const baseRef = useExternRef(getRootRef);\n  const {\n    viewWidth\n  } = useAdaptivity();\n  const animate = useTransitionAnimate(animateProp);\n  const contextValue = React.useMemo(() => ({\n    colRef: baseRef,\n    animate\n  }), [animate, baseRef]);\n  return /*#__PURE__*/_jsx(RootComponent, _object_spread_props(_object_spread({}, restProps), {\n    baseStyle: {\n      width,\n      maxWidth,\n      minWidth\n    },\n    getRootRef: baseRef,\n    baseClassName: classNames(\"vkuiSplitCol__host\", viewWidthToClassName(breakpointClassNames, viewWidth), autoSpaced && classNames(\"vkuiSplitCol__spacedAuto\", 'vkuiInternalSplitCol--spaced-auto'), fixed && \"vkuiSplitCol__fixed\", stretchedOnMobile && \"vkuiSplitCol__stretchedOnMobile\"),\n    children: /*#__PURE__*/_jsx(SplitColContext.Provider, {\n      value: contextValue,\n      children: fixed ? /*#__PURE__*/_jsx(\"div\", {\n        className: \"vkuiSplitCol__fixedInner\",\n        children: children\n      }) : children\n    })\n  }));\n};","map":{"version":3,"names":["React","classNames","useAdaptivity","useExternRef","useMediaQueries","ViewWidth","viewWidthToClassName","matchMediaListAddListener","matchMediaListRemoveListener","RootComponent","SplitColContext","breakpointClassNames","none","tabletMinus","smallTabletPlus","tabletPlus","useTransitionAnimate","animateProp","viewWidth","animate","setAnimate","useState","Boolean","mediaQueries","useEffect","undefined","TABLET","listener","matches","SplitCol","props","children","width","maxWidth","minWidth","fixed","autoSpaced","stretchedOnMobile","getRootRef","restProps","_object_without_properties","baseRef","contextValue","useMemo","colRef","_jsx","_object_spread_props","_object_spread","baseStyle","baseClassName","Provider","value","className"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/components/SplitCol/SplitCol.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { useMediaQueries } from '../../hooks/useMediaQueries';\nimport { ViewWidth, viewWidthToClassName } from '../../lib/adaptivity';\nimport { matchMediaListAddListener, matchMediaListRemoveListener } from '../../lib/matchMedia';\nimport type { HTMLAttributesWithRootRef } from '../../types';\nimport { RootComponent } from '../RootComponent/RootComponent';\nimport { SplitColContext } from './SplitColContext';\nimport styles from './SplitCol.module.css';\n\nconst breakpointClassNames = {\n  none: classNames(styles.viewWidthNone, 'vkuiInternalSplitCol--viewWidth-none'),\n  tabletMinus: styles.viewWidthTabletMinus,\n  smallTabletPlus: styles.viewWidthSmallTabletPlus,\n  tabletPlus: 'vkuiInternalSplitCol--viewWidth-tabletPlus',\n};\n\nfunction useTransitionAnimate(animateProp?: boolean) {\n  const { viewWidth } = useAdaptivity();\n  const [animate, setAnimate] = React.useState(Boolean(animateProp));\n  const mediaQueries = useMediaQueries();\n\n  React.useEffect(() => {\n    if (animateProp !== undefined) {\n      setAnimate(animateProp);\n      return;\n    }\n\n    if (viewWidth !== undefined) {\n      setAnimate(viewWidth < ViewWidth.TABLET);\n      return;\n    }\n\n    // eslint-disable-next-line no-restricted-properties\n    const listener = () => setAnimate(!mediaQueries.smallTabletPlus.matches);\n    listener();\n\n    matchMediaListAddListener(mediaQueries.smallTabletPlus, listener);\n    return () => {\n      matchMediaListRemoveListener(mediaQueries.smallTabletPlus, listener);\n    };\n  }, [animateProp, viewWidth, mediaQueries]);\n\n  return animate;\n}\n\nexport interface SplitColProps extends HTMLAttributesWithRootRef<HTMLDivElement> {\n  width?: number | string;\n  maxWidth?: number | string;\n  minWidth?: number | string;\n  /**\n   * Если false, то переходы между Panel происходят без анимации\n   */\n  animate?: boolean;\n  /**\n   * Если true, то добавляются боковые отступы фиксированной величины при ширине больше чем `smallTablet`\n   */\n  autoSpaced?: boolean;\n  fixed?: boolean;\n  /**\n   * Если true, то ширина контейнера становится 100% при ширине меньше чем `tablet`\n   */\n  stretchedOnMobile?: boolean;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/SplitCol\n */\nexport const SplitCol = (props: SplitColProps): React.ReactNode => {\n  const {\n    children,\n    width,\n    maxWidth,\n    minWidth,\n    animate: animateProp,\n    fixed,\n    autoSpaced,\n    stretchedOnMobile,\n    getRootRef,\n    ...restProps\n  } = props;\n  const baseRef = useExternRef(getRootRef);\n  const { viewWidth } = useAdaptivity();\n  const animate = useTransitionAnimate(animateProp);\n\n  const contextValue = React.useMemo(\n    () => ({\n      colRef: baseRef,\n      animate,\n    }),\n    [animate, baseRef],\n  );\n\n  return (\n    <RootComponent\n      {...restProps}\n      baseStyle={{\n        width,\n        maxWidth,\n        minWidth,\n      }}\n      getRootRef={baseRef}\n      baseClassName={classNames(\n        styles.host,\n        viewWidthToClassName(breakpointClassNames, viewWidth),\n        autoSpaced && classNames(styles.spacedAuto, 'vkuiInternalSplitCol--spaced-auto'),\n        fixed && styles.fixed,\n        stretchedOnMobile && styles.stretchedOnMobile,\n      )}\n    >\n      <SplitColContext.Provider value={contextValue}>\n        {fixed ? <div className={styles.fixedInner}>{children}</div> : children}\n      </SplitColContext.Provider>\n    </RootComponent>\n  );\n};\n"],"mappings":"AAAA;;;;;;AAEA,YAAYA,KAAA,MAAW;AACvB,SAASC,UAAU,QAAQ;AAC3B,SAASC,aAAa,QAAQ;AAC9B,SAASC,YAAY,QAAQ;AAC7B,SAASC,eAAe,QAAQ;AAChC,SAASC,SAAS,EAAEC,oBAAoB,QAAQ;AAChD,SAASC,yBAAyB,EAAEC,4BAA4B,QAAQ;AAExE,SAASC,aAAa,QAAQ;AAC9B,SAASC,eAAe,QAAQ;AAGhC,MAAMC,oBAAA,GAAuB;EAC3BC,IAAA,EAAMX,UAAA,gCAAiC;EACvCY,WAAW;EACXC,eAAe;EACfC,UAAA,EAAY;AACd;AAEA,SAASC,qBAAqBC,WAAqB;EACjD,MAAM;IAAEC;EAAS,CAAE,GAAGhB,aAAA;EACtB,MAAM,CAACiB,OAAA,EAASC,UAAA,CAAW,GAAGpB,KAAA,CAAMqB,QAAQ,CAACC,OAAA,CAAQL,WAAA;EACrD,MAAMM,YAAA,GAAenB,eAAA;EAErBJ,KAAA,CAAMwB,SAAS,CAAC;IACd,IAAIP,WAAA,KAAgBQ,SAAA,EAAW;MAC7BL,UAAA,CAAWH,WAAA;MACX;IACF;IAEA,IAAIC,SAAA,KAAcO,SAAA,EAAW;MAC3BL,UAAA,CAAWF,SAAA,GAAYb,SAAA,CAAUqB,MAAM;MACvC;IACF;IAEA;IACA,MAAMC,QAAA,GAAWA,CAAA,KAAMP,UAAA,CAAW,CAACG,YAAA,CAAaT,eAAe,CAACc,OAAO;IACvED,QAAA;IAEApB,yBAAA,CAA0BgB,YAAA,CAAaT,eAAe,EAAEa,QAAA;IACxD,OAAO;MACLnB,4BAAA,CAA6Be,YAAA,CAAaT,eAAe,EAAEa,QAAA;IAC7D;EACF,GAAG,CAACV,WAAA,EAAaC,SAAA,EAAWK,YAAA,CAAa;EAEzC,OAAOJ,OAAA;AACT;AAqBA;;;AAGA,OAAO,MAAMU,QAAA,GAAYC,KAAA;EACvB,MAAM;MACJC,QAAQ;MACRC,KAAK;MACLC,QAAQ;MACRC,QAAQ;MACRf,OAAA,EAASF,WAAW;MACpBkB,KAAK;MACLC,UAAU;MACVC,iBAAiB;MACjBC;IAAU,CAEX,GAAGR,KAAA;IADCS,SAAA,GAAAC,0BAAA,CACDV,KAAA,GAVF,YACA,SACA,YACA,YACA,WACA,SACA,cACA,qBACA,a;EAGF,MAAMW,OAAA,GAAUtC,YAAA,CAAamC,UAAA;EAC7B,MAAM;IAAEpB;EAAS,CAAE,GAAGhB,aAAA;EACtB,MAAMiB,OAAA,GAAUH,oBAAA,CAAqBC,WAAA;EAErC,MAAMyB,YAAA,GAAe1C,KAAA,CAAM2C,OAAO,CAChC,OAAO;IACLC,MAAA,EAAQH,OAAA;IACRtB;EACF,IACA,CAACA,OAAA,EAASsB,OAAA,CAAQ;EAGpB,oBACEI,IAAA,CAACpC,aAAA,EAAAqC,oBAAA,CAAAC,cAAA,KACKR,SAAA;IACJS,SAAA,EAAW;MACThB,KAAA;MACAC,QAAA;MACAC;IACF;IACAI,UAAA,EAAYG,OAAA;IACZQ,aAAA,EAAehD,UAAA,uBAEbK,oBAAA,CAAqBK,oBAAA,EAAsBO,SAAA,GAC3CkB,UAAA,IAAcnC,UAAA,6BAA8B,sCAC5CkC,KAAA,2BACAE,iBAAA;cAGF,aAAAQ,IAAA,CAACnC,eAAA,CAAgBwC,QAAQ;MAACC,KAAA,EAAOT,YAAA;gBAC9BP,KAAA,gBAAQU,IAAA,CAAC;QAAIO,SAAS;kBAAsBrB;WAAkBA;;;AAIvE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}