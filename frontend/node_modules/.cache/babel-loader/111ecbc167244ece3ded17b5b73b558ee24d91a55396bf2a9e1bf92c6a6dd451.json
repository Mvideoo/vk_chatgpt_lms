{"ast":null,"code":"import { canUseDOM } from \"../dom.js\";\n/*\n * Получает координату по оси абсцисс из touch- или mouse-события\n */\nconst coordX = event => {\n  if ('clientX' in event) {\n    return event.clientX;\n  }\n  return event.changedTouches && event.changedTouches[0].clientX;\n};\n/*\n * Получает координату по оси ординат из touch- или mouse-события\n */\nconst coordY = event => {\n  if ('clientY' in event) {\n    return event.clientY;\n  }\n  return event.changedTouches && event.changedTouches[0].clientY;\n};\n// eslint-disable-next-line no-restricted-globals\nconst touchEnabled = () => canUseDOM && 'ontouchstart' in window;\n/*\n * Возвращает массив поддерживаемых событий\n * Если браузер поддерживает pointer events или подключена handjs, вернет события указателя.\n * Если нет, используем события мыши\n */\nfunction getSupportedEvents() {\n  if (touchEnabled()) {\n    return ['touchstart', 'touchmove', 'touchend', 'touchcancel'];\n  }\n  return ['mousedown', 'mousemove', 'mouseup', 'mouseleave'];\n}\n/*\n * Рассчитывает \"сопротивление\" для iOS тач-событий\n */\nfunction rubber(offset, dimension, resistanceRate, isAndroid) {\n  if (isAndroid || offset < 0) {\n    return offset;\n  }\n  const offsettedResistance = offset * resistanceRate;\n  return offsettedResistance * dimension / (offsettedResistance + dimension);\n}\nexport { getSupportedEvents, coordX, coordY, touchEnabled, rubber };","map":{"version":3,"names":["canUseDOM","coordX","event","clientX","changedTouches","coordY","clientY","touchEnabled","window","getSupportedEvents","rubber","offset","dimension","resistanceRate","isAndroid","offsettedResistance"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/lib/touch/functions.ts"],"sourcesContent":["import { canUseDOM } from '../dom';\n\nexport interface VKUITouchEvent extends MouseEvent, TouchEvent {}\nexport type VKUITouchEventHandler = (e: VKUITouchEvent) => void;\n\n/*\n * Получает координату по оси абсцисс из touch- или mouse-события\n */\nconst coordX = (event: MouseEvent | TouchEvent): number => {\n  if ('clientX' in event) {\n    return event.clientX;\n  }\n  return event.changedTouches && event.changedTouches[0].clientX;\n};\n\n/*\n * Получает координату по оси ординат из touch- или mouse-события\n */\nconst coordY = (event: MouseEvent | TouchEvent): number => {\n  if ('clientY' in event) {\n    return event.clientY;\n  }\n  return event.changedTouches && event.changedTouches[0].clientY;\n};\n\n// eslint-disable-next-line no-restricted-globals\nconst touchEnabled = (): boolean => canUseDOM && 'ontouchstart' in window;\n\n/*\n * Возвращает массив поддерживаемых событий\n * Если браузер поддерживает pointer events или подключена handjs, вернет события указателя.\n * Если нет, используем события мыши\n */\nfunction getSupportedEvents(): string[] {\n  if (touchEnabled()) {\n    return ['touchstart', 'touchmove', 'touchend', 'touchcancel'];\n  }\n\n  return ['mousedown', 'mousemove', 'mouseup', 'mouseleave'];\n}\n\n/*\n * Рассчитывает \"сопротивление\" для iOS тач-событий\n */\nfunction rubber(\n  offset: number,\n  dimension: number,\n  resistanceRate: number,\n  isAndroid: boolean,\n): number {\n  if (isAndroid || offset < 0) {\n    return offset;\n  }\n\n  const offsettedResistance = offset * resistanceRate;\n  return (offsettedResistance * dimension) / (offsettedResistance + dimension);\n}\n\nexport { getSupportedEvents, coordX, coordY, touchEnabled, rubber };\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ;AAK1B;;;AAGA,MAAMC,MAAA,GAAUC,KAAA;EACd,IAAI,aAAaA,KAAA,EAAO;IACtB,OAAOA,KAAA,CAAMC,OAAO;EACtB;EACA,OAAOD,KAAA,CAAME,cAAc,IAAIF,KAAA,CAAME,cAAc,CAAC,EAAE,CAACD,OAAO;AAChE;AAEA;;;AAGA,MAAME,MAAA,GAAUH,KAAA;EACd,IAAI,aAAaA,KAAA,EAAO;IACtB,OAAOA,KAAA,CAAMI,OAAO;EACtB;EACA,OAAOJ,KAAA,CAAME,cAAc,IAAIF,KAAA,CAAME,cAAc,CAAC,EAAE,CAACE,OAAO;AAChE;AAEA;AACA,MAAMC,YAAA,GAAeA,CAAA,KAAeP,SAAA,IAAa,kBAAkBQ,MAAA;AAEnE;;;;;AAKA,SAASC,mBAAA;EACP,IAAIF,YAAA,IAAgB;IAClB,OAAO,CAAC,cAAc,aAAa,YAAY,cAAc;EAC/D;EAEA,OAAO,CAAC,aAAa,aAAa,WAAW,aAAa;AAC5D;AAEA;;;AAGA,SAASG,OACPC,MAAc,EACdC,SAAiB,EACjBC,cAAsB,EACtBC,SAAkB;EAElB,IAAIA,SAAA,IAAaH,MAAA,GAAS,GAAG;IAC3B,OAAOA,MAAA;EACT;EAEA,MAAMI,mBAAA,GAAsBJ,MAAA,GAASE,cAAA;EACrC,OAAOE,mBAAC,GAAsBH,SAAA,IAAcG,mBAAA,GAAsBH,SAAQ;AAC5E;AAEA,SAASH,kBAAkB,EAAER,MAAM,EAAEI,MAAM,EAAEE,YAAY,EAAEG,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}