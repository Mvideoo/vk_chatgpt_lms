{"ast":null,"code":"import * as React from \"react\";\nimport { useStableCallback } from \"../../hooks/useStableCallback.js\";\nimport { useDOM } from \"../../lib/dom.js\";\nexport function useAutoPlay(_ref) {\n  let {\n    timeout,\n    slideIndex,\n    onNext\n  } = _ref;\n  const {\n    document\n  } = useDOM();\n  const [paused, setPaused] = React.useState(false);\n  const timeoutRef = React.useRef(null);\n  const callbackFn = useStableCallback(onNext);\n  const pause = React.useCallback(() => setPaused(true), []);\n  const resume = React.useCallback(() => setPaused(false), []);\n  // Выносим функции очистки и старта таймера в отдельные функции\n  const clearAutoPlayTimeout = React.useCallback(() => {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = null;\n    }\n  }, []);\n  const startAutoPlayTimeout = React.useCallback(() => {\n    if (!document || !timeout || paused) {\n      return;\n    }\n    if (document.visibilityState === 'visible') {\n      clearAutoPlayTimeout();\n      timeoutRef.current = setTimeout(callbackFn, timeout);\n    } else {\n      clearAutoPlayTimeout();\n    }\n  }, [document, timeout, paused, clearAutoPlayTimeout, callbackFn]);\n  // Основной эффект для управления автопроигрыванием\n  React.useEffect(function initializeAutoPlay() {\n    if (!document || !timeout || paused) {\n      return;\n    }\n    startAutoPlayTimeout();\n    document.addEventListener('visibilitychange', startAutoPlayTimeout);\n    return () => {\n      clearAutoPlayTimeout();\n      document.removeEventListener('visibilitychange', startAutoPlayTimeout);\n    };\n  }, [document, timeout, slideIndex, startAutoPlayTimeout, clearAutoPlayTimeout, paused]);\n  return {\n    resume,\n    pause\n  };\n}","map":{"version":3,"names":["React","useStableCallback","useDOM","useAutoPlay","_ref","timeout","slideIndex","onNext","document","paused","setPaused","useState","timeoutRef","useRef","callbackFn","pause","useCallback","resume","clearAutoPlayTimeout","current","clearTimeout","startAutoPlayTimeout","visibilityState","setTimeout","useEffect","initializeAutoPlay","addEventListener","removeEventListener"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/components/Gallery/hooks.ts"],"sourcesContent":["import * as React from 'react';\nimport { useStableCallback } from '../../hooks/useStableCallback';\nimport { useDOM } from '../../lib/dom';\nimport type { TimeoutId } from '../../types';\n\nexport interface AutoPlayConfig {\n  timeout: number;\n  slideIndex: number;\n  onNext: VoidFunction;\n}\n\nexport function useAutoPlay({ timeout, slideIndex, onNext }: AutoPlayConfig): {\n  pause: VoidFunction;\n  resume: VoidFunction;\n} {\n  const { document } = useDOM();\n  const [paused, setPaused] = React.useState(false);\n  const timeoutRef = React.useRef<TimeoutId>(null);\n  const callbackFn = useStableCallback(onNext);\n\n  const pause = React.useCallback(() => setPaused(true), []);\n  const resume = React.useCallback(() => setPaused(false), []);\n\n  // Выносим функции очистки и старта таймера в отдельные функции\n  const clearAutoPlayTimeout = React.useCallback(() => {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = null;\n    }\n  }, []);\n\n  const startAutoPlayTimeout = React.useCallback(() => {\n    if (!document || !timeout || paused) {\n      return;\n    }\n\n    if (document.visibilityState === 'visible') {\n      clearAutoPlayTimeout();\n      timeoutRef.current = setTimeout(callbackFn, timeout);\n    } else {\n      clearAutoPlayTimeout();\n    }\n  }, [document, timeout, paused, clearAutoPlayTimeout, callbackFn]);\n\n  // Основной эффект для управления автопроигрыванием\n  React.useEffect(\n    function initializeAutoPlay() {\n      if (!document || !timeout || paused) {\n        return;\n      }\n\n      startAutoPlayTimeout();\n      document.addEventListener('visibilitychange', startAutoPlayTimeout);\n\n      return () => {\n        clearAutoPlayTimeout();\n        document.removeEventListener('visibilitychange', startAutoPlayTimeout);\n      };\n    },\n    [document, timeout, slideIndex, startAutoPlayTimeout, clearAutoPlayTimeout, paused],\n  );\n\n  return {\n    resume,\n    pause,\n  };\n}\n"],"mappings":"AAAA,YAAYA,KAAA,MAAW;AACvB,SAASC,iBAAiB,QAAQ;AAClC,SAASC,MAAM,QAAQ;AASvB,OAAO,SAASC,YAAAC,IAAA,EAA2D;EAAA,IAA/C;IAAEC,OAAO;IAAEC,UAAU;IAAEC;EAAM,CAAkB,GAAAH,IAAA;EAIzE,MAAM;IAAEI;EAAQ,CAAE,GAAGN,MAAA;EACrB,MAAM,CAACO,MAAA,EAAQC,SAAA,CAAU,GAAGV,KAAA,CAAMW,QAAQ,CAAC;EAC3C,MAAMC,UAAA,GAAaZ,KAAA,CAAMa,MAAM,CAAY;EAC3C,MAAMC,UAAA,GAAab,iBAAA,CAAkBM,MAAA;EAErC,MAAMQ,KAAA,GAAQf,KAAA,CAAMgB,WAAW,CAAC,MAAMN,SAAA,CAAU,OAAO,EAAE;EACzD,MAAMO,MAAA,GAASjB,KAAA,CAAMgB,WAAW,CAAC,MAAMN,SAAA,CAAU,QAAQ,EAAE;EAE3D;EACA,MAAMQ,oBAAA,GAAuBlB,KAAA,CAAMgB,WAAW,CAAC;IAC7C,IAAIJ,UAAA,CAAWO,OAAO,EAAE;MACtBC,YAAA,CAAaR,UAAA,CAAWO,OAAO;MAC/BP,UAAA,CAAWO,OAAO,GAAG;IACvB;EACF,GAAG,EAAE;EAEL,MAAME,oBAAA,GAAuBrB,KAAA,CAAMgB,WAAW,CAAC;IAC7C,IAAI,CAACR,QAAA,IAAY,CAACH,OAAA,IAAWI,MAAA,EAAQ;MACnC;IACF;IAEA,IAAID,QAAA,CAASc,eAAe,KAAK,WAAW;MAC1CJ,oBAAA;MACAN,UAAA,CAAWO,OAAO,GAAGI,UAAA,CAAWT,UAAA,EAAYT,OAAA;IAC9C,OAAO;MACLa,oBAAA;IACF;EACF,GAAG,CAACV,QAAA,EAAUH,OAAA,EAASI,MAAA,EAAQS,oBAAA,EAAsBJ,UAAA,CAAW;EAEhE;EACAd,KAAA,CAAMwB,SAAS,CACb,SAASC,mBAAA;IACP,IAAI,CAACjB,QAAA,IAAY,CAACH,OAAA,IAAWI,MAAA,EAAQ;MACnC;IACF;IAEAY,oBAAA;IACAb,QAAA,CAASkB,gBAAgB,CAAC,oBAAoBL,oBAAA;IAE9C,OAAO;MACLH,oBAAA;MACAV,QAAA,CAASmB,mBAAmB,CAAC,oBAAoBN,oBAAA;IACnD;EACF,GACA,CAACb,QAAA,EAAUH,OAAA,EAASC,UAAA,EAAYe,oBAAA,EAAsBH,oBAAA,EAAsBT,MAAA,CAAO;EAGrF,OAAO;IACLQ,MAAA;IACAF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}