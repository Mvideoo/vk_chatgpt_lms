{"ast":null,"code":"'use client';\n\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nimport { classNames } from \"@vkontakte/vkjs\";\nimport { useAdaptivity } from \"../../hooks/useAdaptivity.js\";\nimport { AppRootContext } from \"../AppRoot/AppRootContext.js\";\nimport { NavPanelIdContext } from \"../NavIdContext/NavIdContext.js\";\nimport { OnboardingTooltipContainer } from \"../OnboardingTooltip/OnboardingTooltipContainer.js\";\nimport { RootComponent } from \"../RootComponent/RootComponent.js\";\nimport { Touch } from \"../Touch/Touch.js\";\nconst sizeXClassNames = {\n  none: \"vkuiPanel__sizeXNone\",\n  compact: \"vkuiPanel__sizeXCompact\",\n  regular: \"vkuiPanel__sizeXRegular\"\n};\nconst stylesMode = {\n  none: \"vkuiPanel__modeNone\",\n  plain: \"vkuiPanel__modePlain\",\n  card: \"vkuiPanel__modeCard\"\n};\n/**\n * @see https://vkcom.github.io/VKUI/#/Panel\n */\nexport const Panel = _param => {\n  var {\n      centered = false,\n      children,\n      nav,\n      mode: modeProp,\n      disableBackground\n    } = _param,\n    restProps = _object_without_properties(_param, [\"centered\", \"children\", \"nav\", \"mode\", \"disableBackground\"]);\n  const {\n    sizeX = 'none'\n  } = useAdaptivity();\n  const mode = usePanelMode(modeProp, sizeX);\n  return /*#__PURE__*/_jsx(NavPanelIdContext.Provider, {\n    value: restProps.id || nav,\n    children: /*#__PURE__*/_jsx(RootComponent, _object_spread_props(_object_spread({}, restProps), {\n      baseClassName: classNames(\"vkuiPanel__host\", sizeXClassNames[sizeX], centered && 'vkuiInternalPanel--centered', disableBackground && \"vkuiPanel__disableBackground\", stylesMode[mode]),\n      children: /*#__PURE__*/_jsxs(Touch, {\n        Component: OnboardingTooltipContainer,\n        className: classNames(\"vkuiPanel__in\", 'vkuiInternalPanel__in'),\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: \"vkuiPanel__inBefore\"\n        }), centered ? /*#__PURE__*/_jsx(\"div\", {\n          className: \"vkuiPanel__centered\",\n          children: children\n        }) : children, /*#__PURE__*/_jsx(\"div\", {\n          className: \"vkuiPanel__inAfter\"\n        })]\n      })\n    }))\n  });\n};\nfunction usePanelMode(modeProp, sizeX) {\n  const {\n    layout\n  } = React.useContext(AppRootContext);\n  if (modeProp) {\n    return modeProp;\n  }\n  if (layout) {\n    return layout;\n  }\n  if (sizeX !== 'none') {\n    return sizeX === 'regular' ? 'card' : 'plain';\n  }\n  return 'none';\n}","map":{"version":3,"names":["React","classNames","useAdaptivity","AppRootContext","NavPanelIdContext","OnboardingTooltipContainer","RootComponent","Touch","sizeXClassNames","none","compact","regular","stylesMode","plain","card","Panel","_param","centered","children","nav","mode","modeProp","disableBackground","restProps","_object_without_properties","sizeX","usePanelMode","_jsx","Provider","value","id","_object_spread_props","_object_spread","baseClassName","_jsxs","Component","className","layout","useContext"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/components/Panel/Panel.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\nimport type { SizeTypeValues } from '../../lib/adaptivity';\nimport type { NavIdProps } from '../../lib/getNavId';\nimport type { HTMLAttributesWithRootRef } from '../../types';\nimport { AppRootContext } from '../AppRoot/AppRootContext';\nimport { NavPanelIdContext } from '../NavIdContext/NavIdContext';\nimport { OnboardingTooltipContainer } from '../OnboardingTooltip/OnboardingTooltipContainer';\nimport { RootComponent } from '../RootComponent/RootComponent';\nimport { Touch } from '../Touch/Touch';\nimport styles from './Panel.module.css';\n\nconst sizeXClassNames = {\n  none: styles.sizeXNone,\n  compact: styles.sizeXCompact,\n  regular: styles.sizeXRegular,\n};\n\nconst stylesMode = {\n  none: styles.modeNone,\n  plain: styles.modePlain,\n  card: styles.modeCard,\n};\n\nexport interface PanelProps extends HTMLAttributesWithRootRef<HTMLDivElement>, NavIdProps {\n  centered?: boolean;\n  /**\n   * Тип оформления панели.\n   *\n   * Позволяет переопределить тип оформления панели,\n   * заданный через адаптивность или свойство layout у [AppRoot](https://vkcom.github.io/VKUI/#/AppRoot),\n   * глобально задающим тип оформления макета.\n   *\n   * Если установлен `card` - Panel имеет фон отличный от фона контента.\n   * Позволяет компоненту [Group](https://vkcom.github.io/VKUI/#/Group) со свойством mode='card' точечно выглядеть как карточка.\n   * Тип `plain` — соответствует фону по умолчанию.\n   */\n  mode?: 'plain' | 'card';\n  /**\n   * Отключает задний фон\n   */\n  disableBackground?: boolean;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Panel\n */\nexport const Panel = ({\n  centered = false,\n  children,\n  nav,\n  mode: modeProp,\n  disableBackground,\n  ...restProps\n}: PanelProps): React.ReactNode => {\n  const { sizeX = 'none' } = useAdaptivity();\n\n  const mode = usePanelMode(modeProp, sizeX);\n\n  return (\n    <NavPanelIdContext.Provider value={restProps.id || nav}>\n      <RootComponent\n        {...restProps}\n        baseClassName={classNames(\n          styles.host,\n          sizeXClassNames[sizeX],\n          centered && 'vkuiInternalPanel--centered',\n          disableBackground && styles.disableBackground,\n          stylesMode[mode],\n        )}\n      >\n        <Touch\n          Component={OnboardingTooltipContainer}\n          className={classNames(styles.in, 'vkuiInternalPanel__in')}\n        >\n          <div className={styles.inBefore} />\n          {centered ? <div className={styles.centered}>{children}</div> : children}\n          <div className={styles.inAfter} />\n        </Touch>\n      </RootComponent>\n    </NavPanelIdContext.Provider>\n  );\n};\n\nfunction usePanelMode(\n  modeProp: PanelProps['mode'],\n  sizeX: SizeTypeValues | 'none',\n): 'plain' | 'card' | 'none' {\n  const { layout } = React.useContext(AppRootContext);\n\n  if (modeProp) {\n    return modeProp;\n  }\n\n  if (layout) {\n    return layout;\n  }\n\n  if (sizeX !== 'none') {\n    return sizeX === 'regular' ? 'card' : 'plain';\n  }\n\n  return 'none';\n}\n"],"mappings":"AAAA;;;;;;AAEA,YAAYA,KAAA,MAAW;AACvB,SAASC,UAAU,QAAQ;AAC3B,SAASC,aAAa,QAAQ;AAI9B,SAASC,cAAc,QAAQ;AAC/B,SAASC,iBAAiB,QAAQ;AAClC,SAASC,0BAA0B,QAAQ;AAC3C,SAASC,aAAa,QAAQ;AAC9B,SAASC,KAAK,QAAQ;AAGtB,MAAMC,eAAA,GAAkB;EACtBC,IAAI;EACJC,OAAO;EACPC,OAAO;AACT;AAEA,MAAMC,UAAA,GAAa;EACjBH,IAAI;EACJI,KAAK;EACLC,IAAI;AACN;AAsBA;;;AAGA,OAAO,MAAMC,KAAA,GAAQC,MAAA;MAAC;MACpBC,QAAA,GAAW,KAAK;MAChBC,QAAQ;MACRC,GAAG;MACHC,IAAA,EAAMC,QAAQ;MACdC;IAAiB,CAEN,GAAAN,MAAA;IADRO,SAAA,GAAAC,0BAAA,CAAAR,MAAA,GALH,YACA,YACA,OACA,QACA,oB;EAGA,MAAM;IAAES,KAAA,GAAQ;EAAM,CAAE,GAAGvB,aAAA;EAE3B,MAAMkB,IAAA,GAAOM,YAAA,CAAaL,QAAA,EAAUI,KAAA;EAEpC,oBACEE,IAAA,CAACvB,iBAAA,CAAkBwB,QAAQ;IAACC,KAAA,EAAON,SAAA,CAAUO,EAAE,IAAIX,GAAA;cACjD,aAAAQ,IAAA,CAACrB,aAAA,EAAAyB,oBAAA,CAAAC,cAAA,KACKT,SAAA;MACJU,aAAA,EAAehC,UAAA,oBAEbO,eAAe,CAACiB,KAAA,CAAM,EACtBR,QAAA,IAAY,+BACZK,iBAAA,oCACAV,UAAU,CAACQ,IAAA,CAAK;gBAGlB,aAAAc,KAAA,CAAC3B,KAAA;QACC4B,SAAA,EAAW9B,0BAAA;QACX+B,SAAA,EAAWnC,UAAA,kBAAsB;gCAEjC0B,IAAA,CAAC;UAAIS,SAAS;YACbnB,QAAA,gBAAWU,IAAA,CAAC;UAAIS,SAAS;oBAAoBlB;aAAkBA,QAAA,E,aAChES,IAAA,CAAC;UAAIS,SAAS;;;;;AAKxB;AAEA,SAASV,aACPL,QAA4B,EAC5BI,KAA8B;EAE9B,MAAM;IAAEY;EAAM,CAAE,GAAGrC,KAAA,CAAMsC,UAAU,CAACnC,cAAA;EAEpC,IAAIkB,QAAA,EAAU;IACZ,OAAOA,QAAA;EACT;EAEA,IAAIgB,MAAA,EAAQ;IACV,OAAOA,MAAA;EACT;EAEA,IAAIZ,KAAA,KAAU,QAAQ;IACpB,OAAOA,KAAA,KAAU,YAAY,SAAS;EACxC;EAEA,OAAO;AACT","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}