{"ast":null,"code":"'use client';\n\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nimport { classNames } from \"@vkontakte/vkjs\";\nimport { useAdaptivityConditionalRender } from \"../../hooks/useAdaptivityConditionalRender/index.js\";\nimport { CustomSelect } from \"../CustomSelect/CustomSelect.js\";\nimport { NativeSelect } from \"../NativeSelect/NativeSelect.js\";\n/**\n * @see https://vkcom.github.io/VKUI/#/Select\n */\nexport const Select = _param => {\n  var {\n      children,\n      className\n    } = _param,\n    props = _object_without_properties(_param, [\"children\", \"className\"]);\n  const {\n      options = [],\n      searchable,\n      emptyText,\n      onInputChange,\n      filterFn,\n      popupDirection,\n      renderOption,\n      renderDropdown,\n      fetching,\n      onClose,\n      onOpen,\n      icon,\n      ClearButton,\n      allowClearButton,\n      clearButtonTestId,\n      dropdownOffsetDistance,\n      dropdownAutoWidth,\n      forceDropdownPortal,\n      noMaxHeight,\n      labelTextTestId,\n      nativeSelectTestId,\n      after,\n      mode,\n      pattern,\n      minLength,\n      maxLength,\n      readOnly,\n      getSelectInputRef,\n      overscrollBehavior,\n      beforeAlign,\n      afterAlign,\n      onInputKeyDown\n    } = props,\n    restProps = _object_without_properties(props, [\"options\", \"searchable\", \"emptyText\", \"onInputChange\", \"filterFn\", \"popupDirection\", \"renderOption\", \"renderDropdown\", \"fetching\", \"onClose\", \"onOpen\", \"icon\", \"ClearButton\", \"allowClearButton\", \"clearButtonTestId\", \"dropdownOffsetDistance\", \"dropdownAutoWidth\", \"forceDropdownPortal\", \"noMaxHeight\", \"labelTextTestId\", \"nativeSelectTestId\", \"after\", \"mode\", \"pattern\", \"minLength\", \"maxLength\", \"readOnly\", \"getSelectInputRef\", \"overscrollBehavior\", \"beforeAlign\", \"afterAlign\", \"onInputKeyDown\"]);\n  const {\n    deviceType\n  } = useAdaptivityConditionalRender();\n  const nativeProps = restProps;\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [deviceType.desktop && /*#__PURE__*/_jsx(CustomSelect, _object_spread({\n      className: classNames(className, deviceType.desktop.className)\n    }, props)), deviceType.mobile && /*#__PURE__*/_jsx(NativeSelect, _object_spread_props(_object_spread({\n      className: classNames(className, deviceType.mobile.className)\n    }, nativeProps), {\n      children: options.map(_ref => {\n        let {\n          label,\n          value,\n          disabled\n        } = _ref;\n        return /*#__PURE__*/_jsx(\"option\", {\n          value: value,\n          disabled: disabled,\n          children: label\n        }, `${value}`);\n      })\n    }))]\n  });\n};","map":{"version":3,"names":["React","classNames","useAdaptivityConditionalRender","CustomSelect","NativeSelect","Select","_param","children","className","props","_object_without_properties","options","searchable","emptyText","onInputChange","filterFn","popupDirection","renderOption","renderDropdown","fetching","onClose","onOpen","icon","ClearButton","allowClearButton","clearButtonTestId","dropdownOffsetDistance","dropdownAutoWidth","forceDropdownPortal","noMaxHeight","labelTextTestId","nativeSelectTestId","after","mode","pattern","minLength","maxLength","readOnly","getSelectInputRef","overscrollBehavior","beforeAlign","afterAlign","onInputKeyDown","restProps","deviceType","nativeProps","_jsxs","Fragment","desktop","_jsx","_object_spread","mobile","_object_spread_props","map","_ref","label","value","disabled"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/components/Select/Select.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { useAdaptivityConditionalRender } from '../../hooks/useAdaptivityConditionalRender';\nimport type { HasOnlyExpectedProps } from '../../types';\nimport {\n  CustomSelect,\n  type CustomSelectOptionInterface,\n  type SelectProps,\n} from '../CustomSelect/CustomSelect';\nimport { NativeSelect, type NativeSelectProps } from '../NativeSelect/NativeSelect';\nexport type SelectType = 'default' | 'plain' | 'accent';\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Select\n */\nexport const Select = <OptionT extends CustomSelectOptionInterface>({\n  children,\n  className,\n  ...props\n}: SelectProps<OptionT>): React.ReactNode => {\n  const {\n    options = [],\n    searchable,\n    emptyText,\n    onInputChange,\n    filterFn,\n    popupDirection,\n    renderOption,\n    renderDropdown,\n    fetching,\n    onClose,\n    onOpen,\n    icon,\n    ClearButton,\n    allowClearButton,\n    clearButtonTestId,\n    dropdownOffsetDistance,\n    dropdownAutoWidth,\n    forceDropdownPortal,\n    noMaxHeight,\n    labelTextTestId,\n    nativeSelectTestId,\n    after,\n    mode,\n    pattern,\n    minLength,\n    maxLength,\n    readOnly,\n    getSelectInputRef,\n    overscrollBehavior,\n    beforeAlign,\n    afterAlign,\n    onInputKeyDown,\n    ...restProps\n  } = props;\n\n  const { deviceType } = useAdaptivityConditionalRender();\n\n  const nativeProps: HasOnlyExpectedProps<typeof restProps, NativeSelectProps> = restProps;\n\n  return (\n    <React.Fragment>\n      {deviceType.desktop && (\n        <CustomSelect className={classNames(className, deviceType.desktop.className)} {...props} />\n      )}\n      {deviceType.mobile && (\n        <NativeSelect\n          className={classNames(className, deviceType.mobile.className)}\n          {...nativeProps}\n        >\n          {options.map(({ label, value, disabled }) => (\n            <option value={value} key={`${value}`} disabled={disabled}>\n              {label}\n            </option>\n          ))}\n        </NativeSelect>\n      )}\n    </React.Fragment>\n  );\n};\n"],"mappings":"AAAA;;;;;;AAEA,YAAYA,KAAA,MAAW;AACvB,SAASC,UAAU,QAAQ;AAC3B,SAASC,8BAA8B,QAAQ;AAE/C,SACEC,YAAY,QAGP;AACP,SAASC,YAAY,QAAgC;AAGrD;;;AAGA,OAAO,MAAMC,MAAA,GAASC,MAAA;MAA8C;MAClEC,QAAQ;MACRC;IAAS,CAEY,GAAAF,MAAA;IADlBG,KAAA,GAAAC,0BAAA,CAAAJ,MAAA,GAFH,YACA,Y;EAGA,MAAM;MACJK,OAAA,GAAU,EAAE;MACZC,UAAU;MACVC,SAAS;MACTC,aAAa;MACbC,QAAQ;MACRC,cAAc;MACdC,YAAY;MACZC,cAAc;MACdC,QAAQ;MACRC,OAAO;MACPC,MAAM;MACNC,IAAI;MACJC,WAAW;MACXC,gBAAgB;MAChBC,iBAAiB;MACjBC,sBAAsB;MACtBC,iBAAiB;MACjBC,mBAAmB;MACnBC,WAAW;MACXC,eAAe;MACfC,kBAAkB;MAClBC,KAAK;MACLC,IAAI;MACJC,OAAO;MACPC,SAAS;MACTC,SAAS;MACTC,QAAQ;MACRC,iBAAiB;MACjBC,kBAAkB;MAClBC,WAAW;MACXC,UAAU;MACVC;IAAc,CAEf,GAAGjC,KAAA;IADCkC,SAAA,GAAAjC,0BAAA,CACDD,KAAA,GAjCF,WACA,cACA,aACA,iBACA,YACA,kBACA,gBACA,kBACA,YACA,WACA,UACA,QACA,eACA,oBACA,qBACA,0BACA,qBACA,uBACA,eACA,mBACA,sBACA,SACA,QACA,WACA,aACA,aACA,YACA,qBACA,sBACA,eACA,cACA,iB;EAIF,MAAM;IAAEmC;EAAU,CAAE,GAAG1C,8BAAA;EAEvB,MAAM2C,WAAA,GAAyEF,SAAA;EAE/E,oBACEG,KAAA,CAAC9C,KAAA,CAAM+C,QAAQ;eACZH,UAAA,CAAWI,OAAO,iBACjBC,IAAA,CAAC9C,YAAA,EAAA+C,cAAA;MAAa1C,SAAA,EAAWP,UAAA,CAAWO,SAAA,EAAWoC,UAAA,CAAWI,OAAO,CAACxC,SAAS;OAAOC,KAAA,IAEnFmC,UAAA,CAAWO,MAAM,iBAChBF,IAAA,CAAC7C,YAAA,EAAAgD,oBAAA,CAAAF,cAAA;MACC1C,SAAA,EAAWP,UAAA,CAAWO,SAAA,EAAWoC,UAAA,CAAWO,MAAM,CAAC3C,SAAS;OACxDqC,WAAA;gBAEHlC,OAAA,CAAQ0C,GAAG,CAACC,IAAA;QAAA,IAAC;UAAEC,KAAK;UAAEC,KAAK;UAAEC;QAAQ,CAAE,GAAAH,IAAA;QAAA,oBACtCL,IAAA,CAAC;UAAOO,KAAA,EAAOA,KAAA;UAAwBC,QAAA,EAAUA,QAAA;oBAC9CF;WADwB,GAAGC,KAAA,EAAO;MAAA;;;AAQjD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}