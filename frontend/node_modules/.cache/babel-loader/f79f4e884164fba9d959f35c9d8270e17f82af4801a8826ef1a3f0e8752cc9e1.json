{"ast":null,"code":"'use client';\n\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nimport { classNames } from \"@vkontakte/vkjs\";\nimport { useAdaptivity } from \"../../hooks/useAdaptivity.js\";\nimport { Tappable } from \"../Tappable/Tappable.js\";\nimport { Subhead } from \"../Typography/Subhead/Subhead.js\";\nimport { RichCellIcon } from \"./RichCellIcon/RichCellIcon.js\";\nconst sizeYClassNames = {\n  none: \"vkuiRichCell__sizeYNone\",\n  compact: \"vkuiRichCell__sizeYCompact\"\n};\nconst alignAfterClassNames = {\n  start: \"vkuiRichCell__alignAfterStart\",\n  center: \"vkuiRichCell__alignAfterCenter\",\n  end: \"vkuiRichCell__alignAfterEnd\"\n};\nconst alignBeforeClassNames = {\n  start: \"vkuiRichCell__alignBeforeStart\",\n  center: \"vkuiRichCell__alignBeforeCenter\",\n  end: \"vkuiRichCell__alignBeforeEnd\"\n};\nconst alignContentClassNames = {\n  start: \"vkuiRichCell__contentAlignStart\",\n  center: \"vkuiRichCell__contentAlignCenter\",\n  end: \"vkuiRichCell__contentAlignEnd\"\n};\n/**\n * @see https://vkcom.github.io/VKUI/#/RichCell\n */\nexport const RichCell = _param => {\n  var {\n      overTitle,\n      children,\n      subtitle,\n      extraSubtitle,\n      before,\n      after,\n      afterCaption,\n      bottom,\n      actions,\n      multiline,\n      beforeAlign = 'start',\n      contentAlign = 'start',\n      afterAlign = 'start'\n    } = _param,\n    restProps = _object_without_properties(_param, [\"overTitle\", \"children\", \"subtitle\", \"extraSubtitle\", \"before\", \"after\", \"afterCaption\", \"bottom\", \"actions\", \"multiline\", \"beforeAlign\", \"contentAlign\", \"afterAlign\"]);\n  const {\n    sizeY = 'none'\n  } = useAdaptivity();\n  const withAfter = after || afterCaption;\n  const afterRender = () => {\n    if (!withAfter) {\n      return;\n    }\n    return /*#__PURE__*/_jsxs(\"div\", {\n      className: \"vkuiRichCell__contentAfter\",\n      children: [after && /*#__PURE__*/_jsx(\"div\", {\n        className: \"vkuiRichCell__afterChildren\",\n        children: after\n      }), afterCaption && /*#__PURE__*/_jsx(\"div\", {\n        className: \"vkuiRichCell__afterCaption\",\n        children: afterCaption\n      })]\n    });\n  };\n  return /*#__PURE__*/_jsxs(Tappable, _object_spread_props(_object_spread({}, restProps), {\n    baseClassName: classNames(\"vkuiRichCell__host\", !multiline && \"vkuiRichCell__textEllipsis\", sizeY !== 'regular' && sizeYClassNames[sizeY], withAfter && \"vkuiRichCell__withAfter\", withAfter && alignAfterClassNames[afterAlign], before && alignBeforeClassNames[beforeAlign], alignContentClassNames[contentAlign]),\n    children: [before && /*#__PURE__*/_jsx(\"div\", {\n      className: \"vkuiRichCell__before\",\n      children: before\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: \"vkuiRichCell__in\",\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: \"vkuiRichCell__content\",\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: \"vkuiRichCell__contentBefore\",\n          children: [overTitle && /*#__PURE__*/_jsx(Subhead, {\n            Component: \"div\",\n            className: \"vkuiRichCell__overTitle\",\n            children: overTitle\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: \"vkuiRichCell__children\",\n            children: children\n          }), subtitle && /*#__PURE__*/_jsx(\"div\", {\n            className: \"vkuiRichCell__subtitle\",\n            children: subtitle\n          }), extraSubtitle && /*#__PURE__*/_jsx(Subhead, {\n            Component: \"div\",\n            className: \"vkuiRichCell__extraSubtitle\",\n            children: extraSubtitle\n          })]\n        }), afterAlign === 'start' && afterRender()]\n      }), bottom && /*#__PURE__*/_jsx(\"div\", {\n        className: \"vkuiRichCell__bottom\",\n        children: bottom\n      }), actions && /*#__PURE__*/_jsx(\"div\", {\n        className: \"vkuiRichCell__actions\",\n        children: actions\n      })]\n    }), afterAlign !== 'start' && afterRender()]\n  }));\n};\nRichCell.Icon = RichCellIcon;","map":{"version":3,"names":["React","classNames","useAdaptivity","Tappable","Subhead","RichCellIcon","sizeYClassNames","none","compact","alignAfterClassNames","start","center","end","alignBeforeClassNames","alignContentClassNames","RichCell","_param","overTitle","children","subtitle","extraSubtitle","before","after","afterCaption","bottom","actions","multiline","beforeAlign","contentAlign","afterAlign","restProps","_object_without_properties","sizeY","withAfter","afterRender","_jsxs","className","_jsx","_object_spread_props","_object_spread","baseClassName","Component","Icon"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/components/RichCell/RichCell.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\nimport { Tappable, type TappableProps } from '../Tappable/Tappable';\nimport { Subhead } from '../Typography/Subhead/Subhead';\nimport { RichCellIcon } from './RichCellIcon/RichCellIcon';\nimport styles from './RichCell.module.css';\n\nconst sizeYClassNames = {\n  none: styles.sizeYNone,\n  compact: styles.sizeYCompact,\n};\n\nconst alignAfterClassNames = {\n  start: styles.alignAfterStart,\n  center: styles.alignAfterCenter,\n  end: styles.alignAfterEnd,\n};\n\nconst alignBeforeClassNames = {\n  start: styles.alignBeforeStart,\n  center: styles.alignBeforeCenter,\n  end: styles.alignBeforeEnd,\n};\n\nconst alignContentClassNames = {\n  start: styles.contentAlignStart,\n  center: styles.contentAlignCenter,\n  end: styles.contentAlignEnd,\n};\n\ntype Align = 'start' | 'center' | 'end';\n\nexport interface RichCellProps extends TappableProps {\n  /**\n   * Контейнер для текста над `children`.\n   */\n  overTitle?: React.ReactNode;\n  /**\n   * Контейнер для текста под `children`.\n   */\n  subtitle?: React.ReactNode;\n  /**\n   * Контейнер для текста под `subtitle`.\n   */\n  extraSubtitle?: React.ReactNode;\n  /**\n   * Контейнер для контента под `caption`. Например `<UsersStack size=\"m\" />`.\n   */\n  bottom?: React.ReactNode;\n  /**\n   * Кнопки-действия. Принимает [`Button`](https://vkcom.github.io/VKUI/#/Button) с параметрами:\n   *\n   * - `mode=\"primary\" size=\"s\"`\n   * - `mode=\"secondary\" size=\"s\"`\n   *\n   * Для набора кнопок используйте [`ButtonGroup`](https://vkcom.github.io/VKUI/#/ButtonGroup) с параметрами:\n   *\n   * - `mode=\"horizontal\" gap=\"s\" stretched`\n   */\n  actions?: React.ReactNode;\n  /**\n   * `<Avatar size={40|48|72} />`.\n   */\n  before?: React.ReactNode;\n  /**\n   * Иконка 28 или текст.\n   */\n  after?: React.ReactNode;\n  /**\n   * Текст под `after`.\n   */\n  afterCaption?: React.ReactNode;\n  /**\n   * Выравнивание before компонента по вертикали\n   */\n  beforeAlign?: Align;\n  /**\n   * Выравнивание центрального контента по вертикали\n   */\n  contentAlign?: Align;\n  /**\n   * Выравнивание after компонента по вертикали\n   */\n  afterAlign?: Align;\n  /**\n   * Убирает анимацию нажатия.\n   */\n  disabled?: boolean;\n  /**\n   * Включает многострочный режим для `subhead`, `children`, `text` и `caption`.\n   */\n  multiline?: boolean;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/RichCell\n */\nexport const RichCell: React.FC<RichCellProps> & {\n  Icon: typeof RichCellIcon;\n} = ({\n  overTitle,\n  children,\n  subtitle,\n  extraSubtitle,\n  before,\n  after,\n  afterCaption,\n  bottom,\n  actions,\n  multiline,\n  beforeAlign = 'start',\n  contentAlign = 'start',\n  afterAlign = 'start',\n  ...restProps\n}: RichCellProps) => {\n  const { sizeY = 'none' } = useAdaptivity();\n  const withAfter = after || afterCaption;\n\n  const afterRender = () => {\n    if (!withAfter) {\n      return;\n    }\n    return (\n      <div className={styles.contentAfter}>\n        {after && <div className={styles.afterChildren}>{after}</div>}\n        {afterCaption && <div className={styles.afterCaption}>{afterCaption}</div>}\n      </div>\n    );\n  };\n\n  return (\n    <Tappable\n      {...restProps}\n      baseClassName={classNames(\n        styles.host,\n        !multiline && styles.textEllipsis,\n        sizeY !== 'regular' && sizeYClassNames[sizeY],\n        withAfter && styles.withAfter,\n        withAfter && alignAfterClassNames[afterAlign],\n        before && alignBeforeClassNames[beforeAlign],\n        alignContentClassNames[contentAlign],\n      )}\n    >\n      {before && <div className={styles.before}>{before}</div>}\n      <div className={styles.in}>\n        <div className={styles.content}>\n          <div className={styles.contentBefore}>\n            {overTitle && (\n              <Subhead Component=\"div\" className={styles.overTitle}>\n                {overTitle}\n              </Subhead>\n            )}\n            <div className={styles.children}>{children}</div>\n            {subtitle && <div className={styles.subtitle}>{subtitle}</div>}\n            {extraSubtitle && (\n              <Subhead Component=\"div\" className={styles.extraSubtitle}>\n                {extraSubtitle}\n              </Subhead>\n            )}\n          </div>\n          {afterAlign === 'start' && afterRender()}\n        </div>\n        {bottom && <div className={styles.bottom}>{bottom}</div>}\n        {actions && <div className={styles.actions}>{actions}</div>}\n      </div>\n      {afterAlign !== 'start' && afterRender()}\n    </Tappable>\n  );\n};\n\nRichCell.Icon = RichCellIcon;\n"],"mappings":"AAAA;;;;;;AAEA,YAAYA,KAAA,MAAW;AACvB,SAASC,UAAU,QAAQ;AAC3B,SAASC,aAAa,QAAQ;AAC9B,SAASC,QAAQ,QAA4B;AAC7C,SAASC,OAAO,QAAQ;AACxB,SAASC,YAAY,QAAQ;AAG7B,MAAMC,eAAA,GAAkB;EACtBC,IAAI;EACJC,OAAO;AACT;AAEA,MAAMC,oBAAA,GAAuB;EAC3BC,KAAK;EACLC,MAAM;EACNC,GAAG;AACL;AAEA,MAAMC,qBAAA,GAAwB;EAC5BH,KAAK;EACLC,MAAM;EACNC,GAAG;AACL;AAEA,MAAME,sBAAA,GAAyB;EAC7BJ,KAAK;EACLC,MAAM;EACNC,GAAG;AACL;AAkEA;;;AAGA,OAAO,MAAMG,QAAA,GAETC,MAAA;MAAC;MACHC,SAAS;MACTC,QAAQ;MACRC,QAAQ;MACRC,aAAa;MACbC,MAAM;MACNC,KAAK;MACLC,YAAY;MACZC,MAAM;MACNC,OAAO;MACPC,SAAS;MACTC,WAAA,GAAc,OAAO;MACrBC,YAAA,GAAe,OAAO;MACtBC,UAAA,GAAa;IAAO,CAEN,GAAAb,MAAA;IADXc,SAAA,GAAAC,0BAAA,CAAAf,MAAA,GAbH,aACA,YACA,YACA,iBACA,UACA,SACA,gBACA,UACA,WACA,aACA,eACA,gBACA,a;EAGA,MAAM;IAAEgB,KAAA,GAAQ;EAAM,CAAE,GAAG9B,aAAA;EAC3B,MAAM+B,SAAA,GAAYX,KAAA,IAASC,YAAA;EAE3B,MAAMW,WAAA,GAAcA,CAAA;IAClB,IAAI,CAACD,SAAA,EAAW;MACd;IACF;IACA,oBACEE,KAAA,CAAC;MAAIC,SAAS;iBACXd,KAAA,iBAASe,IAAA,CAAC;QAAID,SAAS;kBAAyBd;UAChDC,YAAA,iBAAgBc,IAAA,CAAC;QAAID,SAAS;kBAAwBb;;;EAG7D;EAEA,oBACEY,KAAA,CAAChC,QAAA,EAAAmC,oBAAA,CAAAC,cAAA,KACKT,SAAA;IACJU,aAAA,EAAevC,UAAA,uBAEb,CAACyB,SAAA,kCACDM,KAAA,KAAU,aAAa1B,eAAe,CAAC0B,KAAA,CAAM,EAC7CC,SAAA,+BACAA,SAAA,IAAaxB,oBAAoB,CAACoB,UAAA,CAAW,EAC7CR,MAAA,IAAUR,qBAAqB,CAACc,WAAA,CAAY,EAC5Cb,sBAAsB,CAACc,YAAA,CAAa;eAGrCP,MAAA,iBAAUgB,IAAA,CAAC;MAAID,SAAS;gBAAkBf;qBAC3Cc,KAAA,CAAC;MAAIC,SAAS;8BACZD,KAAA,CAAC;QAAIC,SAAS;gCACZD,KAAA,CAAC;UAAIC,SAAS;qBACXnB,SAAA,iBACCoB,IAAA,CAACjC,OAAA;YAAQqC,SAAA,EAAU;YAAML,SAAS;sBAC/BnB;2BAGLoB,IAAA,CAAC;YAAID,SAAS;sBAAoBlB;cACjCC,QAAA,iBAAYkB,IAAA,CAAC;YAAID,SAAS;sBAAoBjB;cAC9CC,aAAA,iBACCiB,IAAA,CAACjC,OAAA;YAAQqC,SAAA,EAAU;YAAML,SAAS;sBAC/BhB;;YAINS,UAAA,KAAe,WAAWK,WAAA;UAE5BV,MAAA,iBAAUa,IAAA,CAAC;QAAID,SAAS;kBAAkBZ;UAC1CC,OAAA,iBAAWY,IAAA,CAAC;QAAID,SAAS;kBAAmBX;;QAE9CI,UAAA,KAAe,WAAWK,WAAA;;AAGjC;AAEAnB,QAAA,CAAS2B,IAAI,GAAGrC,YAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}