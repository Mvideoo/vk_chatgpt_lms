{"ast":null,"code":"'use client';\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nimport { Touch } from \"../Touch/Touch.js\";\nexport const CarouselViewPort = _ref => {\n  let {\n    slideTestId,\n    slideWidth,\n    onStart,\n    onMoveX,\n    onEnd,\n    getRootRef,\n    layerRef,\n    children,\n    setSlideRef\n  } = _ref;\n  return /*#__PURE__*/_jsx(Touch, {\n    className: \"vkuiCarouselBase__viewport\",\n    onStartX: onStart,\n    onMoveX: onMoveX,\n    onEnd: onEnd,\n    style: {\n      width: slideWidth === 'custom' ? '100%' : slideWidth\n    },\n    noSlideClick: true,\n    getRootRef: getRootRef,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: \"vkuiCarouselBase__layer\",\n      ref: layerRef,\n      children: React.Children.map(children, (item, i) => /*#__PURE__*/_jsx(\"div\", {\n        className: \"vkuiCarouselBase__slide\",\n        \"data-testid\": slideTestId === null || slideTestId === void 0 ? void 0 : slideTestId(i),\n        ref: el => setSlideRef(el, i),\n        children: item\n      }, `slide-${i}`))\n    })\n  });\n};","map":{"version":3,"names":["React","Touch","CarouselViewPort","_ref","slideTestId","slideWidth","onStart","onMoveX","onEnd","getRootRef","layerRef","children","setSlideRef","_jsx","className","onStartX","style","width","noSlideClick","ref","Children","map","item","i","el"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/components/CarouselBase/CarouselViewPort.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { type HasChildren, type HasRootRef } from '../../types';\nimport { type CustomTouchEvent, Touch } from '../Touch/Touch';\nimport { type BaseGalleryProps } from './types';\nimport styles from './CarouselBase.module.css';\n\ntype GalleryViewPortProps = Pick<BaseGalleryProps, 'slideWidth' | 'slideTestId'> &\n  HasRootRef<HTMLElement> &\n  HasChildren & {\n    onStart: (e: CustomTouchEvent) => void;\n    onMoveX: (e: CustomTouchEvent) => void;\n    onEnd: (e: CustomTouchEvent) => void;\n    setSlideRef: (slideRef: HTMLDivElement | null, slideIndex: number) => void;\n    layerRef?: React.Ref<HTMLDivElement>;\n  };\n\nexport const CarouselViewPort: React.FC<GalleryViewPortProps> = ({\n  slideTestId,\n  slideWidth,\n  onStart,\n  onMoveX,\n  onEnd,\n  getRootRef,\n  layerRef,\n  children,\n  setSlideRef,\n}) => {\n  return (\n    <Touch\n      className={styles.viewport}\n      onStartX={onStart}\n      onMoveX={onMoveX}\n      onEnd={onEnd}\n      style={{ width: slideWidth === 'custom' ? '100%' : slideWidth }}\n      noSlideClick\n      getRootRef={getRootRef}\n    >\n      <div className={styles.layer} ref={layerRef}>\n        {React.Children.map(children, (item: React.ReactNode, i: number) => (\n          <div\n            className={styles.slide}\n            key={`slide-${i}`}\n            data-testid={slideTestId?.(i)}\n            ref={(el) => setSlideRef(el, i)}\n          >\n            {item}\n          </div>\n        ))}\n      </div>\n    </Touch>\n  );\n};\n"],"mappings":"AAAA;;;AAEA,YAAYA,KAAA,MAAW;AAEvB,SAAgCC,KAAK,QAAQ;AAc7C,OAAO,MAAMC,gBAAA,GAAmDC,IAAA,IAU/D;EAAA,IAVgE;IAC/DC,WAAW;IACXC,UAAU;IACVC,OAAO;IACPC,OAAO;IACPC,KAAK;IACLC,UAAU;IACVC,QAAQ;IACRC,QAAQ;IACRC;EAAW,CACZ,GAAAT,IAAA;EACC,oBACEU,IAAA,CAACZ,KAAA;IACCa,SAAS;IACTC,QAAA,EAAUT,OAAA;IACVC,OAAA,EAASA,OAAA;IACTC,KAAA,EAAOA,KAAA;IACPQ,KAAA,EAAO;MAAEC,KAAA,EAAOZ,UAAA,KAAe,WAAW,SAASA;IAAW;IAC9Da,YAAY;IACZT,UAAA,EAAYA,UAAA;cAEZ,aAAAI,IAAA,CAAC;MAAIC,SAAS;MAAgBK,GAAA,EAAKT,QAAA;gBAChCV,KAAA,CAAMoB,QAAQ,CAACC,GAAG,CAACV,QAAA,EAAU,CAACW,IAAA,EAAuBC,CAAA,kBACpDV,IAAA,CAAC;QACCC,SAAS;QAET,aAAW,EAAEV,WAAA,aAAAA,WAAA,uBAAAA,WAAA,CAAcmB,CAAA;QAC3BJ,GAAA,EAAMK,EAAA,IAAOZ,WAAA,CAAYY,EAAA,EAAID,CAAA;kBAE5BD;SAJI,SAASC,CAAA,EAAG;;;AAU7B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}