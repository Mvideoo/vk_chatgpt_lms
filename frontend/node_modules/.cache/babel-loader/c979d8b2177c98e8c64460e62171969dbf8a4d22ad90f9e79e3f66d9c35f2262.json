{"ast":null,"code":"import * as React from \"react\";\n/**\n * @deprecated постарайтесь избавится от этого хука или используйте `useStateWithPrev`\n */\nexport function usePrevious(value) {\n  const ref = React.useRef(undefined);\n  React.useEffect(() => {\n    ref.current = value;\n  });\n  /**\n  * ref.current нельзя читать во время рендеринга\n  *\n  * - see https://react.dev/reference/react/useRef\n  * - also https://react.dev/reference/react/useState#storing-information-from-previous-renders\n  */\n  return ref.current;\n}","map":{"version":3,"names":["React","usePrevious","value","ref","useRef","undefined","useEffect","current"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/hooks/usePrevious.ts"],"sourcesContent":["import * as React from 'react';\n\n/**\n * @deprecated постарайтесь избавится от этого хука или используйте `useStateWithPrev`\n */\nexport function usePrevious<T>(value: T): T | undefined {\n  const ref = React.useRef<T | undefined>(undefined);\n\n  React.useEffect(() => {\n    ref.current = value;\n  });\n\n  /**\n   * ref.current нельзя читать во время рендеринга\n   *\n   * - see https://react.dev/reference/react/useRef\n   * - also https://react.dev/reference/react/useState#storing-information-from-previous-renders\n   */\n  return ref.current;\n}\n"],"mappings":"AAAA,YAAYA,KAAA,MAAW;AAEvB;;;AAGA,OAAO,SAASC,YAAeC,KAAQ;EACrC,MAAMC,GAAA,GAAMH,KAAA,CAAMI,MAAM,CAAgBC,SAAA;EAExCL,KAAA,CAAMM,SAAS,CAAC;IACdH,GAAA,CAAII,OAAO,GAAGL,KAAA;EAChB;EAEA;;;;;;EAMA,OAAOC,GAAA,CAAII,OAAO;AACpB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}