{"ast":null,"code":"'use client';\n\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useExternRef } from \"../../hooks/useExternRef.js\";\nimport { ChipsInputBase } from \"../ChipsInputBase/ChipsInputBase.js\";\nimport { useChipsInput } from \"./useChipsInput.js\";\n/**\n * @see https://vkcom.github.io/VKUI/#/ChipsInput\n */\nexport const ChipsInput = _param => {\n  var {\n      // option\n      value: valueProp,\n      defaultValue,\n      onChange,\n      // input\n      getRef,\n      inputValue: inputValueProp,\n      defaultInputValue: inputDefaultValueProp,\n      onInputChange: onInputChangeProp,\n      getOptionValue,\n      getOptionLabel,\n      getNewOptionData,\n      // other\n      disabled,\n      allowClearButton\n    } = _param,\n    restProps = _object_without_properties(_param, [\"value\", \"defaultValue\", \"onChange\", \"getRef\", \"inputValue\", \"defaultInputValue\", \"onInputChange\", \"getOptionValue\", \"getOptionLabel\", \"getNewOptionData\", \"disabled\", \"allowClearButton\"]);\n  const {\n    value,\n    addOptionFromInput,\n    removeOption,\n    clearOptions,\n    // input\n    inputRef: inputRefHook,\n    inputValue,\n    onInputChange\n  } = useChipsInput({\n    // option\n    value: valueProp,\n    defaultValue,\n    onChange,\n    getOptionLabel,\n    getOptionValue,\n    getNewOptionData,\n    // input\n    inputValue: inputValueProp,\n    defaultInputValue: inputDefaultValueProp,\n    onInputChange: onInputChangeProp,\n    // other\n    disabled\n  });\n  const inputRef = useExternRef(getRef, inputRefHook);\n  return /*#__PURE__*/_jsx(ChipsInputBase, _object_spread_props(_object_spread({}, restProps), {\n    disabled: disabled,\n    value: value,\n    clearButtonShown: allowClearButton && (!!value.length || !!inputValue.length),\n    onAddChipOption: addOptionFromInput,\n    onRemoveChipOption: removeOption,\n    onClear: clearOptions,\n    getRef: inputRef,\n    inputValue: inputValue,\n    onInputChange: onInputChange\n  }));\n};","map":{"version":3,"names":["useExternRef","ChipsInputBase","useChipsInput","ChipsInput","_param","value","valueProp","defaultValue","onChange","getRef","inputValue","inputValueProp","defaultInputValue","inputDefaultValueProp","onInputChange","onInputChangeProp","getOptionValue","getOptionLabel","getNewOptionData","disabled","allowClearButton","restProps","_object_without_properties","addOptionFromInput","removeOption","clearOptions","inputRef","inputRefHook","_jsx","_object_spread_props","_object_spread","clearButtonShown","length","onAddChipOption","onRemoveChipOption","onClear"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/components/ChipsInput/ChipsInput.tsx"],"sourcesContent":["'use client';\n\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { ChipsInputBase } from '../ChipsInputBase/ChipsInputBase';\nimport type { ChipOption, ChipsInputBaseProps } from '../ChipsInputBase/types';\nimport type { FormFieldProps } from '../FormField/FormField';\nimport { useChipsInput, type UseChipsInputProps } from './useChipsInput';\n\nexport interface ChipsInputProps<Option extends ChipOption>\n  extends ChipsInputBaseProps<Option>,\n    UseChipsInputProps<Option>,\n    Pick<FormFieldProps, 'status' | 'mode' | 'before' | 'after' | 'maxHeight'> {\n  /**\n   * Если `true`, то справа будет отображаться кнопка для очистки значения\n   */\n  allowClearButton?: boolean;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/ChipsInput\n */\nexport const ChipsInput = <Option extends ChipOption>({\n  // option\n  value: valueProp,\n  defaultValue,\n  onChange,\n\n  // input\n  getRef,\n  inputValue: inputValueProp,\n  defaultInputValue: inputDefaultValueProp,\n  onInputChange: onInputChangeProp,\n  getOptionValue,\n  getOptionLabel,\n  getNewOptionData,\n\n  // other\n  disabled,\n  allowClearButton,\n  ...restProps\n}: ChipsInputProps<Option>): React.ReactNode => {\n  const {\n    value,\n    addOptionFromInput,\n    removeOption,\n    clearOptions,\n\n    // input\n    inputRef: inputRefHook,\n    inputValue,\n    onInputChange,\n  } = useChipsInput({\n    // option\n    value: valueProp,\n    defaultValue,\n    onChange,\n    getOptionLabel,\n    getOptionValue,\n    getNewOptionData,\n\n    // input\n    inputValue: inputValueProp,\n    defaultInputValue: inputDefaultValueProp,\n    onInputChange: onInputChangeProp,\n\n    // other\n    disabled,\n  });\n  const inputRef = useExternRef(getRef, inputRefHook);\n\n  return (\n    <ChipsInputBase\n      {...restProps}\n      disabled={disabled}\n      value={value}\n      clearButtonShown={allowClearButton && (!!value.length || !!inputValue.length)}\n      onAddChipOption={addOptionFromInput}\n      onRemoveChipOption={removeOption}\n      onClear={clearOptions}\n      getRef={inputRef}\n      inputValue={inputValue}\n      onInputChange={onInputChange}\n    />\n  );\n};\n"],"mappings":"AAAA;;;;;;AAEA,SAASA,YAAY,QAAQ;AAC7B,SAASC,cAAc,QAAQ;AAG/B,SAASC,aAAa,QAAiC;AAYvD;;;AAGA,OAAO,MAAMC,UAAA,GAAaC,MAAA;MAA4B;MACpD;MACAC,KAAA,EAAOC,SAAS;MAChBC,YAAY;MACZC,QAAQ;MAER;MACAC,MAAM;MACNC,UAAA,EAAYC,cAAc;MAC1BC,iBAAA,EAAmBC,qBAAqB;MACxCC,aAAA,EAAeC,iBAAiB;MAChCC,cAAc;MACdC,cAAc;MACdC,gBAAgB;MAEhB;MACAC,QAAQ;MACRC;IAAgB,CAEQ,GAAAhB,MAAA;IADrBiB,SAAA,GAAAC,0BAAA,CAAAlB,MAAA,GAhBH,SACA,gBACA,YAGA,UACA,cACA,qBACA,iBACA,kBACA,kBACA,oBAGA,YACA,mB;EAGA,MAAM;IACJC,KAAK;IACLkB,kBAAkB;IAClBC,YAAY;IACZC,YAAY;IAEZ;IACAC,QAAA,EAAUC,YAAY;IACtBjB,UAAU;IACVI;EAAa,CACd,GAAGZ,aAAA,CAAc;IAChB;IACAG,KAAA,EAAOC,SAAA;IACPC,YAAA;IACAC,QAAA;IACAS,cAAA;IACAD,cAAA;IACAE,gBAAA;IAEA;IACAR,UAAA,EAAYC,cAAA;IACZC,iBAAA,EAAmBC,qBAAA;IACnBC,aAAA,EAAeC,iBAAA;IAEf;IACAI;EACF;EACA,MAAMO,QAAA,GAAW1B,YAAA,CAAaS,MAAA,EAAQkB,YAAA;EAEtC,oBACEC,IAAA,CAAC3B,cAAA,EAAA4B,oBAAA,CAAAC,cAAA,KACKT,SAAA;IACJF,QAAA,EAAUA,QAAA;IACVd,KAAA,EAAOA,KAAA;IACP0B,gBAAA,EAAkBX,gBAAA,KAAqB,CAAC,CAACf,KAAA,CAAM2B,MAAM,IAAI,CAAC,CAACtB,UAAA,CAAWsB,MAAM,CAAD;IAC3EC,eAAA,EAAiBV,kBAAA;IACjBW,kBAAA,EAAoBV,YAAA;IACpBW,OAAA,EAASV,YAAA;IACThB,MAAA,EAAQiB,QAAA;IACRhB,UAAA,EAAYA,UAAA;IACZI,aAAA,EAAeA;;AAGrB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}