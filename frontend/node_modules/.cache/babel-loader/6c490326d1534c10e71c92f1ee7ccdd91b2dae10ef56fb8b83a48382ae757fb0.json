{"ast":null,"code":"import * as React from \"react\";\nimport { useDOM } from \"../lib/dom.js\";\nimport { useIsomorphicLayoutEffect } from \"../lib/useIsomorphicLayoutEffect.js\";\nconst isFocusWithin = (ref, document) => ref.contains(document.activeElement);\nexport function useFocusWithin(ref) {\n  const {\n    document\n  } = useDOM();\n  const [focusWithin, setFocusWithin] = React.useState(() => ref.current && document ? isFocusWithin(ref.current, document) : false);\n  useIsomorphicLayoutEffect(function handleAutoFocus() {\n    /* istanbul ignore if: невозможный кейс, т.к. в SSR эффекты не вызываются. Проверка на будущее, если вдруг эффект будет вызываться. */if (!document) {\n      return;\n    }\n    const handleFocusOrBlurEvents = () => {\n      if (ref.current) {\n        setFocusWithin(isFocusWithin(ref.current, document));\n      }\n    };\n    // Вызываем в начале, чтобы проверить autoFocus\n    void handleFocusOrBlurEvents();\n    document.addEventListener('focus', handleFocusOrBlurEvents, {\n      capture: true\n    });\n    document.addEventListener('blur', handleFocusOrBlurEvents, {\n      capture: true\n    });\n    return () => {\n      document.removeEventListener('focus', handleFocusOrBlurEvents, {\n        capture: true\n      });\n      document.removeEventListener('blur', handleFocusOrBlurEvents, {\n        capture: true\n      });\n    };\n  }, []);\n  return focusWithin;\n}","map":{"version":3,"names":["React","useDOM","useIsomorphicLayoutEffect","isFocusWithin","ref","document","contains","activeElement","useFocusWithin","focusWithin","setFocusWithin","useState","current","handleAutoFocus","handleFocusOrBlurEvents","addEventListener","capture","removeEventListener"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/hooks/useFocusWithin.ts"],"sourcesContent":["import * as React from 'react';\nimport { useDOM } from '../lib/dom';\nimport { useIsomorphicLayoutEffect } from '../lib/useIsomorphicLayoutEffect';\n\nconst isFocusWithin = <T extends Element>(ref: T, document: Document) =>\n  ref.contains(document.activeElement);\n\nexport function useFocusWithin(ref: React.RefObject<HTMLElement | null>): boolean {\n  const { document } = useDOM();\n  const [focusWithin, setFocusWithin] = React.useState<boolean>(() =>\n    ref.current && document ? isFocusWithin(ref.current, document) : false,\n  );\n\n  useIsomorphicLayoutEffect(function handleAutoFocus() {\n    /* istanbul ignore if: невозможный кейс, т.к. в SSR эффекты не вызываются. Проверка на будущее, если вдруг эффект будет вызываться. */\n    if (!document) {\n      return;\n    }\n\n    const handleFocusOrBlurEvents = () => {\n      if (ref.current) {\n        setFocusWithin(isFocusWithin(ref.current, document));\n      }\n    };\n\n    // Вызываем в начале, чтобы проверить autoFocus\n    void handleFocusOrBlurEvents();\n\n    document.addEventListener('focus', handleFocusOrBlurEvents, { capture: true });\n    document.addEventListener('blur', handleFocusOrBlurEvents, { capture: true });\n    return () => {\n      document.removeEventListener('focus', handleFocusOrBlurEvents, { capture: true });\n      document.removeEventListener('blur', handleFocusOrBlurEvents, { capture: true });\n    };\n  }, []);\n\n  return focusWithin;\n}\n"],"mappings":"AAAA,YAAYA,KAAA,MAAW;AACvB,SAASC,MAAM,QAAQ;AACvB,SAASC,yBAAyB,QAAQ;AAE1C,MAAMC,aAAA,GAAgBA,CAAoBC,GAAA,EAAQC,QAAA,KAChDD,GAAA,CAAIE,QAAQ,CAACD,QAAA,CAASE,aAAa;AAErC,OAAO,SAASC,eAAeJ,GAAwC;EACrE,MAAM;IAAEC;EAAQ,CAAE,GAAGJ,MAAA;EACrB,MAAM,CAACQ,WAAA,EAAaC,cAAA,CAAe,GAAGV,KAAA,CAAMW,QAAQ,CAAU,MAC5DP,GAAA,CAAIQ,OAAO,IAAIP,QAAA,GAAWF,aAAA,CAAcC,GAAA,CAAIQ,OAAO,EAAEP,QAAA,IAAY;EAGnEH,yBAAA,CAA0B,SAASW,gBAAA;IACjC,sIACA,IAAI,CAACR,QAAA,EAAU;MACb;IACF;IAEA,MAAMS,uBAAA,GAA0BA,CAAA;MAC9B,IAAIV,GAAA,CAAIQ,OAAO,EAAE;QACfF,cAAA,CAAeP,aAAA,CAAcC,GAAA,CAAIQ,OAAO,EAAEP,QAAA;MAC5C;IACF;IAEA;IACA,KAAKS,uBAAA;IAELT,QAAA,CAASU,gBAAgB,CAAC,SAASD,uBAAA,EAAyB;MAAEE,OAAA,EAAS;IAAK;IAC5EX,QAAA,CAASU,gBAAgB,CAAC,QAAQD,uBAAA,EAAyB;MAAEE,OAAA,EAAS;IAAK;IAC3E,OAAO;MACLX,QAAA,CAASY,mBAAmB,CAAC,SAASH,uBAAA,EAAyB;QAAEE,OAAA,EAAS;MAAK;MAC/EX,QAAA,CAASY,mBAAmB,CAAC,QAAQH,uBAAA,EAAyB;QAAEE,OAAA,EAAS;MAAK;IAChF;EACF,GAAG,EAAE;EAEL,OAAOP,WAAA;AACT","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}