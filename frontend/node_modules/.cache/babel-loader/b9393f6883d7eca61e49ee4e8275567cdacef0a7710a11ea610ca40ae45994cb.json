{"ast":null,"code":"'use client';\n\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nimport { useCallback } from \"react\";\nimport { classNames } from \"@vkontakte/vkjs\";\nimport { useFloatingElement } from \"../../hooks/useFloatingElement.js\";\nimport { animationFadeClassNames } from \"../../lib/animation/index.js\";\nimport { getArrowCoordsByMiddlewareData } from \"../../lib/floating/index.js\";\nimport { AppRootPortal } from \"../AppRoot/AppRootPortal.js\";\nimport { TooltipBase } from \"../TooltipBase/TooltipBase.js\";\nexport const useTooltip = _param => {\n  var {\n      // UseFloatingMiddlewaresBootstrapOptions\n      placement: placementProp = 'bottom',\n      arrowPadding = 10,\n      arrowHeight = 8,\n      offsetByMainAxis = 8,\n      offsetByCrossAxis = 0,\n      hideWhenReferenceHidden,\n      disableFlipMiddleware = false,\n      disableTriggerOnFocus = false,\n      onReferenceHiddenChange,\n      // useFloatingWithInteractions\n      defaultShown,\n      shown: shownProp,\n      onShownChange,\n      hoverDelay = 150,\n      strategy,\n      // инверсированные св-ва для useFloatingWithInteractions\n      enableInteractive = false,\n      disableArrow = false,\n      disableCloseAfterClick = false,\n      // AppRootProps\n      usePortal,\n      // TooltipBaseProps\n      id: idProp,\n      getRootRef,\n      appearance = 'neutral',\n      style: styleProp,\n      className,\n      zIndex = 'var(--vkui--z_index_popout)',\n      closable,\n      onPlacementChange\n    } = _param,\n    popperProps = _object_without_properties(_param, [\"placement\", \"arrowPadding\", \"arrowHeight\", \"offsetByMainAxis\", \"offsetByCrossAxis\", \"hideWhenReferenceHidden\", \"disableFlipMiddleware\", \"disableTriggerOnFocus\", \"onReferenceHiddenChange\", \"defaultShown\", \"shown\", \"onShownChange\", \"hoverDelay\", \"strategy\", \"enableInteractive\", \"disableArrow\", \"disableCloseAfterClick\", \"usePortal\", \"id\", \"getRootRef\", \"appearance\", \"style\", \"className\", \"zIndex\", \"closable\", \"onPlacementChange\"]);\n  const generatedId = React.useId();\n  const tooltipId = idProp || generatedId;\n  const renderFloatingComponent = useCallback(_ref => {\n    let {\n      shown,\n      floatingProps,\n      floatingRef,\n      placement: resultPlacement,\n      middlewareData,\n      setArrowRef,\n      willBeHide,\n      onClose\n    } = _ref;\n    if (!shown) {\n      return null;\n    }\n    return /*#__PURE__*/_jsx(AppRootPortal, {\n      usePortal: usePortal,\n      children: /*#__PURE__*/_jsx(TooltipBase, _object_spread_props(_object_spread({}, popperProps, floatingProps), {\n        style: _object_spread(_object_spread_props(_object_spread({}, floatingProps.style), {\n          zIndex\n        }), styleProp),\n        id: tooltipId,\n        getRootRef: floatingRef,\n        appearance: appearance,\n        arrowProps: disableArrow ? undefined : {\n          placement: resultPlacement,\n          coords: getArrowCoordsByMiddlewareData(middlewareData),\n          getRootRef: setArrowRef\n        },\n        className: classNames(willBeHide ? animationFadeClassNames.out : animationFadeClassNames.in, className),\n        onCloseIconClick: closable ? onClose : undefined\n      }))\n    });\n  }, [appearance, className, closable, disableArrow, popperProps, styleProp, tooltipId, usePortal, zIndex]);\n  const remapReferenceProps = useCallback(_param => {\n    var {\n        shown\n      } = _param,\n      referenceProps = _object_without_properties(_param, [\"shown\"]);\n    return _object_spread({}, referenceProps, shown && {\n      'aria-describedby': tooltipId\n    });\n  }, [tooltipId]);\n  const {\n    component,\n    anchorRef,\n    anchorProps\n  } = useFloatingElement({\n    placement: placementProp,\n    arrow: !disableArrow,\n    arrowHeight,\n    arrowPadding,\n    offsetByMainAxis,\n    offsetByCrossAxis,\n    hideWhenReferenceHidden,\n    disableFlipMiddleware,\n    defaultShown,\n    shown: shownProp,\n    onShownChange,\n    trigger: disableTriggerOnFocus ? 'hover' : ['hover', 'focus'],\n    onReferenceHiddenChange,\n    hoverDelay,\n    closeAfterClick: !disableCloseAfterClick,\n    disableInteractive: !enableInteractive,\n    strategy,\n    onPlacementChange,\n    renderFloatingComponent,\n    externalFloatingElementRef: getRootRef,\n    remapReferenceProps\n  });\n  return {\n    anchorRef,\n    anchorProps,\n    tooltip: component\n  };\n};","map":{"version":3,"names":["React","useCallback","classNames","useFloatingElement","animationFadeClassNames","getArrowCoordsByMiddlewareData","AppRootPortal","TooltipBase","useTooltip","_param","placement","placementProp","arrowPadding","arrowHeight","offsetByMainAxis","offsetByCrossAxis","hideWhenReferenceHidden","disableFlipMiddleware","disableTriggerOnFocus","onReferenceHiddenChange","defaultShown","shown","shownProp","onShownChange","hoverDelay","strategy","enableInteractive","disableArrow","disableCloseAfterClick","usePortal","id","idProp","getRootRef","appearance","style","styleProp","className","zIndex","closable","onPlacementChange","popperProps","_object_without_properties","generatedId","useId","tooltipId","renderFloatingComponent","_ref","floatingProps","floatingRef","resultPlacement","middlewareData","setArrowRef","willBeHide","onClose","_jsx","_object_spread_props","_object_spread","arrowProps","undefined","coords","out","in","onCloseIconClick","remapReferenceProps","referenceProps","component","anchorRef","anchorProps","arrow","trigger","closeAfterClick","disableInteractive","externalFloatingElementRef","tooltip"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/components/Tooltip/useTooltip.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { type Ref, useCallback } from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport {\n  type FloatingComponentProps,\n  useFloatingElement,\n  type UseFloatingElementProps,\n} from '../../hooks/useFloatingElement';\nimport { animationFadeClassNames } from '../../lib/animation';\nimport { getArrowCoordsByMiddlewareData } from '../../lib/floating';\nimport { type ReferenceProps } from '../../lib/floating/useFloatingWithInteractions/types';\nimport { AppRootPortal } from '../AppRoot/AppRootPortal';\nimport { TooltipBase } from '../TooltipBase/TooltipBase';\nimport { type TooltipProps } from './Tooltip';\n\nexport type UseTooltipProps = Omit<TooltipProps, 'children'> & {\n  [key: `data-${string}`]: string | number | boolean;\n};\n\nexport type UseTooltipResult<ElementType extends HTMLElement = HTMLElement> = {\n  anchorRef: Ref<ElementType>;\n  anchorProps: ReferenceProps<ElementType>;\n  tooltip: React.ReactNode | null;\n};\n\nexport const useTooltip = ({\n  // UseFloatingMiddlewaresBootstrapOptions\n  placement: placementProp = 'bottom',\n  arrowPadding = 10,\n  arrowHeight = 8,\n  offsetByMainAxis = 8,\n  offsetByCrossAxis = 0,\n  hideWhenReferenceHidden,\n  disableFlipMiddleware = false,\n  disableTriggerOnFocus = false,\n  onReferenceHiddenChange,\n\n  // useFloatingWithInteractions\n  defaultShown,\n  shown: shownProp,\n  onShownChange,\n  hoverDelay = 150,\n  strategy,\n\n  // инверсированные св-ва для useFloatingWithInteractions\n  enableInteractive = false,\n  disableArrow = false,\n  disableCloseAfterClick = false,\n\n  // AppRootProps\n  usePortal,\n\n  // TooltipBaseProps\n  id: idProp,\n  getRootRef,\n  appearance = 'neutral',\n  style: styleProp,\n  className,\n  zIndex = 'var(--vkui--z_index_popout)',\n  closable,\n  onPlacementChange,\n  ...popperProps\n}: UseTooltipProps): UseTooltipResult => {\n  const generatedId = React.useId();\n  const tooltipId = idProp || generatedId;\n\n  const renderFloatingComponent = useCallback(\n    ({\n      shown,\n      floatingProps,\n      floatingRef,\n      placement: resultPlacement,\n      middlewareData,\n      setArrowRef,\n      willBeHide,\n      onClose,\n    }: FloatingComponentProps<HTMLDivElement>) => {\n      if (!shown) {\n        return null;\n      }\n      return (\n        <AppRootPortal usePortal={usePortal}>\n          <TooltipBase\n            {...popperProps}\n            {...floatingProps}\n            style={{\n              ...floatingProps.style,\n              zIndex,\n              ...styleProp,\n            }}\n            id={tooltipId}\n            getRootRef={floatingRef}\n            appearance={appearance}\n            arrowProps={\n              disableArrow\n                ? undefined\n                : {\n                    placement: resultPlacement,\n                    coords: getArrowCoordsByMiddlewareData(middlewareData),\n                    getRootRef: setArrowRef,\n                  }\n            }\n            className={classNames(\n              willBeHide ? animationFadeClassNames.out : animationFadeClassNames.in,\n              className,\n            )}\n            onCloseIconClick={closable ? onClose : undefined}\n          />\n        </AppRootPortal>\n      );\n    },\n    [\n      appearance,\n      className,\n      closable,\n      disableArrow,\n      popperProps,\n      styleProp,\n      tooltipId,\n      usePortal,\n      zIndex,\n    ],\n  );\n\n  const remapReferenceProps: Exclude<UseFloatingElementProps['remapReferenceProps'], undefined> =\n    useCallback(\n      ({ shown, ...referenceProps }) => ({\n        ...referenceProps,\n        ...(shown && { 'aria-describedby': tooltipId }),\n      }),\n      [tooltipId],\n    );\n\n  const { component, anchorRef, anchorProps } = useFloatingElement({\n    placement: placementProp,\n    arrow: !disableArrow,\n    arrowHeight,\n    arrowPadding,\n    offsetByMainAxis,\n    offsetByCrossAxis,\n    hideWhenReferenceHidden,\n    disableFlipMiddleware,\n\n    defaultShown,\n    shown: shownProp,\n    onShownChange,\n    trigger: disableTriggerOnFocus ? 'hover' : ['hover', 'focus'],\n    onReferenceHiddenChange,\n    hoverDelay,\n    closeAfterClick: !disableCloseAfterClick,\n    disableInteractive: !enableInteractive,\n    strategy,\n\n    onPlacementChange,\n\n    renderFloatingComponent,\n    externalFloatingElementRef: getRootRef,\n    remapReferenceProps,\n  });\n\n  return {\n    anchorRef,\n    anchorProps,\n    tooltip: component,\n  };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}