{"ast":null,"code":"'use client';\n\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nimport { Icon12Dropdown, Icon20ChevronLeftOutline, Icon20ChevronRightOutline } from \"@vkontakte/icons\";\nimport { classNames } from \"@vkontakte/vkjs\";\nimport { addMonths, setMonth, setYear, subMonths } from \"date-fns\";\nimport { DEFAULT_MAX_YEAR, DEFAULT_MIN_YEAR, getMonths, getYears } from \"../../lib/calendar.js\";\nimport { AdaptivityProvider } from \"../AdaptivityProvider/AdaptivityProvider.js\";\nimport { useConfigProvider } from \"../ConfigProvider/ConfigProviderContext.js\";\nimport { CustomSelect } from \"../CustomSelect/CustomSelect.js\";\nimport { RootComponent } from \"../RootComponent/RootComponent.js\";\nimport { Tappable } from \"../Tappable/Tappable.js\";\nimport { Paragraph } from \"../Typography/Paragraph/Paragraph.js\";\nimport { VisuallyHidden } from \"../VisuallyHidden/VisuallyHidden.js\";\nexport const CalendarHeader = _param => {\n  var {\n      viewDate,\n      onChange,\n      prevMonthHidden: prevMonthHiddenProp = false,\n      nextMonthHidden: nextMonthHiddenProp = false,\n      disablePickers = false,\n      onNextMonth,\n      onPrevMonth,\n      prevMonthProps = {},\n      nextMonthProps = {},\n      prevMonthLabel = 'Предыдущий месяц',\n      nextMonthLabel = 'Следующий месяц',\n      changeMonthLabel = 'Изменить месяц',\n      changeYearLabel = 'Изменить год',\n      prevMonthIcon = /*#__PURE__*/_jsx(Icon20ChevronLeftOutline, {\n        className: \"vkuiCalendarHeader__navIconAccent\",\n        width: 30,\n        height: 30\n      }),\n      nextMonthIcon = /*#__PURE__*/_jsx(Icon20ChevronRightOutline, {\n        className: \"vkuiCalendarHeader__navIconAccent\",\n        width: 30,\n        height: 30\n      }),\n      isMonthDisabled,\n      isYearDisabled,\n      monthDropdownTestId,\n      yearDropdownTestId,\n      prevMonthButtonTestId,\n      nextMonthButtonTestId\n    } = _param,\n    restProps = _object_without_properties(_param, [\"viewDate\", \"onChange\", \"prevMonthHidden\", \"nextMonthHidden\", \"disablePickers\", \"onNextMonth\", \"onPrevMonth\", \"prevMonthProps\", \"nextMonthProps\", \"prevMonthLabel\", \"nextMonthLabel\", \"changeMonthLabel\", \"changeYearLabel\", \"prevMonthIcon\", \"nextMonthIcon\", \"isMonthDisabled\", \"isYearDisabled\", \"monthDropdownTestId\", \"yearDropdownTestId\", \"prevMonthButtonTestId\", \"nextMonthButtonTestId\"]);\n  const {\n    locale,\n    direction\n  } = useConfigProvider();\n  const onMonthsChange = React.useCallback((_, newValue) => onChange(setMonth(viewDate, Number(newValue))), [onChange, viewDate]);\n  const onYearChange = React.useCallback((_, newValue) => onChange(setYear(viewDate, Number(newValue))), [onChange, viewDate]);\n  const currentYear = viewDate.getFullYear();\n  const currentMonth = viewDate.getMonth();\n  const months = React.useMemo(() => getMonths(locale).map(_ref => {\n    let {\n      value,\n      label\n    } = _ref;\n    return {\n      value,\n      label: /*#__PURE__*/_jsx(\"span\", {\n        className: \"vkuiCalendarHeader__month\",\n        children: label\n      }),\n      disabled: isMonthDisabled && isMonthDisabled(value)\n    };\n  }), [locale, isMonthDisabled]);\n  const years = React.useMemo(() => getYears(currentYear, 100).map(year => _object_spread_props(_object_spread({}, year), {\n    disabled: isYearDisabled && isYearDisabled(year.value)\n  })), [currentYear, isYearDisabled]);\n  const formatter = new Intl.DateTimeFormat(locale, {\n    year: 'numeric',\n    month: 'long'\n  });\n  const {\n      className: prevMonthClassName\n    } = prevMonthProps,\n    restPrevMonthProps = _object_without_properties(prevMonthProps, [\"className\"]);\n  const {\n      className: nextMonthClassName\n    } = nextMonthProps,\n    restNextMonthProps = _object_without_properties(nextMonthProps, [\"className\"]);\n  let nextMonthHidden = nextMonthHiddenProp || currentMonth === 11 && currentYear === DEFAULT_MAX_YEAR;\n  if (isMonthDisabled && !nextMonthHidden) {\n    nextMonthHidden = isMonthDisabled(currentMonth === 11 ? 0 : currentMonth + 1, currentMonth === 11 ? Math.min(currentYear + 1, DEFAULT_MAX_YEAR) : currentYear);\n  }\n  let prevMonthHidden = prevMonthHiddenProp || currentMonth === 0 && currentYear === DEFAULT_MIN_YEAR;\n  if (isMonthDisabled && !prevMonthHidden) {\n    prevMonthHidden = isMonthDisabled(currentMonth === 0 ? 11 : currentMonth - 1, currentMonth === 0 ? Math.max(currentYear - 1, DEFAULT_MIN_YEAR) : currentYear);\n  }\n  return /*#__PURE__*/_jsxs(RootComponent, _object_spread_props(_object_spread({\n    baseClassName: \"vkuiCalendarHeader__host\"\n  }, restProps), {\n    children: [!prevMonthHidden && /*#__PURE__*/_jsx(AdaptivityProvider, {\n      sizeX: \"regular\",\n      children: /*#__PURE__*/_jsxs(Tappable, _object_spread_props(_object_spread({\n        baseClassName: classNames(\"vkuiCalendarHeader__navIcon\", \"vkuiCalendarHeader__navIconPrev\", prevMonthClassName),\n        onClick: onPrevMonth,\n        \"data-testid\": prevMonthButtonTestId\n      }, restPrevMonthProps), {\n        children: [/*#__PURE__*/_jsxs(VisuallyHidden, {\n          children: [prevMonthLabel, \", \", formatter.format(subMonths(viewDate, 1))]\n        }), direction === 'ltr' ? prevMonthIcon : nextMonthIcon]\n      }))\n    }), disablePickers ? /*#__PURE__*/_jsxs(Paragraph, {\n      className: classNames(\"vkuiCalendarHeader__pickers\", 'vkuiInternalCalendarHeader__pickers'),\n      weight: \"2\",\n      children: [/*#__PURE__*/_jsx(\"span\", {\n        className: \"vkuiCalendarHeader__month\",\n        children: new Intl.DateTimeFormat(locale, {\n          month: 'long'\n        }).format(viewDate)\n      }), \" \", new Intl.DateTimeFormat(locale, {\n        year: 'numeric'\n      }).format(viewDate)]\n    }) : /*#__PURE__*/_jsx(AdaptivityProvider, {\n      sizeY: \"compact\",\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: classNames(\"vkuiCalendarHeader__pickers\", 'vkuiInternalCalendarHeader__pickers'),\n        children: [/*#__PURE__*/_jsx(CustomSelect, {\n          className: classNames(\"vkuiCalendarHeader__picker\", 'vkuiInternalCalendarHeader__picker'),\n          value: currentMonth,\n          options: months,\n          dropdownOffsetDistance: 4,\n          dropdownAutoWidth: true,\n          icon: /*#__PURE__*/_jsx(Icon12Dropdown, {}),\n          onChange: onMonthsChange,\n          forceDropdownPortal: false,\n          selectType: \"accent\",\n          \"aria-label\": changeMonthLabel,\n          \"data-testid\": typeof monthDropdownTestId === 'string' ? monthDropdownTestId : monthDropdownTestId === null || monthDropdownTestId === void 0 ? void 0 : monthDropdownTestId(currentMonth)\n        }), /*#__PURE__*/_jsx(CustomSelect, {\n          className: classNames(\"vkuiCalendarHeader__picker\", 'vkuiInternalCalendarHeader__picker'),\n          value: currentYear,\n          options: years,\n          dropdownOffsetDistance: 4,\n          dropdownAutoWidth: true,\n          icon: /*#__PURE__*/_jsx(Icon12Dropdown, {}),\n          onChange: onYearChange,\n          forceDropdownPortal: false,\n          selectType: \"accent\",\n          \"aria-label\": changeYearLabel,\n          \"data-testid\": yearDropdownTestId\n        })]\n      })\n    }), !nextMonthHidden && /*#__PURE__*/_jsx(AdaptivityProvider, {\n      sizeX: \"regular\",\n      children: /*#__PURE__*/_jsxs(Tappable, _object_spread_props(_object_spread({\n        baseClassName: classNames(\"vkuiCalendarHeader__navIcon\", \"vkuiCalendarHeader__navIconNext\", nextMonthClassName),\n        onClick: onNextMonth,\n        \"data-testid\": nextMonthButtonTestId\n      }, restNextMonthProps), {\n        children: [/*#__PURE__*/_jsxs(VisuallyHidden, {\n          children: [nextMonthLabel, \", \", formatter.format(addMonths(viewDate, 1))]\n        }), direction === 'ltr' ? nextMonthIcon : prevMonthIcon]\n      }))\n    })]\n  }));\n};","map":{"version":3,"names":["React","Icon12Dropdown","Icon20ChevronLeftOutline","Icon20ChevronRightOutline","classNames","addMonths","setMonth","setYear","subMonths","DEFAULT_MAX_YEAR","DEFAULT_MIN_YEAR","getMonths","getYears","AdaptivityProvider","useConfigProvider","CustomSelect","RootComponent","Tappable","Paragraph","VisuallyHidden","CalendarHeader","_param","viewDate","onChange","prevMonthHidden","prevMonthHiddenProp","nextMonthHidden","nextMonthHiddenProp","disablePickers","onNextMonth","onPrevMonth","prevMonthProps","nextMonthProps","prevMonthLabel","nextMonthLabel","changeMonthLabel","changeYearLabel","prevMonthIcon","_jsx","className","width","height","nextMonthIcon","isMonthDisabled","isYearDisabled","monthDropdownTestId","yearDropdownTestId","prevMonthButtonTestId","nextMonthButtonTestId","restProps","_object_without_properties","locale","direction","onMonthsChange","useCallback","_","newValue","Number","onYearChange","currentYear","getFullYear","currentMonth","getMonth","months","useMemo","map","_ref","value","label","disabled","years","year","_object_spread_props","_object_spread","formatter","Intl","DateTimeFormat","month","prevMonthClassName","restPrevMonthProps","nextMonthClassName","restNextMonthProps","Math","min","max","_jsxs","baseClassName","sizeX","onClick","format","weight","sizeY","options","dropdownOffsetDistance","dropdownAutoWidth","icon","forceDropdownPortal","selectType"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/components/CalendarHeader/CalendarHeader.tsx"],"sourcesContent":["'use client';\n\nimport { type ChangeEvent } from 'react';\nimport * as React from 'react';\nimport {\n  Icon12Dropdown,\n  Icon20ChevronLeftOutline,\n  Icon20ChevronRightOutline,\n} from '@vkontakte/icons';\nimport { classNames } from '@vkontakte/vkjs';\nimport { addMonths, setMonth, setYear, subMonths } from 'date-fns';\nimport { DEFAULT_MAX_YEAR, DEFAULT_MIN_YEAR, getMonths, getYears } from '../../lib/calendar';\nimport type { HTMLAttributesWithRootRef } from '../../types';\nimport { AdaptivityProvider } from '../AdaptivityProvider/AdaptivityProvider';\nimport { useConfigProvider } from '../ConfigProvider/ConfigProviderContext';\nimport { CustomSelect, type SelectProps } from '../CustomSelect/CustomSelect';\nimport { RootComponent } from '../RootComponent/RootComponent';\nimport { Tappable } from '../Tappable/Tappable';\nimport { Paragraph } from '../Typography/Paragraph/Paragraph';\nimport { VisuallyHidden } from '../VisuallyHidden/VisuallyHidden';\nimport styles from './CalendarHeader.module.css';\n\ntype ArrowMonthProps = Omit<React.AllHTMLAttributes<HTMLElement>, 'onClick' | 'aria-label'>;\n\nexport type CalendarHeaderTestsProps = {\n  /**\n   * Передает атрибут `data-testid` для дропдауна выбора месяца в заголовке календаря\n   */\n  monthDropdownTestId?: string | ((monthIndex: number) => string);\n  /**\n   * Передает атрибут `data-testid` для дропдауна выбора года в заголовке календаря\n   */\n  yearDropdownTestId?: string | ((year: number) => string);\n  /**\n   * Передает атрибут `data-testid` для кнопки перехода к следующему месяцу в заголовке календаря\n   */\n  nextMonthButtonTestId?: string;\n  /**\n   * Передает атрибут `data-testid` для кнопки перехода к предыдущему месяцу в заголовке календаря\n   */\n  prevMonthButtonTestId?: string;\n};\n\nexport interface CalendarHeaderProps\n  extends Omit<HTMLAttributesWithRootRef<HTMLDivElement>, 'onChange'>,\n    CalendarHeaderTestsProps {\n  viewDate: Date;\n  /**\n   * Скрывает иконку для переключения на предыдущий месяц\n   */\n  prevMonthHidden?: boolean;\n  /**\n   * Скрывает иконку для переключения на следующий месяц\n   */\n  nextMonthHidden?: boolean;\n  disablePickers?: boolean;\n  prevMonthLabel?: string;\n  nextMonthLabel?: string;\n  changeMonthLabel?: string;\n  changeYearLabel?: string;\n  prevMonthIcon?: React.ReactNode;\n  nextMonthIcon?: React.ReactNode;\n  prevMonthProps?: ArrowMonthProps;\n  nextMonthProps?: ArrowMonthProps;\n  isMonthDisabled?: (monthNumber: number, year?: number) => boolean;\n  isYearDisabled?: (yearNumber: number) => boolean;\n  onChange: (viewDate: Date) => void;\n  /**\n   * Нажатие на кнопку переключения на следующий месяц.\n   */\n  onNextMonth?: () => void;\n  /**\n   * Нажатие на кнопку переключения на предыдущий месяц.\n   */\n  onPrevMonth?: () => void;\n}\n\nexport const CalendarHeader = ({\n  viewDate,\n  onChange,\n  prevMonthHidden: prevMonthHiddenProp = false,\n  nextMonthHidden: nextMonthHiddenProp = false,\n  disablePickers = false,\n  onNextMonth,\n  onPrevMonth,\n  prevMonthProps = {},\n  nextMonthProps = {},\n  prevMonthLabel = 'Предыдущий месяц',\n  nextMonthLabel = 'Следующий месяц',\n  changeMonthLabel = 'Изменить месяц',\n  changeYearLabel = 'Изменить год',\n  prevMonthIcon = (\n    <Icon20ChevronLeftOutline className={styles.navIconAccent} width={30} height={30} />\n  ),\n  nextMonthIcon = (\n    <Icon20ChevronRightOutline className={styles.navIconAccent} width={30} height={30} />\n  ),\n  isMonthDisabled,\n  isYearDisabled,\n  monthDropdownTestId,\n  yearDropdownTestId,\n  prevMonthButtonTestId,\n  nextMonthButtonTestId,\n  ...restProps\n}: CalendarHeaderProps): React.ReactNode => {\n  const { locale, direction } = useConfigProvider();\n\n  const onMonthsChange = React.useCallback(\n    (_: ChangeEvent<HTMLSelectElement>, newValue: SelectProps['value']) =>\n      onChange(setMonth(viewDate, Number(newValue))),\n    [onChange, viewDate],\n  );\n  const onYearChange = React.useCallback(\n    (_: ChangeEvent<HTMLSelectElement>, newValue: SelectProps['value']) =>\n      onChange(setYear(viewDate, Number(newValue))),\n    [onChange, viewDate],\n  );\n\n  const currentYear = viewDate.getFullYear();\n  const currentMonth = viewDate.getMonth();\n\n  const months = React.useMemo(\n    () =>\n      getMonths(locale).map(({ value, label }) => ({\n        value,\n        label: <span className={styles.month}>{label}</span>,\n        disabled: isMonthDisabled && isMonthDisabled(value),\n      })),\n    [locale, isMonthDisabled],\n  );\n\n  const years = React.useMemo(\n    () =>\n      getYears(currentYear, 100).map((year) => ({\n        ...year,\n        disabled: isYearDisabled && isYearDisabled(year.value),\n      })),\n    [currentYear, isYearDisabled],\n  );\n\n  const formatter = new Intl.DateTimeFormat(locale, {\n    year: 'numeric',\n    month: 'long',\n  });\n\n  const { className: prevMonthClassName, ...restPrevMonthProps } = prevMonthProps;\n  const { className: nextMonthClassName, ...restNextMonthProps } = nextMonthProps;\n\n  let nextMonthHidden =\n    nextMonthHiddenProp || (currentMonth === 11 && currentYear === DEFAULT_MAX_YEAR);\n  if (isMonthDisabled && !nextMonthHidden) {\n    nextMonthHidden = isMonthDisabled(\n      currentMonth === 11 ? 0 : currentMonth + 1,\n      currentMonth === 11 ? Math.min(currentYear + 1, DEFAULT_MAX_YEAR) : currentYear,\n    );\n  }\n\n  let prevMonthHidden =\n    prevMonthHiddenProp || (currentMonth === 0 && currentYear === DEFAULT_MIN_YEAR);\n  if (isMonthDisabled && !prevMonthHidden) {\n    prevMonthHidden = isMonthDisabled(\n      currentMonth === 0 ? 11 : currentMonth - 1,\n      currentMonth === 0 ? Math.max(currentYear - 1, DEFAULT_MIN_YEAR) : currentYear,\n    );\n  }\n\n  return (\n    <RootComponent baseClassName={styles.host} {...restProps}>\n      {!prevMonthHidden && (\n        <AdaptivityProvider sizeX=\"regular\">\n          <Tappable\n            baseClassName={classNames(styles.navIcon, styles.navIconPrev, prevMonthClassName)}\n            onClick={onPrevMonth}\n            data-testid={prevMonthButtonTestId}\n            {...restPrevMonthProps}\n          >\n            <VisuallyHidden>\n              {prevMonthLabel}, {formatter.format(subMonths(viewDate, 1))}\n            </VisuallyHidden>\n            {direction === 'ltr' ? prevMonthIcon : nextMonthIcon}\n          </Tappable>\n        </AdaptivityProvider>\n      )}\n      {disablePickers ? (\n        <Paragraph\n          className={classNames(styles.pickers, 'vkuiInternalCalendarHeader__pickers')}\n          weight=\"2\"\n        >\n          <span className={styles.month}>\n            {new Intl.DateTimeFormat(locale, {\n              month: 'long',\n            }).format(viewDate)}\n          </span>\n          &nbsp;\n          {new Intl.DateTimeFormat(locale, {\n            year: 'numeric',\n          }).format(viewDate)}\n        </Paragraph>\n      ) : (\n        <AdaptivityProvider sizeY=\"compact\">\n          <div className={classNames(styles.pickers, 'vkuiInternalCalendarHeader__pickers')}>\n            <CustomSelect\n              className={classNames(styles.picker, 'vkuiInternalCalendarHeader__picker')}\n              value={currentMonth}\n              options={months}\n              dropdownOffsetDistance={4}\n              dropdownAutoWidth\n              icon={<Icon12Dropdown />}\n              onChange={onMonthsChange}\n              forceDropdownPortal={false}\n              selectType=\"accent\"\n              aria-label={changeMonthLabel}\n              data-testid={\n                typeof monthDropdownTestId === 'string'\n                  ? monthDropdownTestId\n                  : monthDropdownTestId?.(currentMonth)\n              }\n            />\n            <CustomSelect\n              className={classNames(styles.picker, 'vkuiInternalCalendarHeader__picker')}\n              value={currentYear}\n              options={years}\n              dropdownOffsetDistance={4}\n              dropdownAutoWidth\n              icon={<Icon12Dropdown />}\n              onChange={onYearChange}\n              forceDropdownPortal={false}\n              selectType=\"accent\"\n              aria-label={changeYearLabel}\n              data-testid={yearDropdownTestId}\n            />\n          </div>\n        </AdaptivityProvider>\n      )}\n      {!nextMonthHidden && (\n        <AdaptivityProvider sizeX=\"regular\">\n          <Tappable\n            baseClassName={classNames(styles.navIcon, styles.navIconNext, nextMonthClassName)}\n            onClick={onNextMonth}\n            data-testid={nextMonthButtonTestId}\n            {...restNextMonthProps}\n          >\n            <VisuallyHidden>\n              {nextMonthLabel}, {formatter.format(addMonths(viewDate, 1))}\n            </VisuallyHidden>\n            {direction === 'ltr' ? nextMonthIcon : prevMonthIcon}\n          </Tappable>\n        </AdaptivityProvider>\n      )}\n    </RootComponent>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}