{"ast":null,"code":"import { useEffect, useState } from \"react\";\nimport { useDOM } from \"../lib/dom.js\";\n/**\n * Возвращает текущую ориентация экрана на человеческом языке.\n * Учитывает особенности API на разных платформах.\n */\nfunction getOrientation(window) {\n  var\n    // eslint-disable-next-line compat/compat\n    _window_screen_orientation, _window_screen;\n  var _window_screen_orientation_angle;\n  const angle = Math.abs((_window_screen_orientation_angle = (_window_screen = window.screen) === null || _window_screen === void 0 ? void 0 : (_window_screen_orientation = _window_screen.orientation) === null || _window_screen_orientation === void 0 ? void 0 : _window_screen_orientation.angle) !== null && _window_screen_orientation_angle !== void 0 ? _window_screen_orientation_angle : Number(window.orientation));\n  return angle === 90 ? 'landscape' : 'portrait';\n}\n/**\n * Возвращает текущую ориентация экрана на человеческом языке.\n * Обновляется при изменении ориентации.\n */\nexport function useOrientationChange() {\n  const {\n    window\n  } = useDOM();\n  const [orientation, setOrientation] = useState('portrait');\n  useEffect(function mount() {\n    /* istanbul ignore if: невозможный кейс (в SSR вызова этой функции не будет) */if (!window) {\n      return;\n    }\n    const handleChange = () => {\n      setOrientation(getOrientation(window));\n    };\n    handleChange();\n    window.addEventListener('orientationchange', handleChange);\n    return function unmount() {\n      window.removeEventListener('orientationchange', handleChange);\n    };\n  }, [window]);\n  return orientation;\n}","map":{"version":3,"names":["useEffect","useState","useDOM","getOrientation","window","_window_screen_orientation","_window_screen","_window_screen_orientation_angle","angle","Math","abs","screen","orientation","Number","useOrientationChange","setOrientation","mount","handleChange","addEventListener","unmount","removeEventListener"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/hooks/useOrientationChange.ts"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useDOM } from '../lib/dom';\n\nexport type Orientation = 'portrait' | 'landscape';\n\n/**\n * Возвращает текущую ориентация экрана на человеческом языке.\n * Учитывает особенности API на разных платформах.\n */\nfunction getOrientation(window: Window): Orientation {\n  const angle = Math.abs(\n    // eslint-disable-next-line compat/compat\n    window.screen?.orientation?.angle ?? Number(window.orientation),\n  );\n\n  return angle === 90 ? 'landscape' : 'portrait';\n}\n\n/**\n * Возвращает текущую ориентация экрана на человеческом языке.\n * Обновляется при изменении ориентации.\n */\nexport function useOrientationChange(): Orientation {\n  const { window } = useDOM();\n\n  const [orientation, setOrientation] = useState<Orientation>('portrait');\n\n  useEffect(\n    function mount() {\n      /* istanbul ignore if: невозможный кейс (в SSR вызова этой функции не будет) */\n      if (!window) {\n        return;\n      }\n\n      const handleChange = () => {\n        setOrientation(getOrientation(window));\n      };\n\n      handleChange();\n\n      window.addEventListener('orientationchange', handleChange);\n      return function unmount() {\n        window.removeEventListener('orientationchange', handleChange);\n      };\n    },\n    [window],\n  );\n\n  return orientation;\n}\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ;AACpC,SAASC,MAAM,QAAQ;AAIvB;;;;AAIA,SAASC,eAAeC,MAAc;;IAElC;IACAC,0BAAA,EAAAC,cAAA;MAAAC,gCAAA;EAFF,MAAMC,KAAA,GAAQC,IAAA,CAAKC,GAAG,CAEpB,CAAAH,gCAAA,IAAAD,cAAA,GAAAF,MAAA,CAAOO,MAAM,cAAbL,cAAA,wBAAAD,0BAAA,GAAAC,cAAA,CAAeM,WAAW,cAA1BP,0BAAA,uBAAAA,0BAAA,CAA4BG,KAAK,cAAjCD,gCAAA,cAAAA,gCAAA,GAAqCM,MAAA,CAAOT,MAAA,CAAOQ,WAAW;EAGhE,OAAOJ,KAAA,KAAU,KAAK,cAAc;AACtC;AAEA;;;;AAIA,OAAO,SAASM,qBAAA;EACd,MAAM;IAAEV;EAAM,CAAE,GAAGF,MAAA;EAEnB,MAAM,CAACU,WAAA,EAAaG,cAAA,CAAe,GAAGd,QAAA,CAAsB;EAE5DD,SAAA,CACE,SAASgB,MAAA;IACP,+EACA,IAAI,CAACZ,MAAA,EAAQ;MACX;IACF;IAEA,MAAMa,YAAA,GAAeA,CAAA;MACnBF,cAAA,CAAeZ,cAAA,CAAeC,MAAA;IAChC;IAEAa,YAAA;IAEAb,MAAA,CAAOc,gBAAgB,CAAC,qBAAqBD,YAAA;IAC7C,OAAO,SAASE,QAAA;MACdf,MAAA,CAAOgB,mBAAmB,CAAC,qBAAqBH,YAAA;IAClD;EACF,GACA,CAACb,MAAA,CAAO;EAGV,OAAOQ,WAAA;AACT","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}