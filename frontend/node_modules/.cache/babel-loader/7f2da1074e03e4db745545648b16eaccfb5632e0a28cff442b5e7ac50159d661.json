{"ast":null,"code":"'use client';\n\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { classNames } from \"@vkontakte/vkjs\";\nimport { useAdaptivity } from \"../../../hooks/useAdaptivity.js\";\nimport { Typography } from \"../Typography.js\";\nconst sizeYClassNames = {\n  none: \"vkuiText__sizeYNone\",\n  compact: \"vkuiText__sizeYCompact\"\n};\n/**\n * Основной наборный текст.\n *\n * @see https://vkcom.github.io/VKUI/#/Text\n */\nexport const Text = _param => {\n  var {\n      className,\n      Component = 'span',\n      normalize = true,\n      inline = false\n    } = _param,\n    restProps = _object_without_properties(_param, [\"className\", \"Component\", \"normalize\", \"inline\"]);\n  const {\n    sizeY = 'none'\n  } = useAdaptivity();\n  return /*#__PURE__*/_jsx(Typography, _object_spread({\n    Component: Component,\n    normalize: normalize,\n    inline: inline,\n    className: classNames(className, \"vkuiText__host\", sizeY !== 'regular' && sizeYClassNames[sizeY])\n  }, restProps));\n};","map":{"version":3,"names":["classNames","useAdaptivity","Typography","sizeYClassNames","none","compact","Text","_param","className","Component","normalize","inline","restProps","_object_without_properties","sizeY","_jsx","_object_spread"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/components/Typography/Text/Text.tsx"],"sourcesContent":["'use client';\n\nimport { classNames } from '@vkontakte/vkjs';\nimport { useAdaptivity } from '../../../hooks/useAdaptivity';\nimport { Typography, type TypographyProps } from '../Typography';\nimport styles from './Text.module.css';\n\nconst sizeYClassNames = {\n  none: styles.sizeYNone,\n  compact: styles.sizeYCompact,\n};\n\nexport type TextProps = TypographyProps;\n\n/**\n * Основной наборный текст.\n *\n * @see https://vkcom.github.io/VKUI/#/Text\n */\nexport const Text = ({\n  className,\n  Component = 'span',\n  normalize = true,\n  inline = false,\n  ...restProps\n}: TextProps): React.ReactNode => {\n  const { sizeY = 'none' } = useAdaptivity();\n\n  return (\n    <Typography\n      Component={Component}\n      normalize={normalize}\n      inline={inline}\n      className={classNames(className, styles.host, sizeY !== 'regular' && sizeYClassNames[sizeY])}\n      {...restProps}\n    />\n  );\n};\n"],"mappings":"AAAA;;;;;AAEA,SAASA,UAAU,QAAQ;AAC3B,SAASC,aAAa,QAAQ;AAC9B,SAASC,UAAU,QAA8B;AAGjD,MAAMC,eAAA,GAAkB;EACtBC,IAAI;EACJC,OAAO;AACT;AAIA;;;;;AAKA,OAAO,MAAMC,IAAA,GAAOC,MAAA;MAAC;MACnBC,SAAS;MACTC,SAAA,GAAY,MAAM;MAClBC,SAAA,GAAY,IAAI;MAChBC,MAAA,GAAS;IAAK,CAEJ,GAAAJ,MAAA;IADPK,SAAA,GAAAC,0BAAA,CAAAN,MAAA,GAJH,aACA,aACA,aACA,S;EAGA,MAAM;IAAEO,KAAA,GAAQ;EAAM,CAAE,GAAGb,aAAA;EAE3B,oBACEc,IAAA,CAACb,UAAA,EAAAc,cAAA;IACCP,SAAA,EAAWA,SAAA;IACXC,SAAA,EAAWA,SAAA;IACXC,MAAA,EAAQA,MAAA;IACRH,SAAA,EAAWR,UAAA,CAAWQ,SAAA,oBAAwBM,KAAA,KAAU,aAAaX,eAAe,CAACW,KAAA,CAAM;KACvFF,SAAA;AAGV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}