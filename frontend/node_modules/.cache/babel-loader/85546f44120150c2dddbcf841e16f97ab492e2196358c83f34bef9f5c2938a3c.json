{"ast":null,"code":"'use client';\n\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nimport { classNames } from \"@vkontakte/vkjs\";\nimport { usePlatform } from \"../../hooks/usePlatform.js\";\nimport { useDOM } from \"../../lib/dom.js\";\nimport { getNavId } from \"../../lib/getNavId.js\";\nimport { useIsomorphicLayoutEffect } from \"../../lib/useIsomorphicLayoutEffect.js\";\nimport { warnOnce } from \"../../lib/warnOnce.js\";\nimport { ScrollContext } from \"../AppRoot/ScrollContext.js\";\nimport { useConfigProvider } from \"../ConfigProvider/ConfigProviderContext.js\";\nimport { NavTransitionProvider } from \"../NavTransitionContext/NavTransitionContext.js\";\nimport { NavTransitionDirectionProvider } from \"../NavTransitionDirectionContext/NavTransitionDirectionContext.js\";\nimport { RootComponent } from \"../RootComponent/RootComponent.js\";\nimport { SplitColContext } from \"../SplitCol/SplitColContext.js\";\nconst warn = warnOnce('Root');\n/**\n * @see https://vkcom.github.io/VKUI/#/Root\n */\nexport const Root = _param => {\n  var {\n      children,\n      activeView: _activeView,\n      onTransition,\n      nav\n    } = _param,\n    restProps = _object_without_properties(_param, [\"children\", \"activeView\", \"onTransition\", \"nav\"]);\n  const scroll = React.useContext(ScrollContext);\n  const platform = usePlatform();\n  const {\n    document\n  } = useDOM();\n  const scrolls = React.useRef({}).current;\n  const viewNodes = React.useRef({}).current;\n  const {\n    transitionMotionEnabled = true\n  } = useConfigProvider();\n  const {\n    animate\n  } = React.useContext(SplitColContext);\n  const disableAnimation = !transitionMotionEnabled || !animate;\n  const views = React.Children.toArray(children);\n  const [{\n    prevView,\n    activeView,\n    transition,\n    isBack\n  }, _setState] = React.useState({\n    activeView: _activeView,\n    transition: false\n  });\n  const transitionTo = panel => {\n    if (panel !== activeView) {\n      const viewIds = views.map(view => getNavId(view.props, warn));\n      const isBack = viewIds.indexOf(panel) < viewIds.indexOf(activeView);\n      scrolls[activeView] = scroll.getScroll().y;\n      _setState({\n        activeView: panel,\n        prevView: activeView,\n        transition: !disableAnimation,\n        isBack\n      });\n    }\n  };\n  const finishTransition = React.useCallback(() => _setState({\n    activeView,\n    prevView,\n    isBack,\n    transition: false\n  }), [activeView, isBack, prevView]);\n  useIsomorphicLayoutEffect(() => {\n    document.activeElement.blur();\n  }, [activeView]);\n  // Нужен переход\n  useIsomorphicLayoutEffect(() => transitionTo(_activeView), [_activeView]);\n  useIsomorphicLayoutEffect(() => {\n    if (!transition && prevView) {\n      // Закончился переход\n      scroll.scrollTo(0, isBack ? scrolls[activeView] : 0);\n      onTransition && onTransition({\n        isBack: Boolean(isBack),\n        from: prevView,\n        to: activeView\n      });\n    }\n  }, [transition, prevView]);\n  React.useEffect(function onAnimationEndFallback() {\n    if (transition && disableAnimation) {\n      finishTransition();\n    }\n  }, [transition, disableAnimation, finishTransition]);\n  const onAnimationEnd = () => {\n    finishTransition();\n  };\n  return /*#__PURE__*/_jsx(RootComponent, _object_spread_props(_object_spread({}, restProps), {\n    baseClassName: classNames(\"vkuiRoot__host\", platform === 'ios' && \"vkuiRoot__ios\", transition && \"vkuiRoot__transition\"),\n    children: views.map(view => {\n      const viewId = getNavId(view.props, warn);\n      if (viewId !== activeView && !(transition && viewId === prevView)) {\n        return null;\n      }\n      const isTransitionTarget = transition && viewId === (isBack ? prevView : activeView);\n      const compensateScroll = transition && (viewId === prevView || isBack && viewId === activeView);\n      var _scrolls_viewId;\n      return /*#__PURE__*/_jsx(\"div\", {\n        ref: e => {\n          viewId && (viewNodes[viewId] = e);\n        },\n        onAnimationEnd: isTransitionTarget ? onAnimationEnd : undefined,\n        className: classNames(\"vkuiRoot__view\", transition && viewId === prevView && isBack && \"vkuiRoot__viewHideBack\", transition && viewId === prevView && !isBack && \"vkuiRoot__viewHideForward\", transition && viewId === activeView && isBack && \"vkuiRoot__viewShowBack\", transition && viewId === activeView && !isBack && \"vkuiRoot__viewShowForward\"),\n        children: /*#__PURE__*/_jsx(NavTransitionDirectionProvider, {\n          isBack: isBack,\n          children: /*#__PURE__*/_jsx(NavTransitionProvider, {\n            entering: transition && viewId === activeView,\n            children: /*#__PURE__*/_jsx(\"div\", {\n              className: \"vkuiRoot__scrollCompensation\",\n              style: {\n                marginTop: compensateScroll ? viewId && -((_scrolls_viewId = scrolls[viewId]) !== null && _scrolls_viewId !== void 0 ? _scrolls_viewId : 0) : undefined\n              },\n              children: view\n            })\n          })\n        })\n      }, viewId);\n    })\n  }));\n};","map":{"version":3,"names":["React","classNames","usePlatform","useDOM","getNavId","useIsomorphicLayoutEffect","warnOnce","ScrollContext","useConfigProvider","NavTransitionProvider","NavTransitionDirectionProvider","RootComponent","SplitColContext","warn","Root","_param","children","activeView","_activeView","onTransition","nav","restProps","_object_without_properties","scroll","useContext","platform","document","scrolls","useRef","current","viewNodes","transitionMotionEnabled","animate","disableAnimation","views","Children","toArray","prevView","transition","isBack","_setState","useState","transitionTo","panel","viewIds","map","view","props","indexOf","getScroll","y","finishTransition","useCallback","activeElement","blur","scrollTo","Boolean","from","to","useEffect","onAnimationEndFallback","onAnimationEnd","_jsx","_object_spread_props","_object_spread","baseClassName","viewId","isTransitionTarget","compensateScroll","_scrolls_viewId","ref","e","undefined","className","entering","style","marginTop"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/components/Root/Root.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { useDOM } from '../../lib/dom';\nimport { getNavId, type NavIdProps } from '../../lib/getNavId';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport { warnOnce } from '../../lib/warnOnce';\nimport type { HTMLAttributesWithRootRef } from '../../types';\nimport { ScrollContext } from '../AppRoot/ScrollContext';\nimport { useConfigProvider } from '../ConfigProvider/ConfigProviderContext';\nimport { NavTransitionProvider } from '../NavTransitionContext/NavTransitionContext';\nimport { NavTransitionDirectionProvider } from '../NavTransitionDirectionContext/NavTransitionDirectionContext';\nimport { RootComponent } from '../RootComponent/RootComponent';\nimport { SplitColContext } from '../SplitCol/SplitColContext';\nimport styles from './Root.module.css';\n\nexport interface RootProps extends HTMLAttributesWithRootRef<HTMLDivElement>, NavIdProps {\n  activeView: string;\n  onTransition?: (params: { isBack: boolean; from: string; to: string }) => void;\n  children: React.ReactElement | Iterable<React.ReactElement>;\n}\n\nexport interface RootState {\n  activeView: string;\n  transition: boolean;\n  isBack?: boolean;\n  prevView?: string;\n}\n\nconst warn = warnOnce('Root');\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Root\n */\nexport const Root = ({\n  children,\n  activeView: _activeView,\n  onTransition,\n  nav,\n  ...restProps\n}: RootProps): React.ReactNode => {\n  const scroll = React.useContext(ScrollContext);\n  const platform = usePlatform();\n  const { document } = useDOM();\n  const scrolls = React.useRef<Record<string, number>>({}).current;\n  const viewNodes = React.useRef<Record<string, HTMLElement | null>>({}).current;\n\n  const { transitionMotionEnabled = true } = useConfigProvider();\n  const { animate } = React.useContext(SplitColContext);\n  const disableAnimation = !transitionMotionEnabled || !animate;\n\n  const views = React.Children.toArray(children) as Array<React.ReactElement<NavIdProps>>;\n\n  const [{ prevView, activeView, transition, isBack }, _setState] = React.useState<RootState>({\n    activeView: _activeView,\n    transition: false,\n  });\n  const transitionTo = (panel: string) => {\n    if (panel !== activeView) {\n      const viewIds = views.map((view) => getNavId(view.props, warn));\n      const isBack = viewIds.indexOf(panel) < viewIds.indexOf(activeView);\n      scrolls[activeView] = scroll.getScroll().y;\n      _setState({\n        activeView: panel,\n        prevView: activeView,\n        transition: !disableAnimation,\n        isBack,\n      });\n    }\n  };\n  const finishTransition = React.useCallback(\n    () => _setState({ activeView, prevView, isBack, transition: false }),\n    [activeView, isBack, prevView],\n  );\n\n  useIsomorphicLayoutEffect(() => {\n    (document!.activeElement as HTMLElement).blur();\n  }, [activeView]);\n\n  // Нужен переход\n  useIsomorphicLayoutEffect(() => transitionTo(_activeView), [_activeView]);\n  useIsomorphicLayoutEffect(() => {\n    if (!transition && prevView) {\n      // Закончился переход\n      scroll.scrollTo(0, isBack ? scrolls[activeView] : 0);\n      onTransition &&\n        onTransition({\n          isBack: Boolean(isBack),\n          from: prevView,\n          to: activeView,\n        });\n    }\n  }, [transition, prevView]);\n\n  React.useEffect(\n    function onAnimationEndFallback() {\n      if (transition && disableAnimation) {\n        finishTransition();\n      }\n    },\n    [transition, disableAnimation, finishTransition],\n  );\n\n  const onAnimationEnd = () => {\n    finishTransition();\n  };\n\n  return (\n    <RootComponent\n      {...restProps}\n      baseClassName={classNames(\n        styles.host,\n        platform === 'ios' && styles.ios,\n        transition && styles.transition,\n      )}\n    >\n      {views.map((view) => {\n        const viewId = getNavId(view.props, warn);\n        if (viewId !== activeView && !(transition && viewId === prevView)) {\n          return null;\n        }\n        const isTransitionTarget = transition && viewId === (isBack ? prevView : activeView);\n        const compensateScroll =\n          transition && (viewId === prevView || (isBack && viewId === activeView));\n        return (\n          <div\n            key={viewId}\n            ref={(e) => {\n              viewId && (viewNodes[viewId] = e);\n            }}\n            onAnimationEnd={isTransitionTarget ? onAnimationEnd : undefined}\n            className={classNames(\n              styles.view,\n              transition && viewId === prevView && isBack && styles.viewHideBack,\n              transition && viewId === prevView && !isBack && styles.viewHideForward,\n              transition && viewId === activeView && isBack && styles.viewShowBack,\n              transition && viewId === activeView && !isBack && styles.viewShowForward,\n            )}\n          >\n            <NavTransitionDirectionProvider isBack={isBack}>\n              <NavTransitionProvider entering={transition && viewId === activeView}>\n                <div\n                  className={styles.scrollCompensation}\n                  style={{\n                    marginTop: compensateScroll ? viewId && -(scrolls[viewId] ?? 0) : undefined,\n                  }}\n                >\n                  {view}\n                </div>\n              </NavTransitionProvider>\n            </NavTransitionDirectionProvider>\n          </div>\n        );\n      })}\n    </RootComponent>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}