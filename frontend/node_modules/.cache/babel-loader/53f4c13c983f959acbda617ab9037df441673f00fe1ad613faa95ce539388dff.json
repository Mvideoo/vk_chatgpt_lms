{"ast":null,"code":"'use client';\n\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nimport { useReferenceElement } from \"../../hooks/useReferenceElement.js\";\nimport { useTooltip } from \"./useTooltip.js\";\n/**\n * @see https://vkcom.github.io/VKUI/#/Tooltip\n */\nexport const Tooltip = _param => {\n  var {\n      children\n    } = _param,\n    restProps = _object_without_properties(_param, [\"children\"]);\n  const {\n    anchorRef,\n    anchorProps,\n    tooltip\n  } = useTooltip(restProps);\n  const anchor = useReferenceElement(children, anchorProps, anchorRef);\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [anchor, tooltip]\n  });\n};","map":{"version":3,"names":["React","useReferenceElement","useTooltip","Tooltip","_param","children","restProps","_object_without_properties","anchorRef","anchorProps","tooltip","anchor","_jsxs","Fragment"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/components/Tooltip/Tooltip.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { useReferenceElement } from '../../hooks/useReferenceElement';\nimport { type FloatingComponentProps, type OnShownChange } from '../../lib/floating';\nimport { type FloatingArrowProps as FloatingArrowPropsPrivate } from '../FloatingArrow/FloatingArrow';\nimport { type TooltipBaseProps } from '../TooltipBase/TooltipBase';\nimport { useTooltip } from './useTooltip';\n\ntype AllowedFloatingComponentProps = Pick<\n  FloatingComponentProps,\n  | 'arrowHeight'\n  | 'arrowPadding'\n  | 'hoverDelay'\n  | 'placement'\n  | 'offsetByMainAxis'\n  | 'offsetByCrossAxis'\n  | 'defaultShown'\n  | 'onShownChange'\n  | 'hideWhenReferenceHidden'\n  | 'onReferenceHiddenChange'\n  | 'children'\n  | 'zIndex'\n  | 'usePortal'\n  | 'onPlacementChange'\n  | 'disableFlipMiddleware'\n  | 'strategy'\n>;\n\ntype AllowedTooltipBaseProps = Omit<TooltipBaseProps, 'arrowProps' | 'onCloseIconClick'>;\n\n/**\n * @alias\n * @public\n */\nexport type TooltipArrowProps = Omit<\n  FloatingArrowPropsPrivate,\n  'getRootRef' | 'coords' | 'placement' | 'Icon'\n>;\n\n/**\n * @alias\n * @public\n */\nexport type TooltipOnShownChange = OnShownChange;\n\nexport interface TooltipProps extends AllowedFloatingComponentProps, AllowedTooltipBaseProps {\n  /**\n   * Передача `boolean` позволяет контролировать состояния показа и скрытия вручную. Используйте\n   * совместно с `onShownChange`.\n   *\n   * > Если нужно разово инициировать показ тултипа при первом рендере, то используйте `defaultShown`.\n   */\n  shown?: boolean;\n  /**\n   * Добавляет возможность наводить на тултип.\n   */\n  enableInteractive?: boolean;\n  /**\n   * Добавляет возможность закрыть тултип через иконку-крестик.\n   *\n   * > Работает в сочетании с `enableInteractive` или при использовании `shown` и `onShownChange`.\n   */\n  closable?: boolean;\n  /**\n   * Скрывает стрелку, указывающую на якорный элемент.\n   */\n  disableArrow?: boolean;\n  /**\n   * Отключает закрытие по клику.\n   */\n  disableCloseAfterClick?: boolean;\n  /**\n   * Отключает появление при фокусе.\n   */\n  disableTriggerOnFocus?: boolean;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Tooltip\n */\nexport const Tooltip = ({ children, ...restProps }: TooltipProps): React.ReactNode => {\n  const { anchorRef, anchorProps, tooltip } = useTooltip(restProps);\n\n  const anchor = useReferenceElement(children, anchorProps, anchorRef);\n\n  return (\n    <React.Fragment>\n      {anchor}\n      {tooltip}\n    </React.Fragment>\n  );\n};\n"],"mappings":"AAAA;;;;AAEA,YAAYA,KAAA,MAAW;AACvB,SAASC,mBAAmB,QAAQ;AAIpC,SAASC,UAAU,QAAQ;AAuE3B;;;AAGA,OAAO,MAAMC,OAAA,GAAUC,MAAA;MAAC;MAAEC;IAAQ,CAA8B,GAAAD,MAAA;IAAzBE,SAAA,GAAAC,0BAAA,CAAAH,MAAA,GAAb,W;EACxB,MAAM;IAAEI,SAAS;IAAEC,WAAW;IAAEC;EAAO,CAAE,GAAGR,UAAA,CAAWI,SAAA;EAEvD,MAAMK,MAAA,GAASV,mBAAA,CAAoBI,QAAA,EAAUI,WAAA,EAAaD,SAAA;EAE1D,oBACEI,KAAA,CAACZ,KAAA,CAAMa,QAAQ;eACZF,MAAA,EACAD,OAAA;;AAGP","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}