{"ast":null,"code":"import { _ as _class_private_field_get } from \"@swc/helpers/_/_class_private_field_get\";\nimport { _ as _class_private_field_init } from \"@swc/helpers/_/_class_private_field_init\";\nimport { _ as _class_private_field_set } from \"@swc/helpers/_/_class_private_field_set\";\nimport * as React from \"react\";\nimport { setRef } from \"../lib/utils.js\";\nvar _element = /*#__PURE__*/new WeakMap(),\n  _externRefs = /*#__PURE__*/new WeakMap();\nclass ExternalRef {\n  updateExternRefs(refs) {\n    refs.forEach(ref => {\n      if (!ref || _class_private_field_get(this, _externRefs).has(ref)) {\n        return;\n      }\n      setRef(_class_private_field_get(this, _element), ref);\n      _class_private_field_get(this, _externRefs).add(ref);\n    });\n  }\n  get current() {\n    return _class_private_field_get(this, _element);\n  }\n  set current(el) {\n    _class_private_field_set(this, _element, el);\n    _class_private_field_get(this, _externRefs).forEach(ref => setRef(el, ref));\n  }\n  /**\n  * React проверяет наличие свойства current у объектов через hasOwnProperty\n  *\n  * https://github.com/facebook/react/blob/c3cdbec0a78d39b5ff7329384cb41c4573a38212/packages/react-reconciler/src/ReactFiberCommitWork.js#L1612\n  */\n  hasOwnProperty(v) {\n    return v === 'current';\n  }\n  constructor() {\n    let externRefs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    _class_private_field_init(this, _element, {\n      writable: true,\n      value: null\n    });\n    _class_private_field_init(this, _externRefs, {\n      writable: true,\n      value: new Set()\n    });\n    externRefs.forEach(ref => {\n      if (ref) {\n        _class_private_field_get(this, _externRefs).add(ref);\n      }\n    });\n  }\n}\nexport function useExternRef() {\n  const ref = React.useRef(null);\n  for (var _len = arguments.length, externRefs = new Array(_len), _key = 0; _key < _len; _key++) {\n    externRefs[_key] = arguments[_key];\n  }\n  if (ref.current === null) {\n    ref.current = new ExternalRef(externRefs);\n  } else {\n    ref.current.updateExternRefs(externRefs);\n  }\n  return ref.current;\n}","map":{"version":3,"names":["React","setRef","_element","WeakMap","_externRefs","ExternalRef","updateExternRefs","refs","forEach","ref","_class_private_field_get","has","add","current","el","hasOwnProperty","v","constructor","externRefs","arguments","length","undefined","_class_private_field_init","Set","useExternRef","useRef","_len","Array","_key"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/hooks/useExternRef.ts"],"sourcesContent":["import * as React from 'react';\nimport { setRef } from '../lib/utils';\n\nclass ExternalRef<T> implements React.RefObject<T | null> {\n  #element: T | null = null;\n  readonly #externRefs = new Set<React.Ref<T>>();\n\n  constructor(externRefs: Array<React.Ref<T> | undefined | false> = []) {\n    externRefs.forEach((ref) => {\n      if (ref) {\n        this.#externRefs.add(ref);\n      }\n    });\n  }\n\n  updateExternRefs(refs: Array<React.Ref<T> | undefined | false>) {\n    refs.forEach((ref) => {\n      if (!ref || this.#externRefs.has(ref)) {\n        return;\n      }\n\n      setRef(this.#element, ref);\n      this.#externRefs.add(ref);\n    });\n  }\n\n  get current() {\n    return this.#element;\n  }\n\n  set current(el) {\n    this.#element = el;\n    this.#externRefs.forEach((ref) => setRef(el, ref));\n  }\n\n  /**\n   * React проверяет наличие свойства current у объектов через hasOwnProperty\n   *\n   * https://github.com/facebook/react/blob/c3cdbec0a78d39b5ff7329384cb41c4573a38212/packages/react-reconciler/src/ReactFiberCommitWork.js#L1612\n   */\n  hasOwnProperty(v: PropertyKey): v is keyof ExternalRef<T> {\n    return v === 'current';\n  }\n}\n\nexport function useExternRef<T>(\n  ...externRefs: Array<React.Ref<T> | undefined | false>\n): React.RefObject<T | null> {\n  const ref = React.useRef<ExternalRef<T> | null>(null);\n  if (ref.current === null) {\n    ref.current = new ExternalRef(externRefs);\n  } else {\n    ref.current.updateExternRefs(externRefs);\n  }\n\n  return ref.current;\n}\n"],"mappings":";;;AAAA,YAAYA,KAAA,MAAW;AACvB,SAASC,MAAM,QAAQ;IAGrBC,QAAA,oBAAAC,OAAA;EACSC,WAAA,oBAAAD,OAAA;AAFX,MAAME,WAAA;EAYJC,iBAAiBC,IAA6C,EAAE;IAC9DA,IAAA,CAAKC,OAAO,CAAEC,GAAA;MACZ,IAAI,CAACA,GAAA,IAAOC,wBAAA,KAAI,EAACN,WAAA,EAAYO,GAAG,CAACF,GAAA,GAAM;QACrC;MACF;MAEAR,MAAA,CAAAS,wBAAA,CAAO,IAAI,EAACR,QAAA,GAAUO,GAAA;MACtBC,wBAAA,KAAI,EAACN,WAAA,EAAYQ,GAAG,CAACH,GAAA;IACvB;EACF;EAEA,IAAII,QAAA,EAAU;IACZ,OAAAH,wBAAA,CAAO,IAAI,EAACR,QAAA;EACd;EAEA,IAAIW,QAAQC,EAAE,EAAE;mCACTZ,QAAA,EAAWY,EAAA;IAChBJ,wBAAA,KAAI,EAACN,WAAA,EAAYI,OAAO,CAAEC,GAAA,IAAQR,MAAA,CAAOa,EAAA,EAAIL,GAAA;EAC/C;EAEA;;;;;EAKAM,eAAeC,CAAc,EAA6B;IACxD,OAAOA,CAAA,KAAM;EACf;EAnCAC,YAAA,EAAsE;IAAA,IAA1DC,UAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAsD,EAAE;IAHpEG,yBAAA,OAAApB,QAAA;;aAAqB;;IACrBoB,yBAAA,OAASlB,WAAA;;aAAc,IAAImB,GAAA;;IAGzBL,UAAA,CAAWV,OAAO,CAAEC,GAAA;MAClB,IAAIA,GAAA,EAAK;QACPC,wBAAA,KAAI,EAACN,WAAA,EAAYQ,GAAG,CAACH,GAAA;MACvB;IACF;EACF;AA8BF;AAEA,OAAO,SAASe,aAAA,EACwC;EAEtD,MAAMf,GAAA,GAAMT,KAAA,CAAMyB,MAAM,CAAwB;EAAA,SAAAC,IAAA,GAAAP,SAAA,CAAAC,MAAA,EAF7CF,UAAmD,OAAAS,KAAA,CAAAD,IAAA,GAAAE,IAAA,MAAAA,IAAA,GAAAF,IAAA,EAAAE,IAAA;IAAnDV,UAAmD,CAAAU,IAAA,IAAAT,SAAA,CAAAS,IAAA;EAAA;EAGtD,IAAInB,GAAA,CAAII,OAAO,KAAK,MAAM;IACxBJ,GAAA,CAAII,OAAO,GAAG,IAAIR,WAAA,CAAYa,UAAA;EAChC,OAAO;IACLT,GAAA,CAAII,OAAO,CAACP,gBAAgB,CAACY,UAAA;EAC/B;EAEA,OAAOT,GAAA,CAAII,OAAO;AACpB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}