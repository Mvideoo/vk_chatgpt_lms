{"ast":null,"code":"'use client';\n\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nimport { classNames } from \"@vkontakte/vkjs\";\nimport { useAdaptivity } from \"../../hooks/useAdaptivity.js\";\nimport { useExternRef } from \"../../hooks/useExternRef.js\";\nimport { Removable } from \"../Removable/Removable.js\";\nimport { RootComponent } from \"../RootComponent/RootComponent.js\";\nconst sizeYClassNames = {\n  none: classNames(\"vkuiFormLayoutGroup__sizeYNone\", 'vkuiInternalFormLayoutGroup--sizeY-none'),\n  compact: classNames(\"vkuiFormLayoutGroup__sizeYCompact\", 'vkuiInternalFormLayoutGroup--sizeY-compact')\n};\n/**\n * @see https://vkcom.github.io/VKUI/#/FormLayoutGroup\n */\nexport const FormLayoutGroup = _param => {\n  var {\n      children,\n      mode = 'vertical',\n      removable,\n      segmented,\n      removePlaceholder = 'Удалить',\n      onRemove,\n      getRootRef\n    } = _param,\n    restProps = _object_without_properties(_param, [\"children\", \"mode\", \"removable\", \"segmented\", \"removePlaceholder\", \"onRemove\", \"getRootRef\"]);\n  const {\n    sizeY = 'none'\n  } = useAdaptivity();\n  const isRemovable = removable && mode === 'horizontal';\n  const rootEl = useExternRef(getRootRef);\n  return /*#__PURE__*/_jsx(RootComponent, _object_spread_props(_object_spread({\n    getRootRef: rootEl,\n    Component: \"fieldset\",\n    baseClassName: classNames(\"vkuiFormLayoutGroup__host\", sizeY !== 'regular' && sizeYClassNames[sizeY], mode === 'horizontal' && classNames(\"vkuiFormLayoutGroup__modeHorizontal\", 'vkuiInternalFormLayoutGroup--mode-horizontal'), mode === 'vertical' && 'vkuiInternalFormLayoutGroup--mode-vertical', isRemovable && classNames(\"vkuiFormLayoutGroup__withRemovable\", 'vkuiInternalFormLayoutGroup--removable'), segmented && classNames(\"vkuiFormLayoutGroup__segmented\", 'vkuiInternalFormLayoutGroup--segmented'))\n  }, restProps), {\n    children: isRemovable ? /*#__PURE__*/_jsx(Removable, {\n      className: \"vkuiFormLayoutGroup__removable\",\n      align: \"start\",\n      removePlaceholder: removePlaceholder,\n      onRemove: e => {\n        if (rootEl === null || rootEl === void 0 ? void 0 : rootEl.current) {\n          onRemove === null || onRemove === void 0 ? void 0 : onRemove(e, rootEl.current);\n        }\n      },\n      indent: removable === 'indent',\n      children: children\n    }) : /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [children, /*#__PURE__*/_jsx(\"span\", {\n        className: \"vkuiFormLayoutGroup__offset\",\n        \"aria-hidden\": true\n      })]\n    })\n  }));\n};","map":{"version":3,"names":["React","classNames","useAdaptivity","useExternRef","Removable","RootComponent","sizeYClassNames","none","compact","FormLayoutGroup","_param","children","mode","removable","segmented","removePlaceholder","onRemove","getRootRef","restProps","_object_without_properties","sizeY","isRemovable","rootEl","_jsx","_object_spread_props","_object_spread","Component","baseClassName","className","align","e","current","indent","_jsxs","Fragment"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/components/FormLayoutGroup/FormLayoutGroup.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport type { HTMLAttributesWithRootRef } from '../../types';\nimport { Removable, type RemovableProps } from '../Removable/Removable';\nimport { RootComponent } from '../RootComponent/RootComponent';\nimport styles from './FormLayoutGroup.module.css';\n\nconst sizeYClassNames = {\n  none: classNames(styles.sizeYNone, 'vkuiInternalFormLayoutGroup--sizeY-none'),\n  compact: classNames(styles.sizeYCompact, 'vkuiInternalFormLayoutGroup--sizeY-compact'),\n};\n\nexport interface FormLayoutGroupProps\n  extends HTMLAttributesWithRootRef<HTMLDivElement>,\n    RemovableProps {\n  mode?: 'vertical' | 'horizontal';\n  /**\n   * Только для режима horizontal. Дает возможность удалить всю группу `FormItem`.\n   *\n   * Режим `indent` предназначен для визуального отступа.\n   */\n  removable?: boolean | 'indent';\n\n  /**\n   * Дает возможность склеить несколько `FormItem`.\n   */\n  segmented?: boolean;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/FormLayoutGroup\n */\nexport const FormLayoutGroup = ({\n  children,\n  mode = 'vertical',\n  removable,\n  segmented,\n  removePlaceholder = 'Удалить',\n  onRemove,\n  getRootRef,\n  ...restProps\n}: FormLayoutGroupProps): React.ReactNode => {\n  const { sizeY = 'none' } = useAdaptivity();\n  const isRemovable = removable && mode === 'horizontal';\n  const rootEl = useExternRef(getRootRef);\n\n  return (\n    <RootComponent\n      getRootRef={rootEl}\n      Component=\"fieldset\"\n      baseClassName={classNames(\n        styles.host,\n        sizeY !== 'regular' && sizeYClassNames[sizeY],\n        mode === 'horizontal' &&\n          classNames(styles.modeHorizontal, 'vkuiInternalFormLayoutGroup--mode-horizontal'),\n        mode === 'vertical' && 'vkuiInternalFormLayoutGroup--mode-vertical',\n        isRemovable && classNames(styles.withRemovable, 'vkuiInternalFormLayoutGroup--removable'),\n        segmented && classNames(styles.segmented, 'vkuiInternalFormLayoutGroup--segmented'),\n      )}\n      {...restProps}\n    >\n      {isRemovable ? (\n        <Removable\n          className={styles.removable}\n          align=\"start\"\n          removePlaceholder={removePlaceholder}\n          onRemove={(e) => {\n            if (rootEl?.current) {\n              onRemove?.(e, rootEl.current);\n            }\n          }}\n          indent={removable === 'indent'}\n        >\n          {children}\n        </Removable>\n      ) : (\n        <React.Fragment>\n          {children}\n          <span className={styles.offset} aria-hidden />\n        </React.Fragment>\n      )}\n    </RootComponent>\n  );\n};\n"],"mappings":"AAAA;;;;;;AAEA,YAAYA,KAAA,MAAW;AACvB,SAASC,UAAU,QAAQ;AAC3B,SAASC,aAAa,QAAQ;AAC9B,SAASC,YAAY,QAAQ;AAE7B,SAASC,SAAS,QAA6B;AAC/C,SAASC,aAAa,QAAQ;AAG9B,MAAMC,eAAA,GAAkB;EACtBC,IAAA,EAAMN,UAAA,mCAA6B;EACnCO,OAAA,EAASP,UAAA,sCAAgC;AAC3C;AAmBA;;;AAGA,OAAO,MAAMQ,eAAA,GAAkBC,MAAA;MAAC;MAC9BC,QAAQ;MACRC,IAAA,GAAO,UAAU;MACjBC,SAAS;MACTC,SAAS;MACTC,iBAAA,GAAoB,SAAS;MAC7BC,QAAQ;MACRC;IAAU,CAEW,GAAAP,MAAA;IADlBQ,SAAA,GAAAC,0BAAA,CAAAT,MAAA,GAPH,YACA,QACA,aACA,aACA,qBACA,YACA,a;EAGA,MAAM;IAAEU,KAAA,GAAQ;EAAM,CAAE,GAAGlB,aAAA;EAC3B,MAAMmB,WAAA,GAAcR,SAAA,IAAaD,IAAA,KAAS;EAC1C,MAAMU,MAAA,GAASnB,YAAA,CAAac,UAAA;EAE5B,oBACEM,IAAA,CAAClB,aAAA,EAAAmB,oBAAA,CAAAC,cAAA;IACCR,UAAA,EAAYK,MAAA;IACZI,SAAA,EAAU;IACVC,aAAA,EAAe1B,UAAA,8BAEbmB,KAAA,KAAU,aAAad,eAAe,CAACc,KAAA,CAAM,EAC7CR,IAAA,KAAS,gBACPX,UAAA,wCAAkC,iDACpCW,IAAA,KAAS,cAAc,8CACvBS,WAAA,IAAepB,UAAA,uCAAiC,2CAChDa,SAAA,IAAab,UAAA,mCAA6B;KAExCiB,SAAA;cAEHG,WAAA,gBACCE,IAAA,CAACnB,SAAA;MACCwB,SAAS;MACTC,KAAA,EAAM;MACNd,iBAAA,EAAmBA,iBAAA;MACnBC,QAAA,EAAWc,CAAA;QACT,IAAIR,MAAA,aAAAA,MAAA,uBAAAA,MAAA,CAAQS,OAAO,EAAE;UACnBf,QAAA,aAAAA,QAAA,uBAAAA,QAAA,CAAWc,CAAA,EAAGR,MAAA,CAAOS,OAAO;QAC9B;MACF;MACAC,MAAA,EAAQnB,SAAA,KAAc;gBAErBF;sBAGHsB,KAAA,CAACjC,KAAA,CAAMkC,QAAQ;iBACZvB,QAAA,E,aACDY,IAAA,CAAC;QAAKK,SAAS;QAAiB,aAAW;;;;AAKrD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}