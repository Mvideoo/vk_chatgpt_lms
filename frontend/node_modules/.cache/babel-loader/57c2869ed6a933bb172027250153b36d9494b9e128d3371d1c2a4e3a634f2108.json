{"ast":null,"code":"'use client';\n\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nimport { classNames } from \"@vkontakte/vkjs\";\nimport { useColorScheme } from \"../../../hooks/useColorScheme.js\";\nimport { useExternRef } from \"../../../hooks/useExternRef.js\";\nimport { useFocusVisible } from \"../../../hooks/useFocusVisible.js\";\nimport { useFocusVisibleClassName } from \"../../../hooks/useFocusVisibleClassName.js\";\nimport { clickByKeyboardHandler } from \"../../../lib/utils.js\";\nimport { ImageBaseContext } from \"../context.js\";\nimport { validateOverlayIcon } from \"../validators.js\";\nimport { useCalculatedDefaultVisibility, useNonInteractiveOverlayProps } from \"./hooks.js\";\nfunction DevelopmentCheck(_ref) {\n  let {\n    children\n  } = _ref;\n  const {\n    size\n  } = React.useContext(ImageBaseContext);\n  if (process.env.NODE_ENV === 'development') {\n    if (children) {\n      validateOverlayIcon(size, {\n        name: 'children',\n        value: children\n      });\n    }\n  }\n  return null;\n}\nconst ImageBaseOverlayInteractive = _param => {\n  var {\n      children,\n      className,\n      getRootRef,\n      overlayShown\n    } = _param,\n    restProps = _object_without_properties(_param, [\"children\", \"className\", \"getRootRef\", \"overlayShown\"]);\n  const _useFocusVisible = useFocusVisible(),\n    {\n      focusVisible\n    } = _useFocusVisible,\n    focusEvents = _object_without_properties(_useFocusVisible, [\"focusVisible\"]);\n  const focusVisibleClassNames = useFocusVisibleClassName({\n    focusVisible,\n    mode: 'inside'\n  });\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(\"div\", _object_spread_props(_object_spread(_object_spread_props(_object_spread({}, restProps), {\n      tabIndex: 0,\n      role: \"button\",\n      className: classNames(\"vkuiImageBaseOverlay__clickable\", (focusVisible || overlayShown) && \"vkuiImageBaseOverlay__visible\", focusVisibleClassNames, className),\n      ref: getRootRef,\n      onKeyDown: clickByKeyboardHandler\n    }), focusEvents), {\n      children: children\n    })), process.env.NODE_ENV === 'development' && /*#__PURE__*/_jsx(DevelopmentCheck, {\n      children: children\n    })]\n  });\n};\nconst ImageBaseOverlayNonInteractive = _param => {\n  var {\n      className,\n      getRootRef,\n      overlayShown: overlayShownProps\n    } = _param,\n    restProps = _object_without_properties(_param, [\"className\", \"getRootRef\", \"overlayShown\"]);\n  const rootRef = useExternRef(getRootRef);\n  const {\n    shown: overlayShown,\n    onClick: onOverlayClick\n  } = useNonInteractiveOverlayProps(rootRef);\n  return /*#__PURE__*/_jsx(\"div\", _object_spread_props(_object_spread({}, restProps), {\n    ref: rootRef,\n    className: classNames((overlayShown || overlayShownProps) && \"vkuiImageBaseOverlay__visible\", className),\n    onClick: onOverlayClick\n  }));\n};\n/**\n * Оверлей над картинкой.\n */\nexport const ImageBaseOverlay = _param => {\n  var {\n      className,\n      theme: themeProp,\n      visibility: visibilityProp\n    } = _param,\n    restProps = _object_without_properties(_param, [\"className\", \"theme\", \"visibility\"]);\n  const colorScheme = useColorScheme();\n  const theme = themeProp !== null && themeProp !== void 0 ? themeProp : colorScheme;\n  const commonClassNames = classNames(\"vkuiImageBaseOverlay__host\", theme === 'light' && \"vkuiImageBaseOverlay__themeLight\", theme === 'dark' && \"vkuiImageBaseOverlay__themeDark\", className);\n  const defaultVisibility = useCalculatedDefaultVisibility();\n  const visibility = visibilityProp !== null && visibilityProp !== void 0 ? visibilityProp : defaultVisibility;\n  const commonProps = {\n    className: commonClassNames,\n    overlayShown: visibility === 'always'\n  };\n  // Не делаем деструктуризацию пропа, потому что Typescript не вывозит\n  if (!restProps.onClick) {\n    return /*#__PURE__*/_jsx(ImageBaseOverlayNonInteractive, _object_spread({}, restProps, commonProps));\n  }\n  return /*#__PURE__*/_jsx(ImageBaseOverlayInteractive, _object_spread({}, restProps, commonProps));\n};\nImageBaseOverlay.displayName = 'ImageBaseOverlay';","map":{"version":3,"names":["React","classNames","useColorScheme","useExternRef","useFocusVisible","useFocusVisibleClassName","clickByKeyboardHandler","ImageBaseContext","validateOverlayIcon","useCalculatedDefaultVisibility","useNonInteractiveOverlayProps","DevelopmentCheck","_ref","children","size","useContext","process","env","NODE_ENV","name","value","ImageBaseOverlayInteractive","_param","className","getRootRef","overlayShown","restProps","_object_without_properties","_useFocusVisible","focusVisible","focusEvents","focusVisibleClassNames","mode","_jsxs","_Fragment","_jsx","_object_spread_props","_object_spread","tabIndex","role","ref","onKeyDown","ImageBaseOverlayNonInteractive","overlayShownProps","rootRef","shown","onClick","onOverlayClick","ImageBaseOverlay","theme","themeProp","visibility","visibilityProp","colorScheme","commonClassNames","defaultVisibility","commonProps","displayName"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/components/ImageBase/ImageBaseOverlay/ImageBaseOverlay.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { useColorScheme } from '../../../hooks/useColorScheme';\nimport { useExternRef } from '../../../hooks/useExternRef';\nimport { useFocusVisible } from '../../../hooks/useFocusVisible';\nimport { useFocusVisibleClassName } from '../../../hooks/useFocusVisibleClassName';\nimport { clickByKeyboardHandler } from '../../../lib/utils';\nimport { ImageBaseContext } from '../context';\nimport { validateOverlayIcon } from '../validators';\nimport { useCalculatedDefaultVisibility, useNonInteractiveOverlayProps } from './hooks';\nimport type {\n  ImageBaseOverlayInteractiveProps,\n  ImageBaseOverlayNonInteractiveProps,\n} from './types';\nimport styles from './ImageBaseOverlay.module.css';\n\nfunction DevelopmentCheck({ children }: Pick<ImageBaseOverlayInteractiveProps, 'children'>) {\n  const { size } = React.useContext(ImageBaseContext);\n\n  if (process.env.NODE_ENV === 'development') {\n    if (children) {\n      validateOverlayIcon(size, { name: 'children', value: children });\n    }\n  }\n\n  return null;\n}\n\nexport type ImageBaseOverlayProps =\n  | ImageBaseOverlayInteractiveProps\n  | ImageBaseOverlayNonInteractiveProps;\n\nconst ImageBaseOverlayInteractive = ({\n  children,\n  className,\n  getRootRef,\n  overlayShown,\n  ...restProps\n}: ImageBaseOverlayInteractiveProps & { overlayShown?: boolean }) => {\n  const { focusVisible, ...focusEvents } = useFocusVisible();\n  const focusVisibleClassNames = useFocusVisibleClassName({ focusVisible, mode: 'inside' });\n\n  return (\n    <>\n      <div\n        {...restProps}\n        tabIndex={0}\n        role=\"button\"\n        className={classNames(\n          styles.clickable,\n          (focusVisible || overlayShown) && styles.visible,\n          focusVisibleClassNames,\n          className,\n        )}\n        ref={getRootRef}\n        onKeyDown={clickByKeyboardHandler}\n        {...focusEvents}\n      >\n        {children}\n      </div>\n      {process.env.NODE_ENV === 'development' && <DevelopmentCheck>{children}</DevelopmentCheck>}\n    </>\n  );\n};\n\nconst ImageBaseOverlayNonInteractive = ({\n  className,\n  getRootRef,\n  overlayShown: overlayShownProps,\n  ...restProps\n}: ImageBaseOverlayNonInteractiveProps & { overlayShown?: boolean }) => {\n  const rootRef = useExternRef(getRootRef);\n  const { shown: overlayShown, onClick: onOverlayClick } = useNonInteractiveOverlayProps(rootRef);\n\n  return (\n    <div\n      {...restProps}\n      ref={rootRef}\n      className={classNames((overlayShown || overlayShownProps) && styles.visible, className)}\n      onClick={onOverlayClick}\n    />\n  );\n};\n\n/**\n * Оверлей над картинкой.\n */\nexport const ImageBaseOverlay: React.FC<ImageBaseOverlayProps> = ({\n  className,\n  theme: themeProp,\n  visibility: visibilityProp,\n  ...restProps\n}: ImageBaseOverlayProps) => {\n  const colorScheme = useColorScheme();\n\n  const theme = themeProp ?? colorScheme;\n\n  const commonClassNames = classNames(\n    styles.host,\n    theme === 'light' && styles.themeLight,\n    theme === 'dark' && styles.themeDark,\n    className,\n  );\n\n  const defaultVisibility = useCalculatedDefaultVisibility();\n  const visibility = visibilityProp ?? defaultVisibility;\n\n  const commonProps = {\n    className: commonClassNames,\n    overlayShown: visibility === 'always',\n  };\n\n  // Не делаем деструктуризацию пропа, потому что Typescript не вывозит\n  if (!restProps.onClick) {\n    return <ImageBaseOverlayNonInteractive {...restProps} {...commonProps} />;\n  }\n\n  return <ImageBaseOverlayInteractive {...restProps} {...commonProps} />;\n};\n\nImageBaseOverlay.displayName = 'ImageBaseOverlay';\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}