{"ast":null,"code":"/**\n * Функция debounced, которая будет задержана на заданное `delay` время\n * в миллисекундах. Если метод будет вызван снова до истечения тайм-аута,\n * предыдущий вызов будет прерван.\n */ /**\n    * Отменяет вызов функции\n    */ /**\n       * Возвращает debounced функцию, которая задерживает вызов `fn` на заданное\n       * `delay` время в миллисекундах. Если метод вызывается снова до истечения\n       * тайм-аута, предыдущий вызов будет прерван.\n       *\n       * @param fn Функция которую надо \"отложить\"\n       * @param delay Время задержки вызова в миллисекундах\n       * @param context Контекст с которым будет совершен вызов функции\n       */export function debounce(fn, delay) {\n  var context = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : typeof window !== 'undefined' ? window : undefined;\n  var timeoutId;\n  var args;\n  var later = function () {\n    return fn.apply(context, args);\n  };\n  var debouncedFn = function () {\n    for (var _len = arguments.length, a = new Array(_len), _key = 0; _key < _len; _key++) {\n      a[_key] = arguments[_key];\n    }\n    args = a;\n    clearTimeout(timeoutId);\n    timeoutId = setTimeout(later, delay);\n  };\n  debouncedFn.cancel = function () {\n    clearTimeout(timeoutId);\n  };\n  return debouncedFn;\n}","map":{"version":3,"names":["debounce","fn","delay","context","arguments","length","window","undefined","timeoutId","args","later","apply","debouncedFn","a","Array","_len","_key","clearTimeout","setTimeout","cancel"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkjs/src/async/debounce.ts"],"sourcesContent":["/**\n * Функция debounced, которая будет задержана на заданное `delay` время\n * в миллисекундах. Если метод будет вызван снова до истечения тайм-аута,\n * предыдущий вызов будет прерван.\n */\nexport interface DebouncedFunction<T extends unknown[]> {\n  (...a: T): void;\n\n  /**\n   * Отменяет вызов функции\n   */\n  cancel(): void;\n}\n\n/**\n * Возвращает debounced функцию, которая задерживает вызов `fn` на заданное\n * `delay` время в миллисекундах. Если метод вызывается снова до истечения\n * тайм-аута, предыдущий вызов будет прерван.\n *\n * @param fn Функция которую надо \"отложить\"\n * @param delay Время задержки вызова в миллисекундах\n * @param context Контекст с которым будет совершен вызов функции\n */\nexport function debounce<T extends any[]>(\n  fn: (...args: T) => unknown,\n  delay: number,\n  context = typeof window !== 'undefined' ? window : undefined,\n): DebouncedFunction<T> {\n  let timeoutId: ReturnType<typeof setTimeout>;\n  let args: T;\n\n  const later = () => fn.apply(context, args);\n  const debouncedFn = (...a: T) => {\n    args = a;\n    clearTimeout(timeoutId);\n    timeoutId = setTimeout(later, delay);\n  };\n\n  debouncedFn.cancel = () => {\n    clearTimeout(timeoutId);\n  };\n\n  return debouncedFn;\n}\n"],"mappings":"AAAA;;;;GAAA,CAQE;;MAAA,CAMF;;;;;;;;SASA,OAAO,SAASA,SACdC,EAA2B,EAC3BC,KAAa;MACbC,OAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,iBAAAA,SAAA,MAAU,OAAOE,MAAA,KAAW,cAAcA,MAAA,GAASC,SAAA;EAEnD,IAAIC,SAAA;EACJ,IAAIC,IAAA;EAEJ,IAAMC,KAAA,GAAQ,SAAAA,CAAA;WAAMT,EAAA,CAAGU,KAAK,CAACR,OAAA,EAASM,IAAA;;EACtC,IAAMG,WAAA,GAAc,SAAAA,CAAA;sCAAIC,CAAA,OAAAC,KAAA,CAAAC,IAAA,GAAAC,IAAA,MAAAA,IAAA,GAAAD,IAAA,EAAAC,IAAA;MAAAH,CAAA,CAAAG,IAAA,IAAAZ,SAAA,CAAAY,IAAA;;IACtBP,IAAA,GAAOI,CAAA;IACPI,YAAA,CAAaT,SAAA;IACbA,SAAA,GAAYU,UAAA,CAAWR,KAAA,EAAOR,KAAA;EAChC;EAEAU,WAAA,CAAYO,MAAM,GAAG;IACnBF,YAAA,CAAaT,SAAA;EACf;EAEA,OAAOI,WAAA;AACT","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}