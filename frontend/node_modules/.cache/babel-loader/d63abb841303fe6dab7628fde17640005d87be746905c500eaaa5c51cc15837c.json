{"ast":null,"code":"export function checkIsNotAutoPlacement(placement) {\n  return !placement.startsWith('auto');\n}\nexport function getAutoPlacementAlign(placement) {\n  const align = placement.replace(/auto-|auto/, '');\n  return align === 'start' || align === 'end' ? align : null;\n}\n/**\n * Note: не используем `translate3d`, чтобы в лишний раз не выносить в отдельный слой и не занимать память в GPU.\n *\n * см. https://floating-ui.com/docs/react#positioning\n */\nexport function convertFloatingDataToReactCSSProperties(_ref) {\n  let {\n    strategy,\n    x,\n    y,\n    initialWidth = 'max-content',\n    middlewareData\n  } = _ref;\n  const styles = {\n    position: strategy,\n    top: y,\n    right: 'auto',\n    bottom: 'auto',\n    left: x\n  };\n  if (initialWidth !== null) {\n    styles.width = initialWidth;\n  }\n  if (middlewareData) {\n    const hide = middlewareData.hide;\n    if (hide && hide.referenceHidden) {\n      styles['visibility'] = 'hidden';\n    }\n  }\n  return styles;\n}\nexport const getArrowCoordsByMiddlewareData = middlewareData => {\n  const coords = {\n    x: 0,\n    y: 0\n  };\n  if (middlewareData.arrow) {\n    const {\n      x = 0,\n      y = 0\n    } = middlewareData.arrow;\n    coords.x = x;\n    coords.y = y;\n  }\n  return coords;\n};","map":{"version":3,"names":["checkIsNotAutoPlacement","placement","startsWith","getAutoPlacementAlign","align","replace","convertFloatingDataToReactCSSProperties","_ref","strategy","x","y","initialWidth","middlewareData","styles","position","top","right","bottom","left","width","hide","referenceHidden","getArrowCoordsByMiddlewareData","coords","arrow"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/lib/floating/functions.ts"],"sourcesContent":["import type * as React from 'react';\nimport type {\n  AutoPlacementType,\n  FloatingPositionStrategy,\n  Placement,\n  PlacementWithAuto,\n  UseFloatingData,\n} from './types/common';\n\nexport function checkIsNotAutoPlacement(placement: PlacementWithAuto): placement is Placement {\n  return !placement.startsWith('auto');\n}\n\nexport function getAutoPlacementAlign(placement: AutoPlacementType): 'start' | 'end' | null {\n  const align = placement.replace(/auto-|auto/, '');\n  return align === 'start' || align === 'end' ? align : null;\n}\n\nexport type ConvertFloatingDataArgs = {\n  strategy: FloatingPositionStrategy;\n  x: UseFloatingData['x'];\n  y: UseFloatingData['y'];\n  initialWidth?: React.CSSProperties['width'] | null;\n  middlewareData?: UseFloatingData['middlewareData'];\n};\n\n/**\n * Note: не используем `translate3d`, чтобы в лишний раз не выносить в отдельный слой и не занимать память в GPU.\n *\n * см. https://floating-ui.com/docs/react#positioning\n */\nexport function convertFloatingDataToReactCSSProperties({\n  strategy,\n  x,\n  y,\n  initialWidth = 'max-content',\n  middlewareData,\n}: ConvertFloatingDataArgs): React.CSSProperties {\n  const styles: React.CSSProperties = {\n    position: strategy,\n    top: y,\n    right: 'auto',\n    bottom: 'auto',\n    left: x,\n  };\n  if (initialWidth !== null) {\n    styles.width = initialWidth;\n  }\n  if (middlewareData) {\n    const hide = middlewareData.hide;\n    if (hide && hide.referenceHidden) {\n      styles['visibility'] = 'hidden';\n    }\n  }\n  return styles;\n}\n\nexport const getArrowCoordsByMiddlewareData = (\n  middlewareData: UseFloatingData['middlewareData'],\n): {\n  x: number;\n  y: number;\n} => {\n  const coords = { x: 0, y: 0 };\n  if (middlewareData.arrow) {\n    const { x = 0, y = 0 } = middlewareData.arrow;\n    coords.x = x;\n    coords.y = y;\n  }\n  return coords;\n};\n"],"mappings":"AASA,OAAO,SAASA,wBAAwBC,SAA4B;EAClE,OAAO,CAACA,SAAA,CAAUC,UAAU,CAAC;AAC/B;AAEA,OAAO,SAASC,sBAAsBF,SAA4B;EAChE,MAAMG,KAAA,GAAQH,SAAA,CAAUI,OAAO,CAAC,cAAc;EAC9C,OAAOD,KAAA,KAAU,WAAWA,KAAA,KAAU,QAAQA,KAAA,GAAQ;AACxD;AAUA;;;;;AAKA,OAAO,SAASE,wCAAAC,IAAA,EAMU;EAAA,IAN8B;IACtDC,QAAQ;IACRC,CAAC;IACDC,CAAC;IACDC,YAAA,GAAe,aAAa;IAC5BC;EAAc,CACU,GAAAL,IAAA;EACxB,MAAMM,MAAA,GAA8B;IAClCC,QAAA,EAAUN,QAAA;IACVO,GAAA,EAAKL,CAAA;IACLM,KAAA,EAAO;IACPC,MAAA,EAAQ;IACRC,IAAA,EAAMT;EACR;EACA,IAAIE,YAAA,KAAiB,MAAM;IACzBE,MAAA,CAAOM,KAAK,GAAGR,YAAA;EACjB;EACA,IAAIC,cAAA,EAAgB;IAClB,MAAMQ,IAAA,GAAOR,cAAA,CAAeQ,IAAI;IAChC,IAAIA,IAAA,IAAQA,IAAA,CAAKC,eAAe,EAAE;MAChCR,MAAM,CAAC,aAAa,GAAG;IACzB;EACF;EACA,OAAOA,MAAA;AACT;AAEA,OAAO,MAAMS,8BAAA,GACXV,cAAA;EAKA,MAAMW,MAAA,GAAS;IAAEd,CAAA,EAAG;IAAGC,CAAA,EAAG;EAAE;EAC5B,IAAIE,cAAA,CAAeY,KAAK,EAAE;IACxB,MAAM;MAAEf,CAAA,GAAI,CAAC;MAAEC,CAAA,GAAI;IAAC,CAAE,GAAGE,cAAA,CAAeY,KAAK;IAC7CD,MAAA,CAAOd,CAAC,GAAGA,CAAA;IACXc,MAAA,CAAOb,CAAC,GAAGA,CAAA;EACb;EACA,OAAOa,MAAA;AACT","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}