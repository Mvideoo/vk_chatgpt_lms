{"ast":null,"code":"import { getTextFromChildren } from \"./children.js\";\nexport const FOCUSABLE_ELEMENTS_LIST = ['a[href]', 'area[href]', 'input:not([disabled]):not([hidden]):not([type=\"hidden\"]):not([aria-hidden])', 'select:not([disabled]):not([hidden]):not([aria-hidden])', 'textarea:not([disabled])', 'button:not([disabled])', 'iframe', 'audio', 'video', '[contenteditable]', '[tabindex]:not([tabindex=\"-1\"])'];\nexport const Keys = {\n  ENTER: 'Enter',\n  SPACE: 'Space',\n  TAB: 'Tab',\n  ESCAPE: 'Escape',\n  HOME: 'Home',\n  END: 'End',\n  DELETE: 'Delete',\n  BACKSPACE: 'Backspace',\n  ARROW_LEFT: 'ArrowLeft',\n  ARROW_RIGHT: 'ArrowRight',\n  ARROW_UP: 'ArrowUp',\n  ARROW_DOWN: 'ArrowDown',\n  PAGE_UP: 'PageUp',\n  PAGE_DOWN: 'PageDown'\n};\nconst EVENT_KEY_TO_COMMON_KEY_MAP = new Map([['Enter', Keys.ENTER], ['Space', Keys.SPACE], ['Spacebar', Keys.SPACE], [' ', Keys.SPACE], ['Tab', Keys.TAB], ['Escape', Keys.ESCAPE], ['Home', Keys.HOME], ['End', Keys.END], ['ArrowLeft', Keys.ARROW_LEFT], ['ArrowRight', Keys.ARROW_RIGHT], ['ArrowUp', Keys.ARROW_UP], ['ArrowDown', Keys.ARROW_DOWN], ['PageUp', Keys.PAGE_UP], ['PageDown', Keys.PAGE_DOWN]]);\nexport function pressedKey(event) {\n  const foundKey = EVENT_KEY_TO_COMMON_KEY_MAP.get(event.key);\n  return foundKey ? foundKey : null;\n}\nexport const FOCUS_ALLOW_LIST_KEYS = new Set([Keys.TAB, Keys.ARROW_LEFT, Keys.ARROW_RIGHT, Keys.ARROW_UP, Keys.ARROW_DOWN, Keys.BACKSPACE, Keys.DELETE]);\nexport function isKeyboardFocusingStarted(event) {\n  return FOCUS_ALLOW_LIST_KEYS.has(event.key);\n}\nexport function shouldTriggerClickOnEnterOrSpace(e) {\n  const el = e.target;\n  const {\n    tagName\n  } = el;\n  const role = el.getAttribute('role');\n  const isValidKeyboardEventTarget = el.isContentEditable !== true && tagName !== 'INPUT' && tagName !== 'TEXTAREA' && (role === 'button' || role === 'link' || role === 'menuitem');\n  const isNativeAnchorEl = tagName === 'A' && el.hasAttribute('href');\n  const keyPressed = pressedKey(e);\n  return isValidKeyboardEventTarget && (\n  // trigger buttons on Space\n  keyPressed === Keys.SPACE && role === 'button' ||\n  // trigger non-native links and buttons on Enter\n  keyPressed === Keys.ENTER && !isNativeAnchorEl);\n}\n/**\n * @see https://doka.guide/a11y/aria-expanded/\n */\nexport const injectAriaExpandedPropByRole = (props, state, role) => {\n  switch (role) {\n    case 'dialog':\n    case 'menu':\n    case 'application':\n    case 'tab':\n    case 'menuitem':\n    case 'treeitem':\n    case 'gridcell':\n      props['aria-expanded'] = state;\n      return props;\n    default:\n      return props;\n  }\n};\nexport function hasAccessibleName(_ref) {\n  let {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy,\n    title,\n    children\n  } = _ref;\n  if (ariaLabel || ariaLabelledBy || title) {\n    return true;\n  }\n  const accessibleLabel = getTextFromChildren(children);\n  if (accessibleLabel.trim() !== '') {\n    return true;\n  }\n  return false;\n}\n/**\n * @private\n */\nexport const getHorizontalFocusGoTo = keys => {\n  switch (keys) {\n    case Keys.ARROW_UP:\n    case Keys.ARROW_LEFT:\n      return 'prev';\n    case Keys.ARROW_DOWN:\n    case Keys.ARROW_RIGHT:\n      return 'next';\n  }\n};","map":{"version":3,"names":["getTextFromChildren","FOCUSABLE_ELEMENTS_LIST","Keys","ENTER","SPACE","TAB","ESCAPE","HOME","END","DELETE","BACKSPACE","ARROW_LEFT","ARROW_RIGHT","ARROW_UP","ARROW_DOWN","PAGE_UP","PAGE_DOWN","EVENT_KEY_TO_COMMON_KEY_MAP","Map","pressedKey","event","foundKey","get","key","FOCUS_ALLOW_LIST_KEYS","Set","isKeyboardFocusingStarted","has","shouldTriggerClickOnEnterOrSpace","e","el","target","tagName","role","getAttribute","isValidKeyboardEventTarget","isContentEditable","isNativeAnchorEl","hasAttribute","keyPressed","injectAriaExpandedPropByRole","props","state","hasAccessibleName","_ref","ariaLabel","ariaLabelledBy","title","children","accessibleLabel","trim","getHorizontalFocusGoTo","keys"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/lib/accessibility.ts"],"sourcesContent":["import type * as React from 'react';\nimport type { HasChildren, ValuesOfObject } from '../types';\nimport { getTextFromChildren } from './children';\n\nexport const FOCUSABLE_ELEMENTS_LIST: string[] = [\n  'a[href]',\n  'area[href]',\n  'input:not([disabled]):not([hidden]):not([type=\"hidden\"]):not([aria-hidden])',\n  'select:not([disabled]):not([hidden]):not([aria-hidden])',\n  'textarea:not([disabled])',\n  'button:not([disabled])',\n  'iframe',\n  'audio',\n  'video',\n  '[contenteditable]',\n  '[tabindex]:not([tabindex=\"-1\"])',\n];\n\nexport const Keys = {\n  ENTER: 'Enter',\n  SPACE: 'Space',\n  TAB: 'Tab',\n  ESCAPE: 'Escape',\n  HOME: 'Home',\n  END: 'End',\n  DELETE: 'Delete',\n  BACKSPACE: 'Backspace',\n  ARROW_LEFT: 'ArrowLeft',\n  ARROW_RIGHT: 'ArrowRight',\n  ARROW_UP: 'ArrowUp',\n  ARROW_DOWN: 'ArrowDown',\n  PAGE_UP: 'PageUp',\n  PAGE_DOWN: 'PageDown',\n} as const;\n\nexport type KeysValues = ValuesOfObject<typeof Keys>;\n\nconst EVENT_KEY_TO_COMMON_KEY_MAP = new Map([\n  ['Enter', Keys.ENTER],\n  ['Space', Keys.SPACE],\n  ['Spacebar', Keys.SPACE],\n  [' ', Keys.SPACE],\n  ['Tab', Keys.TAB],\n  ['Escape', Keys.ESCAPE],\n  ['Home', Keys.HOME],\n  ['End', Keys.END],\n  ['ArrowLeft', Keys.ARROW_LEFT],\n  ['ArrowRight', Keys.ARROW_RIGHT],\n  ['ArrowUp', Keys.ARROW_UP],\n  ['ArrowDown', Keys.ARROW_DOWN],\n  ['PageUp', Keys.PAGE_UP],\n  ['PageDown', Keys.PAGE_DOWN],\n]);\n\nexport function pressedKey<T extends KeyboardEvent | React.KeyboardEvent>(\n  event: T,\n):\n  | 'Enter'\n  | 'Space'\n  | 'Tab'\n  | 'Escape'\n  | 'Home'\n  | 'End'\n  | 'ArrowLeft'\n  | 'ArrowRight'\n  | 'ArrowUp'\n  | 'ArrowDown'\n  | 'PageUp'\n  | 'PageDown'\n  | null {\n  const foundKey = EVENT_KEY_TO_COMMON_KEY_MAP.get(event.key);\n  return foundKey ? foundKey : null;\n}\n\nexport const FOCUS_ALLOW_LIST_KEYS: Set<string> = new Set<string>([\n  Keys.TAB,\n  Keys.ARROW_LEFT,\n  Keys.ARROW_RIGHT,\n  Keys.ARROW_UP,\n  Keys.ARROW_DOWN,\n  Keys.BACKSPACE,\n  Keys.DELETE,\n]);\n\nexport function isKeyboardFocusingStarted<T extends KeyboardEvent | React.KeyboardEvent>(\n  event: T,\n): boolean {\n  return FOCUS_ALLOW_LIST_KEYS.has(event.key);\n}\n\nexport function shouldTriggerClickOnEnterOrSpace(\n  e: KeyboardEvent | React.KeyboardEvent<HTMLElement>,\n): boolean {\n  const el = e.target as HTMLElement;\n  const { tagName } = el;\n\n  const role = el.getAttribute('role');\n\n  const isValidKeyboardEventTarget: boolean =\n    el.isContentEditable !== true &&\n    tagName !== 'INPUT' &&\n    tagName !== 'TEXTAREA' &&\n    (role === 'button' || role === 'link' || role === 'menuitem');\n\n  const isNativeAnchorEl = tagName === 'A' && el.hasAttribute('href');\n  const keyPressed = pressedKey(e);\n\n  return (\n    isValidKeyboardEventTarget &&\n    // trigger buttons on Space\n    ((keyPressed === Keys.SPACE && role === 'button') ||\n      // trigger non-native links and buttons on Enter\n      (keyPressed === Keys.ENTER && !isNativeAnchorEl))\n  );\n}\n\n/**\n * @see https://doka.guide/a11y/aria-expanded/\n */\nexport const injectAriaExpandedPropByRole = (\n  props: React.ComponentProps<any>,\n  state: boolean,\n  role?: React.AriaRole,\n): React.ComponentProps<any> => {\n  switch (role) {\n    case 'dialog':\n    case 'menu':\n    case 'application':\n    case 'tab':\n    case 'menuitem':\n    case 'treeitem':\n    case 'gridcell':\n      props['aria-expanded'] = state;\n      return props;\n    default:\n      return props;\n  }\n};\n\ninterface HasAccessibleNameProps\n  extends Pick<React.AriaAttributes, 'aria-label' | 'aria-labelledby'>,\n    HasChildren {\n  title?: string;\n}\n\nexport function hasAccessibleName({\n  'aria-label': ariaLabel,\n  'aria-labelledby': ariaLabelledBy,\n  title,\n  children,\n}: HasAccessibleNameProps): boolean {\n  if (ariaLabel || ariaLabelledBy || title) {\n    return true;\n  }\n\n  const accessibleLabel = getTextFromChildren(children);\n\n  if (accessibleLabel.trim() !== '') {\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * @private\n */\nexport const getHorizontalFocusGoTo = (\n  keys: Extract<KeysValues, 'ArrowUp' | 'ArrowLeft' | 'ArrowDown' | 'ArrowRight'>,\n): 'prev' | 'next' => {\n  switch (keys) {\n    case Keys.ARROW_UP:\n    case Keys.ARROW_LEFT:\n      return 'prev';\n    case Keys.ARROW_DOWN:\n    case Keys.ARROW_RIGHT:\n      return 'next';\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}