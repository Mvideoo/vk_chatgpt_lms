{"ast":null,"code":"'use client';\n\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nimport { classNames, isPrimitiveReactNode } from \"@vkontakte/vkjs\";\nimport { usePlatform } from \"../../hooks/usePlatform.js\";\nimport { hasAccessibleName } from \"../../lib/accessibility.js\";\nimport { COMMON_WARNINGS, warnOnce } from \"../../lib/warnOnce.js\";\nimport { Tappable } from \"../Tappable/Tappable.js\";\nimport { Text } from \"../Typography/Text/Text.js\";\nimport { Title } from \"../Typography/Title/Title.js\";\nconst platformClassNames = {\n  ios: \"vkuiPanelHeaderButton__ios\",\n  android: \"vkuiPanelHeaderButton__android\",\n  vkcom: \"vkuiPanelHeaderButton__vkcom\"\n};\nconst ButtonTypography = _ref => {\n  let {\n    primary,\n    children\n  } = _ref;\n  const platform = usePlatform();\n  if (platform === 'ios') {\n    return /*#__PURE__*/_jsx(Title, {\n      Component: \"span\",\n      level: \"3\",\n      weight: primary ? '1' : '3',\n      children: children\n    });\n  }\n  return /*#__PURE__*/_jsx(Text, {\n    weight: platform === 'vkcom' ? undefined : '2',\n    children: children\n  });\n};\nconst warn = warnOnce('PanelHeaderButton');\n/**\n * @see https://vkcom.github.io/VKUI/#/PanelHeaderButton\n */\nexport const PanelHeaderButton = _param => {\n  var {\n      children,\n      primary = false,\n      label\n    } = _param,\n    restProps = _object_without_properties(_param, [\"children\", \"primary\", \"label\"]);\n  const isPrimitive = isPrimitiveReactNode(children);\n  const isPrimitiveLabel = isPrimitiveReactNode(label);\n  const platform = usePlatform();\n  let hoverMode;\n  let activeMode;\n  switch (platform) {\n    case 'ios':\n      hoverMode = 'background';\n      activeMode = 'opacity';\n      break;\n    case 'vkcom':\n      hoverMode = \"vkuiPanelHeaderButton__hover\";\n      activeMode = \"vkuiPanelHeaderButton__active\";\n      break;\n    default:\n      hoverMode = 'background';\n      activeMode = 'background';\n  }\n  if (process.env.NODE_ENV === 'development') {\n    /* istanbul ignore next: проверка в dev mode, тест на hasAccessibleName() есть в lib/accessibility.test.tsx */const isAccessible = hasAccessibleName(_object_spread({\n      children: [children, label]\n    }, restProps));\n    if (!isAccessible) {\n      warn(COMMON_WARNINGS.a11y[restProps.href ? 'link-name' : 'button-name'], 'error');\n    }\n  }\n  const elements = [label, children].filter(item => !!item);\n  const onlyPrimitive = elements.length === 1 && isPrimitiveReactNode(elements[0]);\n  return /*#__PURE__*/_jsxs(Tappable, _object_spread_props(_object_spread({\n    Component: restProps.href ? 'a' : 'button'\n  }, restProps), {\n    hoverMode: hoverMode,\n    activeEffectDelay: 200,\n    activeMode: activeMode,\n    baseClassName: classNames(\"vkuiPanelHeaderButton__host\", platformClassNames.hasOwnProperty(platform) ? platformClassNames[platform] : platformClassNames.android, onlyPrimitive && \"vkuiPanelHeaderButton__primitive\", !isPrimitive && !isPrimitiveLabel && \"vkuiPanelHeaderButton__notPrimitive\"),\n    children: [isPrimitive ? /*#__PURE__*/_jsx(ButtonTypography, {\n      primary: primary,\n      children: children\n    }) : children, isPrimitiveLabel ? /*#__PURE__*/_jsx(ButtonTypography, {\n      primary: primary,\n      className: \"vkuiPanelHeaderButton__label\",\n      children: label\n    }) : label]\n  }));\n};","map":{"version":3,"names":["React","classNames","isPrimitiveReactNode","usePlatform","hasAccessibleName","COMMON_WARNINGS","warnOnce","Tappable","Text","Title","platformClassNames","ios","android","vkcom","ButtonTypography","_ref","primary","children","platform","_jsx","Component","level","weight","undefined","warn","PanelHeaderButton","_param","label","restProps","_object_without_properties","isPrimitive","isPrimitiveLabel","hoverMode","activeMode","process","env","NODE_ENV","isAccessible","_object_spread","a11y","href","elements","filter","item","onlyPrimitive","length","_jsxs","_object_spread_props","activeEffectDelay","baseClassName","hasOwnProperty","className"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/components/PanelHeaderButton/PanelHeaderButton.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { classNames, isPrimitiveReactNode } from '@vkontakte/vkjs';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { hasAccessibleName } from '../../lib/accessibility';\nimport { COMMON_WARNINGS, warnOnce } from '../../lib/warnOnce';\nimport { Tappable, type TappableProps } from '../Tappable/Tappable';\nimport { Text } from '../Typography/Text/Text';\nimport { Title } from '../Typography/Title/Title';\nimport styles from './PanelHeaderButton.module.css';\n\nconst platformClassNames = {\n  ios: styles.ios,\n  android: styles.android,\n  vkcom: styles.vkcom,\n};\n\nexport interface PanelHeaderButtonProps extends Omit<TappableProps, 'label'> {\n  primary?: boolean;\n  // TODO [>=8]: добавить св-во `indicator`, чтобы разграничить кейсы\n  label?: React.ReactNode;\n}\n\ninterface ButtonTypographyProps extends React.AllHTMLAttributes<HTMLElement> {\n  primary?: PanelHeaderButtonProps['primary'];\n}\n\nconst ButtonTypography = ({ primary, children }: ButtonTypographyProps) => {\n  const platform = usePlatform();\n\n  if (platform === 'ios') {\n    return (\n      <Title Component=\"span\" level=\"3\" weight={primary ? '1' : '3'}>\n        {children}\n      </Title>\n    );\n  }\n\n  return <Text weight={platform === 'vkcom' ? undefined : '2'}>{children}</Text>;\n};\n\nconst warn = warnOnce('PanelHeaderButton');\n\n/**\n * @see https://vkcom.github.io/VKUI/#/PanelHeaderButton\n */\nexport const PanelHeaderButton = ({\n  children,\n  primary = false,\n  label,\n  ...restProps\n}: PanelHeaderButtonProps): React.ReactNode => {\n  const isPrimitive = isPrimitiveReactNode(children);\n  const isPrimitiveLabel = isPrimitiveReactNode(label);\n  const platform = usePlatform();\n\n  let hoverMode;\n  let activeMode;\n\n  switch (platform) {\n    case 'ios':\n      hoverMode = 'background';\n      activeMode = 'opacity';\n      break;\n    case 'vkcom':\n      hoverMode = styles.hover;\n      activeMode = styles.active;\n      break;\n    default:\n      hoverMode = 'background';\n      activeMode = 'background';\n  }\n\n  if (process.env.NODE_ENV === 'development') {\n    /* istanbul ignore next: проверка в dev mode, тест на hasAccessibleName() есть в lib/accessibility.test.tsx */\n    const isAccessible = hasAccessibleName({\n      children: [children, label],\n      ...restProps,\n    });\n\n    if (!isAccessible) {\n      warn(COMMON_WARNINGS.a11y[restProps.href ? 'link-name' : 'button-name'], 'error');\n    }\n  }\n  const elements = [label, children].filter((item) => !!item);\n\n  const onlyPrimitive = elements.length === 1 && isPrimitiveReactNode(elements[0]);\n\n  return (\n    <Tappable\n      Component={restProps.href ? 'a' : 'button'}\n      {...restProps}\n      hoverMode={hoverMode}\n      activeEffectDelay={200}\n      activeMode={activeMode}\n      baseClassName={classNames(\n        styles.host,\n        platformClassNames.hasOwnProperty(platform)\n          ? platformClassNames[platform]\n          : platformClassNames.android,\n        onlyPrimitive && styles.primitive,\n        !isPrimitive && !isPrimitiveLabel && styles.notPrimitive,\n      )}\n    >\n      {isPrimitive ? <ButtonTypography primary={primary}>{children}</ButtonTypography> : children}\n      {isPrimitiveLabel ? (\n        <ButtonTypography primary={primary} className={styles.label}>\n          {label}\n        </ButtonTypography>\n      ) : (\n        label\n      )}\n    </Tappable>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}