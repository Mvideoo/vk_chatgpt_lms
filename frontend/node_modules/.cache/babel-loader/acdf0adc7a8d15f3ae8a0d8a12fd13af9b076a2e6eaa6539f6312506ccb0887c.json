{"ast":null,"code":"'use client';\n\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useContext } from \"react\";\nimport { setRef } from \"../../../lib/utils.js\";\nimport { ModalRootOverlayContext } from \"../ModalRootContext.js\";\n/**\n * `ModalRoot` выставляет общий `ModalOverlay` для всех потомков, и чтобы не нарушить логику\n * в `ModalPage` и `ModalCard`, в них прокидывается данный компонент, который визуально не виден,\n * но при этом на нём сохраняется возможность взаимодействия.\n *\n * В `getRooRef` отдаёт ссылку на DOM общего `ModalOverlay`.\n *\n * @private\n */\nexport const VisuallyHiddenModalOverlay = _param => {\n  var {\n      visible: visibleExcluded,\n      position: positionExcluded,\n      getRootRef\n    } = _param,\n    restProps = _object_without_properties(_param, [\"visible\", \"position\", \"getRootRef\"]);\n  const ref = useContext(ModalRootOverlayContext);\n  return /*#__PURE__*/_jsx(\"div\", _object_spread_props(_object_spread({}, restProps), {\n    \"aria-hidden\": \"true\",\n    className: \"vkuiVisuallyHiddenModalOverlay__host\",\n    ref: function handleCurrentRefForForwardContextRef() {\n      setRef(ref.current, getRootRef);\n    }\n  }));\n};","map":{"version":3,"names":["useContext","setRef","ModalRootOverlayContext","VisuallyHiddenModalOverlay","_param","visible","visibleExcluded","position","positionExcluded","getRootRef","restProps","_object_without_properties","ref","_jsx","_object_spread_props","_object_spread","className","handleCurrentRefForForwardContextRef","current"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/components/ModalRoot/VisuallyHiddenModalOverlay/VisuallyHiddenModalOverlay.tsx"],"sourcesContent":["'use client';\n\nimport { useContext } from 'react';\nimport { setRef } from '../../../lib/utils';\nimport type { ModalOverlayProps } from '../../ModalOverlay/ModalOverlay';\nimport { ModalRootOverlayContext } from '../ModalRootContext';\nimport styles from './VisuallyHiddenModalOverlay.module.css';\n\nexport type VisuallyHiddenModalOverlayProps = ModalOverlayProps;\n\n/**\n * `ModalRoot` выставляет общий `ModalOverlay` для всех потомков, и чтобы не нарушить логику\n * в `ModalPage` и `ModalCard`, в них прокидывается данный компонент, который визуально не виден,\n * но при этом на нём сохраняется возможность взаимодействия.\n *\n * В `getRooRef` отдаёт ссылку на DOM общего `ModalOverlay`.\n *\n * @private\n */\nexport const VisuallyHiddenModalOverlay = ({\n  visible: visibleExcluded,\n  position: positionExcluded,\n  getRootRef,\n  ...restProps\n}: VisuallyHiddenModalOverlayProps) => {\n  const ref = useContext(ModalRootOverlayContext);\n  return (\n    <div\n      {...restProps}\n      aria-hidden=\"true\"\n      className={styles.host}\n      ref={function handleCurrentRefForForwardContextRef() {\n        setRef(ref.current, getRootRef);\n      }}\n    />\n  );\n};\n"],"mappings":"AAAA;;;;;;AAEA,SAASA,UAAU,QAAQ;AAC3B,SAASC,MAAM,QAAQ;AAEvB,SAASC,uBAAuB,QAAQ;AAKxC;;;;;;;;;AASA,OAAO,MAAMC,0BAAA,GAA6BC,MAAA;MAAC;MACzCC,OAAA,EAASC,eAAe;MACxBC,QAAA,EAAUC,gBAAgB;MAC1BC;IAAU,CAEsB,GAAAL,MAAA;IAD7BM,SAAA,GAAAC,0BAAA,CAAAP,MAAA,GAHH,WACA,YACA,a;EAGA,MAAMQ,GAAA,GAAMZ,UAAA,CAAWE,uBAAA;EACvB,oBACEW,IAAA,CAAC,OAAAC,oBAAA,CAAAC,cAAA,KACKL,SAAA;IACJ,eAAY;IACZM,SAAS;IACTJ,GAAA,EAAK,SAASK,qCAAA;MACZhB,MAAA,CAAOW,GAAA,CAAIM,OAAO,EAAET,UAAA;IACtB;;AAGN","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}