{"ast":null,"code":"'use client';\n\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nimport { classNames } from \"@vkontakte/vkjs\";\nimport { useConfigDirection } from \"../../hooks/useConfigDirection.js\";\nimport { usePlatform } from \"../../hooks/usePlatform.js\";\nimport { useTabsNavigation } from \"../../hooks/useTabsNavigation.js\";\nimport { RootComponent } from \"../RootComponent/RootComponent.js\";\nexport const TabsModeContext = /*#__PURE__*/React.createContext({\n  mode: 'default',\n  withGaps: false,\n  layoutFillMode: 'auto',\n  withScrollToSelectedTab: false,\n  scrollBehaviorToSelectedTab: 'nearest'\n});\n/**\n * @see https://vkcom.github.io/VKUI/#/Tabs\n */\nexport const Tabs = _param => {\n  var {\n      children,\n      mode = 'default',\n      role = 'tablist',\n      withScrollToSelectedTab,\n      scrollBehaviorToSelectedTab = 'nearest',\n      layoutFillMode = 'auto'\n    } = _param,\n    restProps = _object_without_properties(_param, [\"children\", \"mode\", \"role\", \"withScrollToSelectedTab\", \"scrollBehaviorToSelectedTab\", \"layoutFillMode\"]);\n  const platform = usePlatform();\n  const direction = useConfigDirection();\n  const isTabFlow = role === 'tablist';\n  const withGaps = mode === 'accent' || mode === 'secondary';\n  const {\n    tabsRef\n  } = useTabsNavigation(isTabFlow, direction === 'rtl');\n  return /*#__PURE__*/_jsx(RootComponent, _object_spread_props(_object_spread({}, restProps), {\n    baseClassName: classNames(\"vkuiTabs__host\", 'vkuiInternalTabs', platform === 'vkcom' && 'vkuiInternalTabs--vkcom', withGaps && classNames(\"vkuiTabs__withGaps\", 'vkuiInternalTabs--withGaps'), mode === 'default' && \"vkuiTabs__modeDefault\"),\n    role: role,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: \"vkuiTabs__in\",\n      ref: tabsRef,\n      children: /*#__PURE__*/_jsx(TabsModeContext.Provider, {\n        value: {\n          mode,\n          withGaps,\n          layoutFillMode,\n          withScrollToSelectedTab,\n          scrollBehaviorToSelectedTab\n        },\n        children: children\n      })\n    })\n  }));\n};\n// чтобы styleguidist не путал компонент\n// с другими именованными экспортами\nTabs.displayName = 'Tabs';","map":{"version":3,"names":["React","classNames","useConfigDirection","usePlatform","useTabsNavigation","RootComponent","TabsModeContext","createContext","mode","withGaps","layoutFillMode","withScrollToSelectedTab","scrollBehaviorToSelectedTab","Tabs","_param","children","role","restProps","_object_without_properties","platform","direction","isTabFlow","tabsRef","_jsx","_object_spread_props","_object_spread","baseClassName","className","ref","Provider","value","displayName"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/components/Tabs/Tabs.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { useConfigDirection } from '../../hooks/useConfigDirection';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { useTabsNavigation } from '../../hooks/useTabsNavigation';\nimport type { HTMLAttributesWithRootRef } from '../../types';\nimport { RootComponent } from '../RootComponent/RootComponent';\nimport styles from './Tabs.module.css';\n\nexport interface TabsProps extends HTMLAttributesWithRootRef<HTMLDivElement> {\n  mode?: 'default' | 'accent' | 'secondary';\n  /**\n   * Включает прокрутку контейнера до активной (`selected`) вкладки\n   * @since 5.10.0\n   */\n  withScrollToSelectedTab?: boolean;\n  /**\n   * Отвечает за горизонтальное выравнивание при прокрутке до активной вкладки.\n   * @see [scrollIntoView](https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView)\n   * @since 5.10.0\n   */\n  scrollBehaviorToSelectedTab?: ScrollIntoViewOptions['inline'];\n  /**\n   * При `auto` ширина вкладок определяется контекстом:\n   *  - равномерно занимают всю доступную ширину при вложении в `HorizontalScroll`\n   *  - равномерно занимают всю доступную ширину при `mode=default` и platform !== 'VKCOM'\n   * При `stretched` и `shrinked` вкладки либо равномерно занимают всю ширину,\n   * либо выравниваются по контенту соответственно\n   */\n  layoutFillMode?: 'auto' | 'stretched' | 'shrinked';\n}\n\nexport interface TabsContextProps {\n  mode: TabsProps['mode'];\n  withGaps: boolean;\n  layoutFillMode: NonNullable<TabsProps['layoutFillMode']>;\n  withScrollToSelectedTab: TabsProps['withScrollToSelectedTab'];\n  scrollBehaviorToSelectedTab: Required<TabsProps['scrollBehaviorToSelectedTab']>;\n}\n\nexport const TabsModeContext: React.Context<TabsContextProps> =\n  React.createContext<TabsContextProps>({\n    mode: 'default',\n    withGaps: false,\n    layoutFillMode: 'auto',\n    withScrollToSelectedTab: false,\n    scrollBehaviorToSelectedTab: 'nearest',\n  });\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Tabs\n */\nexport const Tabs = ({\n  children,\n  mode = 'default',\n  role = 'tablist',\n  withScrollToSelectedTab,\n  scrollBehaviorToSelectedTab = 'nearest',\n  layoutFillMode = 'auto',\n  ...restProps\n}: TabsProps): React.ReactNode => {\n  const platform = usePlatform();\n  const direction = useConfigDirection();\n  const isTabFlow = role === 'tablist';\n  const withGaps = mode === 'accent' || mode === 'secondary';\n\n  const { tabsRef } = useTabsNavigation(isTabFlow, direction === 'rtl');\n\n  return (\n    <RootComponent\n      {...restProps}\n      baseClassName={classNames(\n        styles.host,\n        'vkuiInternalTabs',\n        platform === 'vkcom' && 'vkuiInternalTabs--vkcom',\n        withGaps && classNames(styles.withGaps, 'vkuiInternalTabs--withGaps'),\n        mode === 'default' && styles.modeDefault,\n      )}\n      role={role}\n    >\n      <div className={styles.in} ref={tabsRef}>\n        <TabsModeContext.Provider\n          value={{\n            mode,\n            withGaps,\n            layoutFillMode,\n            withScrollToSelectedTab,\n            scrollBehaviorToSelectedTab,\n          }}\n        >\n          {children}\n        </TabsModeContext.Provider>\n      </div>\n    </RootComponent>\n  );\n};\n\n// чтобы styleguidist не путал компонент\n// с другими именованными экспортами\nTabs.displayName = 'Tabs';\n"],"mappings":"AAAA;;;;;;AAEA,YAAYA,KAAA,MAAW;AACvB,SAASC,UAAU,QAAQ;AAC3B,SAASC,kBAAkB,QAAQ;AACnC,SAASC,WAAW,QAAQ;AAC5B,SAASC,iBAAiB,QAAQ;AAElC,SAASC,aAAa,QAAQ;AAkC9B,OAAO,MAAMC,eAAA,gBACXN,KAAA,CAAMO,aAAa,CAAmB;EACpCC,IAAA,EAAM;EACNC,QAAA,EAAU;EACVC,cAAA,EAAgB;EAChBC,uBAAA,EAAyB;EACzBC,2BAAA,EAA6B;AAC/B;AAEF;;;AAGA,OAAO,MAAMC,IAAA,GAAOC,MAAA;MAAC;MACnBC,QAAQ;MACRP,IAAA,GAAO,SAAS;MAChBQ,IAAA,GAAO,SAAS;MAChBL,uBAAuB;MACvBC,2BAAA,GAA8B,SAAS;MACvCF,cAAA,GAAiB;IAAM,CAEb,GAAAI,MAAA;IADPG,SAAA,GAAAC,0BAAA,CAAAJ,MAAA,GANH,YACA,QACA,QACA,2BACA,+BACA,iB;EAGA,MAAMK,QAAA,GAAWhB,WAAA;EACjB,MAAMiB,SAAA,GAAYlB,kBAAA;EAClB,MAAMmB,SAAA,GAAYL,IAAA,KAAS;EAC3B,MAAMP,QAAA,GAAWD,IAAA,KAAS,YAAYA,IAAA,KAAS;EAE/C,MAAM;IAAEc;EAAO,CAAE,GAAGlB,iBAAA,CAAkBiB,SAAA,EAAWD,SAAA,KAAc;EAE/D,oBACEG,IAAA,CAAClB,aAAA,EAAAmB,oBAAA,CAAAC,cAAA,KACKR,SAAA;IACJS,aAAA,EAAezB,UAAA,mBAEb,oBACAkB,QAAA,KAAa,WAAW,2BACxBV,QAAA,IAAYR,UAAA,uBAA4B,+BACxCO,IAAA,KAAS;IAEXQ,IAAA,EAAMA,IAAA;cAEN,aAAAO,IAAA,CAAC;MAAII,SAAS;MAAaC,GAAA,EAAKN,OAAA;gBAC9B,aAAAC,IAAA,CAACjB,eAAA,CAAgBuB,QAAQ;QACvBC,KAAA,EAAO;UACLtB,IAAA;UACAC,QAAA;UACAC,cAAA;UACAC,uBAAA;UACAC;QACF;kBAECG;;;;AAKX;AAEA;AACA;AACAF,IAAA,CAAKkB,WAAW,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}