{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { isValidNotReactFragmentElement } from \"../lib/utils.js\";\nimport { usePatchChildren } from \"./usePatchChildren.js\";\nexport const useReferenceElement = function () {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  const [children, injectProps, externRef] = args;\n  const child = isValidNotReactFragmentElement(children) ? children : /*#__PURE__*/_jsx(\"span\", {\n    children: children\n  });\n  const [, patchedChild] = usePatchChildren(child, injectProps, externRef);\n  return patchedChild;\n};","map":{"version":3,"names":["isValidNotReactFragmentElement","usePatchChildren","useReferenceElement","_len","arguments","length","args","Array","_key","children","injectProps","externRef","child","_jsx","patchedChild"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/hooks/useReferenceElement.tsx"],"sourcesContent":["import { isValidNotReactFragmentElement } from '../lib/utils';\nimport { usePatchChildren } from './usePatchChildren';\n\nexport const useReferenceElement = <ElementType extends HTMLElement = HTMLElement>(\n  ...args: Parameters<typeof usePatchChildren<ElementType>>\n) => {\n  const [children, injectProps, externRef] = args;\n  const child = isValidNotReactFragmentElement(children) ? children : <span>{children}</span>;\n\n  const [, patchedChild] = usePatchChildren(child, injectProps, externRef);\n\n  return patchedChild;\n};\n"],"mappings":";AAAA,SAASA,8BAA8B,QAAQ;AAC/C,SAASC,gBAAgB,QAAQ;AAEjC,OAAO,MAAMC,mBAAA,GAAsB,SAAAA,CAAA,EAC9B;EAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAAC,IAAA,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;IAAAF,IAAA,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;EAAA;EAEH,MAAM,CAACC,QAAA,EAAUC,WAAA,EAAaC,SAAA,CAAU,GAAGL,IAAA;EAC3C,MAAMM,KAAA,GAAQZ,8BAAA,CAA+BS,QAAA,IAAYA,QAAA,gBAAWI,IAAA,CAAC;cAAMJ;;EAE3E,MAAM,GAAGK,YAAA,CAAa,GAAGb,gBAAA,CAAiBW,KAAA,EAAOF,WAAA,EAAaC,SAAA;EAE9D,OAAOG,YAAA;AACT","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}