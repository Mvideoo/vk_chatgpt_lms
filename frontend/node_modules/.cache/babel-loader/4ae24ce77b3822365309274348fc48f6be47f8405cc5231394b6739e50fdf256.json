{"ast":null,"code":"'use client';\n\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nimport { classNames } from \"@vkontakte/vkjs\";\nimport { useAdaptivity } from \"../../hooks/useAdaptivity.js\";\nimport { useExternRef } from \"../../hooks/useExternRef.js\";\nimport { callMultiple } from \"../../lib/callMultiple.js\";\nimport { getFormFieldModeFromSelectType } from \"../../lib/select.js\";\nimport { useIsomorphicLayoutEffect } from \"../../lib/useIsomorphicLayoutEffect.js\";\nimport { DropdownIcon } from \"../DropdownIcon/DropdownIcon.js\";\nimport { FormField } from \"../FormField/FormField.js\";\nimport { SelectTypography } from \"../SelectTypography/SelectTypography.js\";\nconst sizeYClassNames = {\n  none: \"vkuiSelect__sizeYNone\",\n  compact: \"vkuiSelect__sizeYCompact\"\n};\nexport const NOT_SELECTED = {\n  NATIVE: '__vkui_internal_Select_not_selected__',\n  CUSTOM: null\n};\n/**\n * @visibleName NativeSelect\n */\nexport const remapFromSelectValueToNativeValue = value => value === NOT_SELECTED.CUSTOM ? NOT_SELECTED.NATIVE : value;\nexport const remapFromNativeValueToSelectValue = value => value === NOT_SELECTED.NATIVE ? NOT_SELECTED.CUSTOM : value;\n/**\n * @see https://vkcom.github.io/VKUI/#/NativeSelect\n */\nexport const NativeSelect = _param => {\n  var {\n      style,\n      align,\n      placeholder,\n      children,\n      className,\n      getRef,\n      getRootRef,\n      disabled,\n      multiline,\n      selectType = 'default',\n      status,\n      icon = /*#__PURE__*/_jsx(DropdownIcon, {}),\n      before,\n      onChange,\n      value,\n      defaultValue\n    } = _param,\n    restProps = _object_without_properties(_param, [\"style\", \"align\", \"placeholder\", \"children\", \"className\", \"getRef\", \"getRootRef\", \"disabled\", \"multiline\", \"selectType\", \"status\", \"icon\", \"before\", \"onChange\", \"value\", \"defaultValue\"]);\n  const [title, setTitle] = React.useState('');\n  const [empty, setEmpty] = React.useState(false);\n  const selectRef = useExternRef(getRef);\n  const {\n    sizeY = 'none'\n  } = useAdaptivity();\n  const checkSelectedOption = () => {\n    var _selectRef_current;\n    const selectedOption = (_selectRef_current = selectRef.current) === null || _selectRef_current === void 0 ? void 0 : _selectRef_current.options[selectRef.current.selectedIndex];\n    if (selectedOption) {\n      setTitle(selectedOption.text);\n      setEmpty(selectedOption.value === NOT_SELECTED.NATIVE && placeholder != null);\n    }\n  };\n  const _onChange = e => {\n    const newValue = remapFromNativeValueToSelectValue(e.target.value);\n    if (e.target.value === NOT_SELECTED.NATIVE) {\n      e.target.value = '';\n    }\n    if (e.currentTarget.value === NOT_SELECTED.NATIVE) {\n      e.currentTarget.value = '';\n    }\n    onChange === null || onChange === void 0 ? void 0 : onChange(e, newValue);\n  };\n  useIsomorphicLayoutEffect(checkSelectedOption, [children]);\n  return /*#__PURE__*/_jsxs(FormField, {\n    Component: \"div\",\n    className: classNames(\"vkuiSelect__host\", 'vkuiInternalNativeSelect', before && \"vkuiSelect__hasBefore\", empty && \"vkuiSelect__empty\", multiline && \"vkuiSelect__multiline\", align === 'center' && \"vkuiSelect__alignCenter\", align === 'right' && \"vkuiSelect__alignRight\", sizeY !== 'regular' && sizeYClassNames[sizeY], className),\n    style: style,\n    getRootRef: getRootRef,\n    disabled: disabled,\n    before: before,\n    after: icon,\n    status: status,\n    mode: getFormFieldModeFromSelectType(selectType),\n    children: [/*#__PURE__*/_jsxs(\"select\", _object_spread_props(_object_spread({}, restProps), {\n      value: value !== undefined ? remapFromSelectValueToNativeValue(value) : value,\n      defaultValue: defaultValue !== undefined ? remapFromSelectValueToNativeValue(defaultValue) : defaultValue,\n      disabled: disabled,\n      className: \"vkuiSelect__el\",\n      onChange: callMultiple(_onChange, checkSelectedOption),\n      ref: selectRef,\n      children: [placeholder && /*#__PURE__*/_jsx(\"option\", {\n        value: NOT_SELECTED.NATIVE,\n        children: placeholder\n      }), children]\n    })), /*#__PURE__*/_jsx(\"div\", {\n      className: \"vkuiSelect__container\",\n      \"aria-hidden\": true,\n      children: /*#__PURE__*/_jsx(SelectTypography, {\n        className: \"vkuiSelect__title\",\n        selectType: selectType,\n        children: title\n      })\n    })]\n  });\n};","map":{"version":3,"names":["React","classNames","useAdaptivity","useExternRef","callMultiple","getFormFieldModeFromSelectType","useIsomorphicLayoutEffect","DropdownIcon","FormField","SelectTypography","sizeYClassNames","none","compact","NOT_SELECTED","NATIVE","CUSTOM","remapFromSelectValueToNativeValue","value","remapFromNativeValueToSelectValue","NativeSelect","_param","style","align","placeholder","children","className","getRef","getRootRef","disabled","multiline","selectType","status","icon","_jsx","before","onChange","defaultValue","restProps","_object_without_properties","title","setTitle","useState","empty","setEmpty","selectRef","sizeY","checkSelectedOption","_selectRef_current","selectedOption","current","options","selectedIndex","text","_onChange","e","newValue","target","currentTarget","_jsxs","Component","after","mode","_object_spread_props","_object_spread","undefined","ref"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/components/NativeSelect/NativeSelect.tsx"],"sourcesContent":["'use client';\n\nimport { type ChangeEvent, type ChangeEventHandler } from 'react';\nimport * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { callMultiple } from '../../lib/callMultiple';\nimport { getFormFieldModeFromSelectType } from '../../lib/select';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport type { HasAlign, HasRef, HasRootRef } from '../../types';\nimport { DropdownIcon } from '../DropdownIcon/DropdownIcon';\nimport { FormField, type FormFieldProps } from '../FormField/FormField';\nimport type { SelectType } from '../Select/Select';\nimport { SelectTypography } from '../SelectTypography/SelectTypography';\nimport styles from '../Select/Select.module.css';\n\nconst sizeYClassNames = {\n  none: styles.sizeYNone,\n  compact: styles.sizeYCompact,\n};\n\nexport type SelectValue = Exclude<\n  React.SelectHTMLAttributes<HTMLSelectElement>['value'],\n  undefined\n> | null;\n\nexport type NativeSelectValue = Exclude<SelectValue, null>;\n\nexport const NOT_SELECTED = {\n  NATIVE: '__vkui_internal_Select_not_selected__',\n  CUSTOM: null,\n};\n\n/**\n * @visibleName NativeSelect\n */\nexport const remapFromSelectValueToNativeValue = (value: SelectValue): NativeSelectValue =>\n  value === NOT_SELECTED.CUSTOM ? NOT_SELECTED.NATIVE : value;\n\nexport const remapFromNativeValueToSelectValue = (value: NativeSelectValue): SelectValue =>\n  value === NOT_SELECTED.NATIVE ? NOT_SELECTED.CUSTOM : value;\n\nexport interface NativeSelectProps\n  extends Omit<\n      React.SelectHTMLAttributes<HTMLSelectElement>,\n      'multiple' | 'value' | 'defaultValue' | 'onChange'\n    >,\n    HasRef<HTMLSelectElement>,\n    HasRootRef<HTMLDivElement>,\n    HasAlign,\n    Pick<FormFieldProps, 'before' | 'status'> {\n  /**\n   * Выбранное значение.\n   *\n   * > ⚠️  Важно: При прокидывании `undefined` компонент будет считаться `Uncontrolled`.\n   * >\n   * > Не используйте `undefined`, чтобы показать невыбранное состояние. Вместо этого используйте `null`\n   */\n  value?: SelectValue;\n  /**\n   * см. `value`\n   */\n  defaultValue?: SelectValue;\n  /**\n   * Коллбэк срабатывающий при изменении выбранного значения.\n   * Вторым параметром прокидывается новое значение\n   *\n   * > ⚠️ Лучше использовать второй параметр при работе с компонентом\n   */\n  onChange?: (e: ChangeEvent<HTMLSelectElement>, newValue: SelectValue) => void;\n  placeholder?: string;\n  multiline?: boolean;\n  selectType?: SelectType;\n  /**\n   * Иконка раскрывающегося списка\n   */\n  icon?: React.ReactNode;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/NativeSelect\n */\nexport const NativeSelect = ({\n  style,\n  align,\n  placeholder,\n  children,\n  className,\n  getRef,\n  getRootRef,\n  disabled,\n  multiline,\n  selectType = 'default',\n  status,\n  icon = <DropdownIcon />,\n  before,\n  onChange,\n  value,\n  defaultValue,\n  ...restProps\n}: NativeSelectProps): React.ReactNode => {\n  const [title, setTitle] = React.useState('');\n  const [empty, setEmpty] = React.useState(false);\n  const selectRef = useExternRef(getRef);\n  const { sizeY = 'none' } = useAdaptivity();\n\n  const checkSelectedOption = () => {\n    const selectedOption = selectRef.current?.options[selectRef.current.selectedIndex];\n    if (selectedOption) {\n      setTitle(selectedOption.text);\n      setEmpty(selectedOption.value === NOT_SELECTED.NATIVE && placeholder != null);\n    }\n  };\n\n  const _onChange: ChangeEventHandler<HTMLSelectElement> = (e) => {\n    const newValue = remapFromNativeValueToSelectValue(e.target.value);\n    if (e.target.value === NOT_SELECTED.NATIVE) {\n      e.target.value = '';\n    }\n    if (e.currentTarget.value === NOT_SELECTED.NATIVE) {\n      e.currentTarget.value = '';\n    }\n    onChange?.(e, newValue);\n  };\n  useIsomorphicLayoutEffect(checkSelectedOption, [children]);\n\n  return (\n    <FormField\n      Component=\"div\"\n      className={classNames(\n        styles.host,\n        'vkuiInternalNativeSelect',\n        before && styles.hasBefore,\n        empty && styles.empty,\n        multiline && styles.multiline,\n        align === 'center' && styles.alignCenter,\n        align === 'right' && styles.alignRight,\n        sizeY !== 'regular' && sizeYClassNames[sizeY],\n        className,\n      )}\n      style={style}\n      getRootRef={getRootRef}\n      disabled={disabled}\n      before={before}\n      after={icon}\n      status={status}\n      mode={getFormFieldModeFromSelectType(selectType)}\n    >\n      <select\n        {...restProps}\n        value={value !== undefined ? remapFromSelectValueToNativeValue(value) : value}\n        defaultValue={\n          defaultValue !== undefined\n            ? remapFromSelectValueToNativeValue(defaultValue)\n            : defaultValue\n        }\n        disabled={disabled}\n        className={styles.el}\n        onChange={callMultiple(_onChange, checkSelectedOption)}\n        ref={selectRef}\n      >\n        {placeholder && <option value={NOT_SELECTED.NATIVE}>{placeholder}</option>}\n        {children}\n      </select>\n      <div className={styles.container} aria-hidden>\n        <SelectTypography className={styles.title} selectType={selectType}>\n          {title}\n        </SelectTypography>\n      </div>\n    </FormField>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}