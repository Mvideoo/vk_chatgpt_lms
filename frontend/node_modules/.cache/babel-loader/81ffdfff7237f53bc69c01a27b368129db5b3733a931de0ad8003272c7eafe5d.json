{"ast":null,"code":"'use client';\n\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { classNames } from \"@vkontakte/vkjs\";\nimport { useAdaptivity } from \"../../hooks/useAdaptivity.js\";\nimport { SizeType } from \"../../lib/adaptivity/index.js\";\nimport { mergeCalls } from \"../../lib/mergeCalls.js\";\nimport { checkClickable, Clickable } from \"../Clickable/Clickable.js\";\nimport { Ripple, useMaybeNeedRipple, useRipple } from \"./Ripple.js\";\nimport { activeClass, DEFAULT_STATE_MODE, hoverClass } from \"./state.js\";\nconst sizeXClassNames = {\n  none: \"vkuiTappable__sizeXNone\",\n  compact: \"vkuiTappable__sizeXCompact\"\n};\nfunction hasPointerClassName(hasPointer) {\n  switch (hasPointer) {\n    case undefined:\n      return \"vkuiTappable__hasPointerNone\";\n    case false:\n      return \"vkuiTappable__hasPointerFalse\";\n  }\n  return undefined;\n}\nexport const Tappable = _param => {\n  var {\n      baseClassName,\n      borderRadiusMode = 'auto',\n      children,\n      hoverMode = DEFAULT_STATE_MODE,\n      activeMode = DEFAULT_STATE_MODE,\n      onPointerDown,\n      onPointerCancel\n    } = _param,\n    restProps = _object_without_properties(_param, [\"baseClassName\", \"borderRadiusMode\", \"children\", \"hoverMode\", \"activeMode\", \"onPointerDown\", \"onPointerCancel\"]);\n  const isClickable = checkClickable(restProps);\n  const {\n    sizeX = 'none',\n    hasPointer\n  } = useAdaptivity();\n  const needRipple = useMaybeNeedRipple(activeMode, hasPointer);\n  const _useRipple = useRipple(needRipple, hasPointer),\n    {\n      clicks\n    } = _useRipple,\n    rippleEvents = _object_without_properties(_useRipple, [\"clicks\"]);\n  const handlers = mergeCalls(rippleEvents, {\n    onPointerDown,\n    onPointerCancel\n  });\n  const typeProps = restProps.Component === 'button' ? {\n    type: 'button'\n  } : {};\n  return /*#__PURE__*/_jsxs(Clickable, _object_spread_props(_object_spread({\n    baseClassName: classNames('vkuiInternalTappable', baseClassName, \"vkuiTappable__host\", sizeX !== SizeType.REGULAR && sizeXClassNames[sizeX], borderRadiusMode === 'inherit' && \"vkuiTappable__borderRadiusInherit\", hasPointerClassName(hasPointer)),\n    hoverClassName: hoverClass(hoverMode),\n    activeClassName: activeClass(activeMode)\n  }, typeProps, handlers, restProps), {\n    children: [children, isClickable && (hoverMode === 'background' || activeMode === 'background') && /*#__PURE__*/_jsx(Ripple, {\n      needRipple: needRipple,\n      clicks: clicks\n    })]\n  }));\n};","map":{"version":3,"names":["classNames","useAdaptivity","SizeType","mergeCalls","checkClickable","Clickable","Ripple","useMaybeNeedRipple","useRipple","activeClass","DEFAULT_STATE_MODE","hoverClass","sizeXClassNames","none","compact","hasPointerClassName","hasPointer","undefined","Tappable","_param","baseClassName","borderRadiusMode","children","hoverMode","activeMode","onPointerDown","onPointerCancel","restProps","_object_without_properties","isClickable","sizeX","needRipple","_useRipple","clicks","rippleEvents","handlers","typeProps","Component","type","_jsxs","_object_spread_props","_object_spread","REGULAR","hoverClassName","activeClassName","_jsx"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/components/Tappable/Tappable.tsx"],"sourcesContent":["'use client';\n\nimport { classNames } from '@vkontakte/vkjs';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\nimport { SizeType } from '../../lib/adaptivity';\nimport { mergeCalls } from '../../lib/mergeCalls';\nimport { checkClickable, Clickable, type ClickableProps } from '../Clickable/Clickable';\nimport { Ripple, useMaybeNeedRipple, useRipple } from './Ripple';\nimport { activeClass, DEFAULT_STATE_MODE, hoverClass, type StateProps } from './state';\nimport styles from './Tappable.module.css';\n\nconst sizeXClassNames = {\n  none: styles.sizeXNone,\n  compact: styles.sizeXCompact,\n};\n\nfunction hasPointerClassName(hasPointer: boolean | undefined) {\n  switch (hasPointer) {\n    case undefined:\n      return styles.hasPointerNone;\n    case false:\n      return styles.hasPointerFalse;\n  }\n\n  return undefined;\n}\n\nexport interface TappableProps extends ClickableProps, StateProps {\n  /**\n   * Задает border-radius элементу\n   * В режиме `auto` на маленьких экранах `border-radius: 0`, иначе определяется токеном `--vkui--size_border_radius--regular`\n   */\n  borderRadiusMode?: 'auto' | 'inherit';\n}\n\nexport const Tappable = ({\n  baseClassName,\n  borderRadiusMode = 'auto',\n  children,\n  hoverMode = DEFAULT_STATE_MODE,\n  activeMode = DEFAULT_STATE_MODE,\n  onPointerDown,\n  onPointerCancel,\n  ...restProps\n}: TappableProps): React.ReactNode => {\n  const isClickable = checkClickable(restProps);\n\n  const { sizeX = 'none', hasPointer } = useAdaptivity();\n\n  const needRipple = useMaybeNeedRipple(activeMode, hasPointer);\n  const { clicks, ...rippleEvents } = useRipple(needRipple, hasPointer);\n\n  const handlers = mergeCalls(rippleEvents, {\n    onPointerDown,\n    onPointerCancel,\n  });\n\n  const typeProps = restProps.Component === 'button' ? { type: 'button' } : {};\n\n  return (\n    <Clickable\n      baseClassName={classNames(\n        'vkuiInternalTappable',\n        baseClassName,\n        styles.host,\n        sizeX !== SizeType.REGULAR && sizeXClassNames[sizeX],\n        borderRadiusMode === 'inherit' && styles.borderRadiusInherit,\n        hasPointerClassName(hasPointer),\n      )}\n      hoverClassName={hoverClass(hoverMode)}\n      activeClassName={activeClass(activeMode)}\n      {...typeProps}\n      {...handlers}\n      {...restProps}\n    >\n      {children}\n      {isClickable && (hoverMode === 'background' || activeMode === 'background') && (\n        <Ripple needRipple={needRipple} clicks={clicks} />\n      )}\n    </Clickable>\n  );\n};\n"],"mappings":"AAAA;;;;;;AAEA,SAASA,UAAU,QAAQ;AAC3B,SAASC,aAAa,QAAQ;AAC9B,SAASC,QAAQ,QAAQ;AACzB,SAASC,UAAU,QAAQ;AAC3B,SAASC,cAAc,EAAEC,SAAS,QAA6B;AAC/D,SAASC,MAAM,EAAEC,kBAAkB,EAAEC,SAAS,QAAQ;AACtD,SAASC,WAAW,EAAEC,kBAAkB,EAAEC,UAAU,QAAyB;AAG7E,MAAMC,eAAA,GAAkB;EACtBC,IAAI;EACJC,OAAO;AACT;AAEA,SAASC,oBAAoBC,UAA+B;EAC1D,QAAQA,UAAA;IACN,KAAKC,SAAA;MACH;IACF,KAAK;MACH;EACJ;EAEA,OAAOA,SAAA;AACT;AAUA,OAAO,MAAMC,QAAA,GAAWC,MAAA;MAAC;MACvBC,aAAa;MACbC,gBAAA,GAAmB,MAAM;MACzBC,QAAQ;MACRC,SAAA,GAAYb,kBAAkB;MAC9Bc,UAAA,GAAad,kBAAkB;MAC/Be,aAAa;MACbC;IAAe,CAED,GAAAP,MAAA;IADXQ,SAAA,GAAAC,0BAAA,CAAAT,MAAA,GAPH,iBACA,oBACA,YACA,aACA,cACA,iBACA,kB;EAGA,MAAMU,WAAA,GAAczB,cAAA,CAAeuB,SAAA;EAEnC,MAAM;IAAEG,KAAA,GAAQ,MAAM;IAAEd;EAAU,CAAE,GAAGf,aAAA;EAEvC,MAAM8B,UAAA,GAAaxB,kBAAA,CAAmBiB,UAAA,EAAYR,UAAA;EAClD,MAAoCgB,UAAA,GAAAxB,SAAA,CAAUuB,UAAA,EAAYf,UAAA;IAApD;MAAEiB;IAAM,CAAmB,GAAGD,UAAA;IAAjBE,YAAA,GAAAN,0BAAA,CAAiBI,UAAA,GAA5B,S;EAER,MAAMG,QAAA,GAAWhC,UAAA,CAAW+B,YAAA,EAAc;IACxCT,aAAA;IACAC;EACF;EAEA,MAAMU,SAAA,GAAYT,SAAA,CAAUU,SAAS,KAAK,WAAW;IAAEC,IAAA,EAAM;EAAS,IAAI,CAAC;EAE3E,oBACEC,KAAA,CAAClC,SAAA,EAAAmC,oBAAA,CAAAC,cAAA;IACCrB,aAAA,EAAepB,UAAA,CACb,wBACAoB,aAAA,wBAEAU,KAAA,KAAU5B,QAAA,CAASwC,OAAO,IAAI9B,eAAe,CAACkB,KAAA,CAAM,EACpDT,gBAAA,KAAqB,kDACrBN,mBAAA,CAAoBC,UAAA;IAEtB2B,cAAA,EAAgBhC,UAAA,CAAWY,SAAA;IAC3BqB,eAAA,EAAiBnC,WAAA,CAAYe,UAAA;KACzBY,SAAA,EACAD,QAAA,EACAR,SAAA;eAEHL,QAAA,EACAO,WAAA,KAAgBN,SAAA,KAAc,gBAAgBC,UAAA,KAAe,YAAW,kBACvEqB,IAAA,CAACvC,MAAA;MAAOyB,UAAA,EAAYA,UAAA;MAAYE,MAAA,EAAQA;;;AAIhD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}