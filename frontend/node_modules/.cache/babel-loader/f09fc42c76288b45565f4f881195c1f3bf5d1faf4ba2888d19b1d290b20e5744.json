{"ast":null,"code":"'use client';\n\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nimport { classNames } from \"@vkontakte/vkjs\";\nimport { useConfigDirection } from \"../../hooks/useConfigDirection.js\";\nimport { useDOM } from \"../../lib/dom.js\";\nimport { HorizontalScroll } from \"../HorizontalScroll/HorizontalScroll.js\";\nimport { RootComponent } from \"../RootComponent/RootComponent.js\";\nconst stylesSize = {\n  s: 'vkuiInternalCardScroll--size-s',\n  m: 'vkuiInternalCardScroll--size-m',\n  l: 'vkuiInternalCardScroll--size-l'\n};\n/**\n * @see https://vkcom.github.io/VKUI/#/CardScroll\n */\nexport const CardScroll = _param => {\n  var {\n      children,\n      size = 's',\n      showArrows = true,\n      padding = false,\n      CardsListComponent = 'ul',\n      prevButtonTestId,\n      nextButtonTestId\n    } = _param,\n    restProps = _object_without_properties(_param, [\"children\", \"size\", \"showArrows\", \"padding\", \"CardsListComponent\", \"prevButtonTestId\", \"nextButtonTestId\"]);\n  const refContainer = React.useRef(null);\n  const direction = useConfigDirection();\n  const {\n    window\n  } = useDOM();\n  const getPadding = container => {\n    return parseFloat(window.getComputedStyle(container).getPropertyValue('--vkui_internal--CardScroll_horizontal_padding'));\n  };\n  const slideOffsetFromStart = slide => {\n    var _refContainer_current;\n    const containerWidth = ((_refContainer_current = refContainer.current) === null || _refContainer_current === void 0 ? void 0 : _refContainer_current.offsetWidth) || 0;\n    return direction === 'rtl' ? containerWidth - slide.offsetLeft - slide.offsetWidth : slide.offsetLeft;\n  };\n  function getScrollToLeft(offset) {\n    if (!refContainer.current) {\n      return offset;\n    }\n    const containerWidth = refContainer.current.offsetWidth;\n    const getMarginEnd = el => {\n      const computedStyles = window.getComputedStyle(el);\n      return parseInt(computedStyles.marginInlineEnd) || (direction === 'rtl' ? parseInt(computedStyles.marginLeft) : parseInt(computedStyles.marginRight)) || 0;\n    };\n    const slideIndex = [...refContainer.current.children].findIndex(el => slideOffsetFromStart(el) + el.offsetWidth + getMarginEnd(el) - offset >= 0);\n    if (slideIndex === -1) {\n      return offset;\n    }\n    const slide = refContainer.current.children[slideIndex];\n    const padding = getPadding(refContainer.current);\n    const scrollTo = slideOffsetFromStart(slide) - (containerWidth - slide.offsetWidth) + padding;\n    if (scrollTo <= 2 * padding) {\n      return 0;\n    }\n    return scrollTo;\n  }\n  function getScrollToRight(offset) {\n    if (!refContainer.current) {\n      return offset;\n    }\n    const containerWidth = refContainer.current.offsetWidth;\n    const slide = Array.prototype.find.call(refContainer.current.children, el => {\n      return slideOffsetFromStart(el) + el.offsetWidth - offset > containerWidth;\n    });\n    if (!slide) {\n      return offset;\n    }\n    const padding = getPadding(refContainer.current);\n    return slideOffsetFromStart(slide) - padding;\n  }\n  return /*#__PURE__*/_jsx(RootComponent, _object_spread_props(_object_spread({}, restProps), {\n    baseClassName: classNames(\"vkuiCardScroll__host\", 'vkuiInternalCardScroll', size !== false && stylesSize[size], padding && \"vkuiCardScroll__withPaddings\"),\n    children: /*#__PURE__*/_jsx(HorizontalScroll, {\n      getScrollToLeft: getScrollToLeft,\n      getScrollToRight: getScrollToRight,\n      showArrows: showArrows,\n      prevButtonTestId: prevButtonTestId,\n      nextButtonTestId: nextButtonTestId,\n      ContentWrapperComponent: CardsListComponent,\n      contentWrapperRef: refContainer,\n      contentWrapperClassName: \"vkuiCardScroll__in\",\n      children: children\n    })\n  }));\n};","map":{"version":3,"names":["React","classNames","useConfigDirection","useDOM","HorizontalScroll","RootComponent","stylesSize","s","m","l","CardScroll","_param","children","size","showArrows","padding","CardsListComponent","prevButtonTestId","nextButtonTestId","restProps","_object_without_properties","refContainer","useRef","direction","window","getPadding","container","parseFloat","getComputedStyle","getPropertyValue","slideOffsetFromStart","slide","_refContainer_current","containerWidth","current","offsetWidth","offsetLeft","getScrollToLeft","offset","getMarginEnd","el","computedStyles","parseInt","marginInlineEnd","marginLeft","marginRight","slideIndex","findIndex","scrollTo","getScrollToRight","Array","prototype","find","call","_jsx","_object_spread_props","_object_spread","baseClassName","ContentWrapperComponent","contentWrapperRef","contentWrapperClassName"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/components/CardScroll/CardScroll.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { useConfigDirection } from '../../hooks/useConfigDirection';\nimport { useDOM } from '../../lib/dom';\nimport type { HasComponent, HTMLAttributesWithRootRef } from '../../types';\nimport { HorizontalScroll, type HorizontalScrollProps } from '../HorizontalScroll/HorizontalScroll';\nimport { RootComponent } from '../RootComponent/RootComponent';\nimport styles from './CardScroll.module.css';\n\nconst stylesSize = {\n  s: 'vkuiInternalCardScroll--size-s',\n  m: 'vkuiInternalCardScroll--size-m',\n  l: 'vkuiInternalCardScroll--size-l',\n};\n\nexport interface CardScrollProps\n  extends HTMLAttributesWithRootRef<HTMLDivElement>,\n    HasComponent,\n    Pick<HorizontalScrollProps, 'showArrows' | 'prevButtonTestId' | 'nextButtonTestId'> {\n  /**\n   * При `size=false` ширина `Card` будет регулироваться контентом внутри. В остальных случаях — будет явно задана в процентах.\n   */\n  size?: 's' | 'm' | 'l' | false;\n  /**\n   * Добавляет отступы по краям слева и справа\n   */\n  padding?: boolean;\n  /**\n   * Позволяет поменять тег используемый для обертки над карточками\n   */\n  CardsListComponent?: React.ElementType;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/CardScroll\n */\nexport const CardScroll = ({\n  children,\n  size = 's',\n  showArrows = true,\n  padding = false,\n  CardsListComponent = 'ul',\n  prevButtonTestId,\n  nextButtonTestId,\n  ...restProps\n}: CardScrollProps): React.ReactNode => {\n  const refContainer = React.useRef<HTMLDivElement>(null);\n  const direction = useConfigDirection();\n\n  const { window } = useDOM();\n\n  const getPadding = (container: HTMLElement) => {\n    return parseFloat(\n      window!\n        .getComputedStyle(container)\n        .getPropertyValue('--vkui_internal--CardScroll_horizontal_padding'),\n    );\n  };\n\n  const slideOffsetFromStart = (slide: HTMLElement) => {\n    const containerWidth = refContainer.current?.offsetWidth || 0;\n    return direction === 'rtl'\n      ? containerWidth - slide.offsetLeft - slide.offsetWidth\n      : slide.offsetLeft;\n  };\n\n  function getScrollToLeft(offset: number): number {\n    if (!refContainer.current) {\n      return offset;\n    }\n    const containerWidth = refContainer.current.offsetWidth;\n\n    const getMarginEnd = (el: HTMLElement) => {\n      const computedStyles = window!.getComputedStyle(el);\n      return (\n        parseInt(computedStyles.marginInlineEnd) ||\n        (direction === 'rtl'\n          ? parseInt(computedStyles.marginLeft)\n          : parseInt(computedStyles.marginRight)) ||\n        0\n      );\n    };\n\n    const slideIndex = ([...refContainer.current.children] as HTMLElement[]).findIndex(\n      (el: HTMLElement) =>\n        slideOffsetFromStart(el) + el.offsetWidth + getMarginEnd(el) - offset >= 0,\n    );\n\n    if (slideIndex === -1) {\n      return offset;\n    }\n\n    const slide = refContainer.current.children[slideIndex] as HTMLElement;\n    const padding = getPadding(refContainer.current);\n    const scrollTo = slideOffsetFromStart(slide) - (containerWidth - slide.offsetWidth) + padding;\n\n    if (scrollTo <= 2 * padding) {\n      return 0;\n    }\n\n    return scrollTo;\n  }\n\n  function getScrollToRight(offset: number): number {\n    if (!refContainer.current) {\n      return offset;\n    }\n    const containerWidth = refContainer.current.offsetWidth;\n    const slide = Array.prototype.find.call(refContainer.current.children, (el: HTMLElement) => {\n      return slideOffsetFromStart(el) + el.offsetWidth - offset > containerWidth;\n    }) as HTMLElement;\n\n    if (!slide) {\n      return offset;\n    }\n\n    const padding = getPadding(refContainer.current);\n    return slideOffsetFromStart(slide) - padding;\n  }\n\n  return (\n    <RootComponent\n      {...restProps}\n      baseClassName={classNames(\n        styles.host,\n        'vkuiInternalCardScroll',\n        size !== false && stylesSize[size],\n        padding && styles.withPaddings,\n      )}\n    >\n      <HorizontalScroll\n        getScrollToLeft={getScrollToLeft}\n        getScrollToRight={getScrollToRight}\n        showArrows={showArrows}\n        prevButtonTestId={prevButtonTestId}\n        nextButtonTestId={nextButtonTestId}\n        ContentWrapperComponent={CardsListComponent}\n        contentWrapperRef={refContainer}\n        contentWrapperClassName={styles.in}\n      >\n        {children}\n      </HorizontalScroll>\n    </RootComponent>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}