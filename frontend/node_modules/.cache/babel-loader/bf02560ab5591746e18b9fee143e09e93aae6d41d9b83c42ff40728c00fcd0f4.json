{"ast":null,"code":"'use client';\n\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nimport { classNames } from \"@vkontakte/vkjs\";\nimport { useConfigDirection } from \"../../../hooks/useConfigDirection.js\";\nimport { getBadgeIconSizeByImageBaseSize, ImageBase, ImageBaseContext } from \"../../ImageBase/ImageBase.js\";\nimport { Icon12Circle, Icon12OnlineMobile } from \"./icons.js\";\nexport const AvatarBadgeWithPreset = _param => {\n  var {\n      preset = 'online',\n      className\n    } = _param,\n    restProps = _object_without_properties(_param, [\"preset\", \"className\"]);\n  const direction = useConfigDirection();\n  const isRtl = direction === 'rtl';\n  const {\n    size\n  } = React.useContext(ImageBaseContext);\n  const badgeSize = getBadgeIconSizeByImageBaseSize(size);\n  const isOnlinePreset = preset === 'online';\n  const presetClassName = isOnlinePreset ? \"vkuiAvatarBadge__presetOnline\" : \"vkuiAvatarBadge__presetOnlineMobile\";\n  const Icon = isOnlinePreset ? Icon12Circle : Icon12OnlineMobile;\n  return /*#__PURE__*/_jsx(ImageBase.Badge, _object_spread_props(_object_spread({\n    background: \"stroke\",\n    className: classNames(\"vkuiAvatarBadge__host\", isRtl && \"vkuiAvatarBadge__rtl\", presetClassName, className)\n  }, restProps), {\n    children: /*#__PURE__*/_jsx(Icon, {\n      width: badgeSize,\n      height: badgeSize\n    })\n  }));\n};\nAvatarBadgeWithPreset.displayName = 'Avatar.BadgeWithPreset';","map":{"version":3,"names":["React","classNames","useConfigDirection","getBadgeIconSizeByImageBaseSize","ImageBase","ImageBaseContext","Icon12Circle","Icon12OnlineMobile","AvatarBadgeWithPreset","_param","preset","className","restProps","_object_without_properties","direction","isRtl","size","useContext","badgeSize","isOnlinePreset","presetClassName","Icon","_jsx","Badge","_object_spread_props","_object_spread","background","width","height","displayName"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/components/Avatar/AvatarBadge/AvatarBadgeWithPreset.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { useConfigDirection } from '../../../hooks/useConfigDirection';\nimport {\n  getBadgeIconSizeByImageBaseSize,\n  ImageBase,\n  type ImageBaseBadgeProps,\n  ImageBaseContext,\n} from '../../ImageBase/ImageBase';\nimport { Icon12Circle, Icon12OnlineMobile } from './icons';\nimport styles from './AvatarBadge.module.css';\n\nexport interface AvatarBadgeWithPresetProps\n  extends Omit<ImageBaseBadgeProps, 'background' | 'children'> {\n  /**\n   * Использует предзаданные настройки.\n   *\n   * За каждым пресетом закреплена своя иконка и стили.\n   */\n  preset?: 'online' | 'online-mobile';\n}\n\nexport const AvatarBadgeWithPreset: React.FC<AvatarBadgeWithPresetProps> = ({\n  preset = 'online',\n  className,\n  ...restProps\n}: AvatarBadgeWithPresetProps) => {\n  const direction = useConfigDirection();\n  const isRtl = direction === 'rtl';\n  const { size } = React.useContext(ImageBaseContext);\n  const badgeSize = getBadgeIconSizeByImageBaseSize(size);\n  const isOnlinePreset = preset === 'online';\n  const presetClassName = isOnlinePreset ? styles.presetOnline : styles.presetOnlineMobile;\n  const Icon = isOnlinePreset ? Icon12Circle : Icon12OnlineMobile;\n\n  return (\n    <ImageBase.Badge\n      background=\"stroke\"\n      className={classNames(styles.host, isRtl && styles.rtl, presetClassName, className)}\n      {...restProps}\n    >\n      <Icon width={badgeSize} height={badgeSize} />\n    </ImageBase.Badge>\n  );\n};\n\nAvatarBadgeWithPreset.displayName = 'Avatar.BadgeWithPreset';\n"],"mappings":"AAAA;;;;;;AAEA,YAAYA,KAAA,MAAW;AACvB,SAASC,UAAU,QAAQ;AAC3B,SAASC,kBAAkB,QAAQ;AACnC,SACEC,+BAA+B,EAC/BC,SAAS,EAETC,gBAAgB,QACX;AACP,SAASC,YAAY,EAAEC,kBAAkB,QAAQ;AAajD,OAAO,MAAMC,qBAAA,GAA8DC,MAAA;MAAC;MAC1EC,MAAA,GAAS,QAAQ;MACjBC;IAAS,CAEkB,GAAAF,MAAA;IADxBG,SAAA,GAAAC,0BAAA,CAAAJ,MAAA,GAFH,UACA,Y;EAGA,MAAMK,SAAA,GAAYZ,kBAAA;EAClB,MAAMa,KAAA,GAAQD,SAAA,KAAc;EAC5B,MAAM;IAAEE;EAAI,CAAE,GAAGhB,KAAA,CAAMiB,UAAU,CAACZ,gBAAA;EAClC,MAAMa,SAAA,GAAYf,+BAAA,CAAgCa,IAAA;EAClD,MAAMG,cAAA,GAAiBT,MAAA,KAAW;EAClC,MAAMU,eAAA,GAAkBD,cAAA;EACxB,MAAME,IAAA,GAAOF,cAAA,GAAiBb,YAAA,GAAeC,kBAAA;EAE7C,oBACEe,IAAA,CAAClB,SAAA,CAAUmB,KAAK,EAAAC,oBAAA,CAAAC,cAAA;IACdC,UAAA,EAAW;IACXf,SAAA,EAAWV,UAAA,0BAAwBc,KAAA,4BAAqBK,eAAA,EAAiBT,SAAA;KACrEC,SAAA;cAEJ,aAAAU,IAAA,CAACD,IAAA;MAAKM,KAAA,EAAOT,SAAA;MAAWU,MAAA,EAAQV;;;AAGtC;AAEAV,qBAAA,CAAsBqB,WAAW,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}