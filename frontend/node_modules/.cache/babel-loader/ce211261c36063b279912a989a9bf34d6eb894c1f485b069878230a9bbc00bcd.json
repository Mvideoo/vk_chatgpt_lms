{"ast":null,"code":"import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nimport { classNames } from \"@vkontakte/vkjs\";\nimport { RootComponent } from \"../RootComponent/RootComponent.js\";\nimport { RealClickable } from \"./RealClickable.js\";\n/**\n * Некликабельный компонент. Отключаем возможность нажимать на компонент.\n */\nconst NonClickable = _param => {\n  var {\n      href,\n      onClick,\n      onClickCapture,\n      activeClassName,\n      hoverClassName,\n      hasActive,\n      hasHover,\n      hovered,\n      unlockParentHover,\n      activated,\n      activeEffectDelay,\n      focusVisibleMode\n    } = _param,\n    restProps = _object_without_properties(_param, [\"href\", \"onClick\", \"onClickCapture\", \"activeClassName\", \"hoverClassName\", \"hasActive\", \"hasHover\", \"hovered\", \"unlockParentHover\", \"activated\", \"activeEffectDelay\", \"focusVisibleMode\"]);\n  return /*#__PURE__*/_jsx(RootComponent, _object_spread({}, restProps));\n};\n/**\n * Проверяем, является ли компонент кликабельным\n */\nexport function checkClickable(props) {\n  return (props.href !== undefined || props.onClick !== undefined || props.onClickCapture !== undefined || props.Component === 'a' || props.Component === 'button' || props.Component === 'label' || props.Component === 'input') && !props.disabled;\n}\n/**\n * Определяет правильный компонент и его свойства\n *\n * - если передан Component, используем его\n * - при передаче `href` превратится в `a`,\n * - при передаче `onClick` превратится в `div` c `role=\"button\"` и `tabIndex=\"0\"`.\n * - иначе используется `div`.\n */\nfunction component(_ref) {\n  let {\n    Component,\n    onClick,\n    onClickCapture,\n    href,\n    disabled\n  } = _ref;\n  if (Component !== undefined) {\n    return {\n      Component,\n      disabled\n    };\n  } else if (href !== undefined) {\n    return _object_spread({\n      Component: 'a'\n    }, disabled && {\n      'aria-disabled': true,\n      'role': 'link'\n    });\n  } else if (onClick !== undefined || onClickCapture !== undefined) {\n    return _object_spread({\n      Component: 'div',\n      role: 'button'\n    }, disabled ? {\n      'aria-disabled': true\n    } : {\n      tabIndex: 0\n    });\n  }\n  return {};\n}\n/**\n * Базовый кликабельный корневой компонент.\n *\n * - при передаче `href` превратится в `a`,\n * - при передаче `onClick` превратится в `div` c `role=\"button\"` и `tabIndex=\"0\"`.\n * - иначе используется `div`.\n *\n * Отвечает за:\n *\n * - стейты наведения и нажатия\n * - a11y компонентов\n */\nexport const Clickable = props => {\n  const commonProps = component(props);\n  const isClickable = checkClickable(props);\n  const Component = isClickable ? RealClickable : NonClickable;\n  const {\n      baseClassName,\n      disabled\n    } = props,\n    restProps = _object_without_properties(props, [\"baseClassName\", \"disabled\"]);\n  return /*#__PURE__*/_jsx(Component, _object_spread({\n    baseClassName: classNames(baseClassName, \"vkuiClickable__host\")\n  }, commonProps, restProps));\n};","map":{"version":3,"names":["React","classNames","RootComponent","RealClickable","NonClickable","_param","href","onClick","onClickCapture","activeClassName","hoverClassName","hasActive","hasHover","hovered","unlockParentHover","activated","activeEffectDelay","focusVisibleMode","restProps","_object_without_properties","_jsx","_object_spread","checkClickable","props","undefined","Component","disabled","component","_ref","role","tabIndex","Clickable","commonProps","isClickable","baseClassName"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/components/Clickable/Clickable.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { type FocusVisibleModeProps } from '../../hooks/useFocusVisibleClassName';\nimport { RootComponent, type RootComponentProps } from '../RootComponent/RootComponent';\nimport { RealClickable } from './RealClickable';\nimport { type StateProps } from './useState';\nimport styles from './Clickable.module.css';\n\nexport interface ClickableProps<T = HTMLElement>\n  extends RootComponentProps<T>,\n    FocusVisibleModeProps,\n    StateProps {}\n\n/**\n * Некликабельный компонент. Отключаем возможность нажимать на компонент.\n */\nconst NonClickable = <T,>({\n  href,\n  onClick,\n  onClickCapture,\n  activeClassName,\n  hoverClassName,\n  hasActive,\n  hasHover,\n  hovered,\n  unlockParentHover,\n  activated,\n  activeEffectDelay,\n  focusVisibleMode,\n  ...restProps\n}: ClickableProps<T>) => <RootComponent {...restProps} />;\n\n/**\n * Проверяем, является ли компонент кликабельным\n */\nexport function checkClickable<T>(props: ClickableProps<T>): boolean {\n  return (\n    (props.href !== undefined ||\n      props.onClick !== undefined ||\n      props.onClickCapture !== undefined ||\n      props.Component === 'a' ||\n      props.Component === 'button' ||\n      props.Component === 'label' ||\n      props.Component === 'input') &&\n    !props.disabled\n  );\n}\n\n/**\n * Определяет правильный компонент и его свойства\n *\n * - если передан Component, используем его\n * - при передаче `href` превратится в `a`,\n * - при передаче `onClick` превратится в `div` c `role=\"button\"` и `tabIndex=\"0\"`.\n * - иначе используется `div`.\n */\nfunction component<T>({\n  Component,\n  onClick,\n  onClickCapture,\n  href,\n  disabled,\n}: RootComponentProps<T>): RootComponentProps<T> {\n  if (Component !== undefined) {\n    return { Component, disabled };\n  } else if (href !== undefined) {\n    return {\n      Component: 'a',\n\n      /**\n       * Если ссылка отключена, добавляем атрибуты для доступности.\n       *\n       * - Тег `a` не поддерживает атрибут disabled, поэтому используем `aria-disabled`\n       * - Тег `a` без `href` не является ссылкой, поэтому добавляем `role=\"link\"`\n       *\n       * https://w3c.github.io/html-aria/#example-communicate-a-disabled-link-with-aria\n       */\n      ...(disabled && {\n        'aria-disabled': true,\n        'role': 'link',\n      }),\n    };\n  } else if (onClick !== undefined || onClickCapture !== undefined) {\n    return {\n      Component: 'div',\n      role: 'button',\n      ...(disabled ? { 'aria-disabled': true } : { tabIndex: 0 }),\n    };\n  }\n\n  return {};\n}\n\n/**\n * Базовый кликабельный корневой компонент.\n *\n * - при передаче `href` превратится в `a`,\n * - при передаче `onClick` превратится в `div` c `role=\"button\"` и `tabIndex=\"0\"`.\n * - иначе используется `div`.\n *\n * Отвечает за:\n *\n * - стейты наведения и нажатия\n * - a11y компонентов\n */\nexport const Clickable = <T,>(props: ClickableProps<T>): React.ReactNode => {\n  const commonProps = component(props);\n  const isClickable = checkClickable(props);\n  const Component = isClickable ? RealClickable : NonClickable;\n\n  const {\n    baseClassName,\n    disabled, // Игнорируем disabled из пропсов, т.к. он обрабатывается в commonProps\n    ...restProps\n  } = props;\n\n  return (\n    <Component\n      baseClassName={classNames(baseClassName, styles.host)}\n      {...commonProps}\n      {...restProps}\n    />\n  );\n};\n"],"mappings":";;;AAAA,YAAYA,KAAA,MAAW;AACvB,SAASC,UAAU,QAAQ;AAE3B,SAASC,aAAa,QAAiC;AACvD,SAASC,aAAa,QAAQ;AAS9B;;;AAGA,MAAMC,YAAA,GAAeC,MAAA;MAAK;MACxBC,IAAI;MACJC,OAAO;MACPC,cAAc;MACdC,eAAe;MACfC,cAAc;MACdC,SAAS;MACTC,QAAQ;MACRC,OAAO;MACPC,iBAAiB;MACjBC,SAAS;MACTC,iBAAiB;MACjBC;IAAgB,CAEE,GAAAZ,MAAA;IADfa,SAAA,GAAAC,0BAAA,CAAAd,MAAA,GAZH,QACA,WACA,kBACA,mBACA,kBACA,aACA,YACA,WACA,qBACA,aACA,qBACA,mB;sBAEuBe,IAAA,CAAClB,aAAA,EAAAmB,cAAA,KAAkBH,SAAA;;AAE5C;;;AAGA,OAAO,SAASI,eAAkBC,KAAwB;EACxD,OACE,CAACA,KAAA,CAAMjB,IAAI,KAAKkB,SAAA,IACdD,KAAA,CAAMhB,OAAO,KAAKiB,SAAA,IAClBD,KAAA,CAAMf,cAAc,KAAKgB,SAAA,IACzBD,KAAA,CAAME,SAAS,KAAK,OACpBF,KAAA,CAAME,SAAS,KAAK,YACpBF,KAAA,CAAME,SAAS,KAAK,WACpBF,KAAA,CAAME,SAAS,KAAK,OAAM,KAC5B,CAACF,KAAA,CAAMG,QAAQ;AAEnB;AAEA;;;;;;;;AAQA,SAASC,UAAAC,IAAA,EAMe;EAAA,IANF;IACpBH,SAAS;IACTlB,OAAO;IACPC,cAAc;IACdF,IAAI;IACJoB;EAAQ,CACc,GAAAE,IAAA;EACtB,IAAIH,SAAA,KAAcD,SAAA,EAAW;IAC3B,OAAO;MAAEC,SAAA;MAAWC;IAAS;EAC/B,OAAO,IAAIpB,IAAA,KAASkB,SAAA,EAAW;IAC7B,OAAOH,cAAA;MACLI,SAAA,EAAW;OAUPC,QAAA,IAAY;MACd,iBAAiB;MACjB,QAAQ;IACV;EAEJ,OAAO,IAAInB,OAAA,KAAYiB,SAAA,IAAahB,cAAA,KAAmBgB,SAAA,EAAW;IAChE,OAAOH,cAAA;MACLI,SAAA,EAAW;MACXI,IAAA,EAAM;OACFH,QAAA,GAAW;MAAE,iBAAiB;IAAK,IAAI;MAAEI,QAAA,EAAU;IAAE;EAE7D;EAEA,OAAO,CAAC;AACV;AAEA;;;;;;;;;;;;AAYA,OAAO,MAAMC,SAAA,GAAiBR,KAAA;EAC5B,MAAMS,WAAA,GAAcL,SAAA,CAAUJ,KAAA;EAC9B,MAAMU,WAAA,GAAcX,cAAA,CAAeC,KAAA;EACnC,MAAME,SAAA,GAAYQ,WAAA,GAAc9B,aAAA,GAAgBC,YAAA;EAEhD,MAAM;MACJ8B,aAAa;MACbR;IAAQ,CAET,GAAGH,KAAA;IADCL,SAAA,GAAAC,0BAAA,CACDI,KAAA,GAHF,iBACA,W;EAIF,oBACEH,IAAA,CAACK,SAAA,EAAAJ,cAAA;IACCa,aAAA,EAAejC,UAAA,CAAWiC,aAAA;KACtBF,WAAA,EACAd,SAAA;AAGV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}