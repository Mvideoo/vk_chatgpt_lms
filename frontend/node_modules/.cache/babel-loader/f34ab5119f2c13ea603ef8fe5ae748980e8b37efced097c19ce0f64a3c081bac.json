{"ast":null,"code":"'use client';\n\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nimport { classNames } from \"@vkontakte/vkjs\";\nimport { useAdaptivity } from \"../../hooks/useAdaptivity.js\";\nimport { useAutoFocus } from \"../../hooks/useAutoFocus.js\";\nimport { useExternRef } from \"../../hooks/useExternRef.js\";\nimport { getFormFieldModeFromSelectType } from \"../../lib/select.js\";\nimport { DropdownIcon } from \"../DropdownIcon/DropdownIcon.js\";\nimport { FormField } from \"../FormField/FormField.js\";\nimport { SelectTypography } from \"../SelectTypography/SelectTypography.js\";\nconst sizeYClassNames = {\n  none: \"vkuiSelect__sizeYNone\",\n  compact: \"vkuiSelect__sizeYCompact\"\n};\n/**\n * @see https://vkcom.github.io/VKUI/#/SelectMimicry\n */\nexport const SelectMimicry = _param => {\n  var {\n      tabIndex = 0,\n      placeholder,\n      children,\n      align,\n      getRootRef,\n      multiline,\n      disabled,\n      onClick,\n      before,\n      after = /*#__PURE__*/_jsx(DropdownIcon, {}),\n      selectType = 'default',\n      status,\n      className,\n      autoFocus\n    } = _param,\n    restProps = _object_without_properties(_param, [\"tabIndex\", \"placeholder\", \"children\", \"align\", \"getRootRef\", \"multiline\", \"disabled\", \"onClick\", \"before\", \"after\", \"selectType\", \"status\", \"className\", \"autoFocus\"]);\n  const rootRef = useExternRef(getRootRef);\n  const {\n    sizeY = 'none'\n  } = useAdaptivity();\n  const title = children || placeholder;\n  useAutoFocus(rootRef, autoFocus);\n  return /*#__PURE__*/_jsx(FormField, _object_spread_props(_object_spread({}, restProps), {\n    tabIndex: disabled ? undefined : tabIndex,\n    className: classNames(\"vkuiSelect__host\", sizeY !== 'regular' && sizeYClassNames[sizeY], !children && \"vkuiSelect__empty\", multiline && \"vkuiSelect__multiline\", align === 'center' && \"vkuiSelect__alignCenter\", align === 'right' && \"vkuiSelect__alignRight\", before && \"vkuiSelect__hasBefore\", className),\n    getRootRef: rootRef,\n    onClick: disabled ? undefined : onClick,\n    disabled: disabled,\n    before: before,\n    after: after,\n    mode: getFormFieldModeFromSelectType(selectType),\n    status: status,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: \"vkuiSelect__container\",\n      children: /*#__PURE__*/_jsx(SelectTypography, {\n        selectType: selectType,\n        className: \"vkuiSelect__title\",\n        children: title\n      })\n    })\n  }));\n};","map":{"version":3,"names":["React","classNames","useAdaptivity","useAutoFocus","useExternRef","getFormFieldModeFromSelectType","DropdownIcon","FormField","SelectTypography","sizeYClassNames","none","compact","SelectMimicry","_param","tabIndex","placeholder","children","align","getRootRef","multiline","disabled","onClick","before","after","_jsx","selectType","status","className","autoFocus","restProps","_object_without_properties","rootRef","sizeY","title","_object_spread_props","_object_spread","undefined","mode"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/components/SelectMimicry/SelectMimicry.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\nimport { useAutoFocus } from '../../hooks/useAutoFocus';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { getFormFieldModeFromSelectType } from '../../lib/select';\nimport type { HasAlign, HasRootRef } from '../../types';\nimport { DropdownIcon } from '../DropdownIcon/DropdownIcon';\nimport { FormField, type FormFieldProps } from '../FormField/FormField';\nimport type { SelectType } from '../Select/Select';\nimport { SelectTypography } from '../SelectTypography/SelectTypography';\nimport styles from '../Select/Select.module.css';\n\nconst sizeYClassNames = {\n  none: styles.sizeYNone,\n  compact: styles.sizeYCompact,\n};\n\nexport interface SelectMimicryProps\n  extends React.AllHTMLAttributes<HTMLElement>,\n    HasRootRef<HTMLElement>,\n    HasAlign,\n    Pick<FormFieldProps, 'before' | 'after' | 'status'> {\n  multiline?: boolean;\n  disabled?: boolean;\n  selectType?: SelectType;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/SelectMimicry\n */\nexport const SelectMimicry = ({\n  tabIndex = 0,\n  placeholder,\n  children,\n  align,\n  getRootRef,\n  multiline,\n  disabled,\n  onClick,\n  before,\n  after = <DropdownIcon />,\n  selectType = 'default',\n  status,\n  className,\n  autoFocus,\n  ...restProps\n}: SelectMimicryProps): React.ReactNode => {\n  const rootRef = useExternRef(getRootRef);\n\n  const { sizeY = 'none' } = useAdaptivity();\n  const title = children || placeholder;\n\n  useAutoFocus(rootRef, autoFocus);\n\n  return (\n    <FormField\n      {...restProps}\n      tabIndex={disabled ? undefined : tabIndex}\n      className={classNames(\n        styles.host,\n        sizeY !== 'regular' && sizeYClassNames[sizeY],\n        !children && styles.empty,\n        multiline && styles.multiline,\n        align === 'center' && styles.alignCenter,\n        align === 'right' && styles.alignRight,\n        before && styles.hasBefore,\n        className,\n      )}\n      getRootRef={rootRef}\n      onClick={disabled ? undefined : onClick}\n      disabled={disabled}\n      before={before}\n      after={after}\n      mode={getFormFieldModeFromSelectType(selectType)}\n      status={status}\n    >\n      <div className={styles.container}>\n        <SelectTypography selectType={selectType} className={styles.title}>\n          {title}\n        </SelectTypography>\n      </div>\n    </FormField>\n  );\n};\n"],"mappings":"AAAA;;;;;;AAEA,YAAYA,KAAA,MAAW;AACvB,SAASC,UAAU,QAAQ;AAC3B,SAASC,aAAa,QAAQ;AAC9B,SAASC,YAAY,QAAQ;AAC7B,SAASC,YAAY,QAAQ;AAC7B,SAASC,8BAA8B,QAAQ;AAE/C,SAASC,YAAY,QAAQ;AAC7B,SAASC,SAAS,QAA6B;AAE/C,SAASC,gBAAgB,QAAQ;AAGjC,MAAMC,eAAA,GAAkB;EACtBC,IAAI;EACJC,OAAO;AACT;AAYA;;;AAGA,OAAO,MAAMC,aAAA,GAAgBC,MAAA;MAAC;MAC5BC,QAAA,GAAW,CAAC;MACZC,WAAW;MACXC,QAAQ;MACRC,KAAK;MACLC,UAAU;MACVC,SAAS;MACTC,QAAQ;MACRC,OAAO;MACPC,MAAM;MACNC,KAAA,gBAAQC,IAAA,CAAClB,YAAA,KAAe;MACxBmB,UAAA,GAAa,SAAS;MACtBC,MAAM;MACNC,SAAS;MACTC;IAAS,CAEU,GAAAf,MAAA;IADhBgB,SAAA,GAAAC,0BAAA,CAAAjB,MAAA,GAdH,YACA,eACA,YACA,SACA,cACA,aACA,YACA,WACA,UACA,SACA,cACA,UACA,aACA,Y;EAGA,MAAMkB,OAAA,GAAU3B,YAAA,CAAac,UAAA;EAE7B,MAAM;IAAEc,KAAA,GAAQ;EAAM,CAAE,GAAG9B,aAAA;EAC3B,MAAM+B,KAAA,GAAQjB,QAAA,IAAYD,WAAA;EAE1BZ,YAAA,CAAa4B,OAAA,EAASH,SAAA;EAEtB,oBACEJ,IAAA,CAACjB,SAAA,EAAA2B,oBAAA,CAAAC,cAAA,KACKN,SAAA;IACJf,QAAA,EAAUM,QAAA,GAAWgB,SAAA,GAAYtB,QAAA;IACjCa,SAAA,EAAW1B,UAAA,qBAET+B,KAAA,KAAU,aAAavB,eAAe,CAACuB,KAAA,CAAM,EAC7C,CAAChB,QAAA,yBACDG,SAAA,6BACAF,KAAA,KAAU,uCACVA,KAAA,KAAU,qCACVK,MAAA,6BACAK,SAAA;IAEFT,UAAA,EAAYa,OAAA;IACZV,OAAA,EAASD,QAAA,GAAWgB,SAAA,GAAYf,OAAA;IAChCD,QAAA,EAAUA,QAAA;IACVE,MAAA,EAAQA,MAAA;IACRC,KAAA,EAAOA,KAAA;IACPc,IAAA,EAAMhC,8BAAA,CAA+BoB,UAAA;IACrCC,MAAA,EAAQA,MAAA;cAER,aAAAF,IAAA,CAAC;MAAIG,SAAS;gBACZ,aAAAH,IAAA,CAAChB,gBAAA;QAAiBiB,UAAA,EAAYA,UAAA;QAAYE,SAAS;kBAChDM;;;;AAKX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}