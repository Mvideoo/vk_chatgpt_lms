{"ast":null,"code":"'use client';\n\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nimport { classNames } from \"@vkontakte/vkjs\";\nimport { useAdaptivityWithJSMediaQueries } from \"../../hooks/useAdaptivityWithJSMediaQueries.js\";\nimport { useEffectDev } from \"../../hooks/useEffectDev.js\";\nimport { useEventListener } from \"../../hooks/useEventListener.js\";\nimport { usePlatform } from \"../../hooks/usePlatform.js\";\nimport { useDOM } from \"../../lib/dom.js\";\nimport { isRefObject } from \"../../lib/isRefObject.js\";\nimport { stopPropagation } from \"../../lib/utils.js\";\nimport { warnOnce } from \"../../lib/warnOnce.js\";\nimport { FocusTrap } from \"../FocusTrap/FocusTrap.js\";\nimport { Popper } from \"../Popper/Popper.js\";\nconst warn = warnOnce('ActionSheet');\nfunction getEl(ref) {\n  return ref && 'current' in ref ? ref.current : ref;\n}\nexport const ActionSheetDropdownMenu = _param => {\n  var {\n      children,\n      toggleRef,\n      closing,\n      onClose,\n      className,\n      style,\n      popupOffsetDistance = 0,\n      placement,\n      onAnimationStart,\n      onAnimationEnd,\n      allowClickPropagation = false,\n      onClick\n    } = _param,\n    restProps = _object_without_properties(_param, [\"children\", \"toggleRef\", \"closing\", \"onClose\", \"className\", \"style\", \"popupOffsetDistance\", \"placement\", \"onAnimationStart\", \"onAnimationEnd\", \"allowClickPropagation\", \"onClick\"]);\n  const {\n    document\n  } = useDOM();\n  const platform = usePlatform();\n  const {\n    sizeY\n  } = useAdaptivityWithJSMediaQueries();\n  const elementRef = React.useRef(null);\n  useEffectDev(() => {\n    const toggleEl = getEl(toggleRef);\n    if (!toggleEl) {\n      warn(`Свойство \"toggleRef\" не передано`, 'error');\n    }\n  }, [toggleRef]);\n  const bodyClickListener = useEventListener('click', e => {\n    const dropdownElement = elementRef === null || elementRef === void 0 ? void 0 : elementRef.current;\n    if (dropdownElement && !dropdownElement.contains(e.target)) {\n      onClose === null || onClose === void 0 ? void 0 : onClose();\n    }\n  });\n  React.useEffect(() => {\n    setTimeout(() => {\n      bodyClickListener.add(document.body);\n    });\n  }, [bodyClickListener, document]);\n  const targetRef = React.useMemo(() => {\n    if (isRefObject(toggleRef)) {\n      return toggleRef;\n    }\n    return {\n      current: toggleRef\n    };\n  }, [toggleRef]);\n  const handleClick = allowClickPropagation ? onClick : event => {\n    stopPropagation(event);\n    onClick === null || onClick === void 0 ? void 0 : onClick(event);\n  };\n  return /*#__PURE__*/_jsx(Popper, {\n    targetRef: targetRef,\n    offsetByMainAxis: popupOffsetDistance,\n    placement: placement,\n    className: classNames(\"vkuiActionSheet__host\", platform === 'ios' && \"vkuiActionSheet__ios\", \"vkuiActionSheet__menu\", closing ? \"vkuiActionSheet__closing\" : \"vkuiActionSheet__opening\", sizeY === 'compact' && \"vkuiActionSheet__sizeYCompact\", className),\n    style: style,\n    getRootRef: elementRef,\n    usePortal: false,\n    onAnimationStart: onAnimationStart,\n    onAnimationEnd: onAnimationEnd,\n    children: /*#__PURE__*/_jsx(FocusTrap, _object_spread_props(_object_spread({\n      onClose: onClose\n    }, restProps), {\n      onClick: handleClick,\n      children: children\n    }))\n  });\n};","map":{"version":3,"names":["React","classNames","useAdaptivityWithJSMediaQueries","useEffectDev","useEventListener","usePlatform","useDOM","isRefObject","stopPropagation","warnOnce","FocusTrap","Popper","warn","getEl","ref","current","ActionSheetDropdownMenu","_param","children","toggleRef","closing","onClose","className","style","popupOffsetDistance","placement","onAnimationStart","onAnimationEnd","allowClickPropagation","onClick","restProps","_object_without_properties","document","platform","sizeY","elementRef","useRef","toggleEl","bodyClickListener","e","dropdownElement","contains","target","useEffect","setTimeout","add","body","targetRef","useMemo","handleClick","event","_jsx","offsetByMainAxis","getRootRef","usePortal","_object_spread_props","_object_spread"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/components/ActionSheet/ActionSheetDropdownMenu.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { useAdaptivityWithJSMediaQueries } from '../../hooks/useAdaptivityWithJSMediaQueries';\nimport { useEffectDev } from '../../hooks/useEffectDev';\nimport { useEventListener } from '../../hooks/useEventListener';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { useDOM } from '../../lib/dom';\nimport { isRefObject } from '../../lib/isRefObject';\nimport { stopPropagation } from '../../lib/utils';\nimport { warnOnce } from '../../lib/warnOnce';\nimport { FocusTrap } from '../FocusTrap/FocusTrap';\nimport { Popper } from '../Popper/Popper';\nimport type { SharedDropdownProps } from './types';\nimport styles from './ActionSheet.module.css';\n\nconst warn = warnOnce('ActionSheet');\nfunction getEl(ref: SharedDropdownProps['toggleRef']): Element | null | undefined {\n  return ref && 'current' in ref ? ref.current : ref;\n}\n\nexport const ActionSheetDropdownMenu = ({\n  children,\n  toggleRef,\n  closing,\n  onClose,\n  className,\n  style,\n  popupOffsetDistance = 0,\n  placement,\n  onAnimationStart,\n  onAnimationEnd,\n  allowClickPropagation = false,\n  onClick,\n  ...restProps\n}: SharedDropdownProps): React.ReactNode => {\n  const { document } = useDOM();\n  const platform = usePlatform();\n  const { sizeY } = useAdaptivityWithJSMediaQueries();\n  const elementRef = React.useRef<HTMLDivElement | null>(null);\n\n  useEffectDev(() => {\n    const toggleEl = getEl(toggleRef);\n    if (!toggleEl) {\n      warn(`Свойство \"toggleRef\" не передано`, 'error');\n    }\n  }, [toggleRef]);\n\n  const bodyClickListener = useEventListener('click', (e: MouseEvent) => {\n    const dropdownElement = elementRef?.current;\n    if (dropdownElement && !dropdownElement.contains(e.target as Node)) {\n      onClose?.();\n    }\n  });\n\n  React.useEffect(() => {\n    setTimeout(() => {\n      bodyClickListener.add(document!.body);\n    });\n  }, [bodyClickListener, document]);\n\n  const targetRef = React.useMemo(() => {\n    if (isRefObject<SharedDropdownProps['toggleRef'], HTMLElement>(toggleRef)) {\n      return toggleRef;\n    }\n\n    return { current: toggleRef as HTMLElement };\n  }, [toggleRef]);\n\n  const handleClick = allowClickPropagation\n    ? onClick\n    : (event: React.MouseEvent<HTMLElement>) => {\n        stopPropagation(event);\n        onClick?.(event);\n      };\n\n  return (\n    <Popper\n      targetRef={targetRef}\n      offsetByMainAxis={popupOffsetDistance}\n      placement={placement}\n      className={classNames(\n        styles.host,\n        platform === 'ios' && styles.ios,\n        styles.menu,\n        closing ? styles.closing : styles.opening,\n        sizeY === 'compact' && styles.sizeYCompact,\n        className,\n      )}\n      style={style}\n      getRootRef={elementRef}\n      usePortal={false}\n      onAnimationStart={onAnimationStart}\n      onAnimationEnd={onAnimationEnd}\n    >\n      <FocusTrap onClose={onClose} {...restProps} onClick={handleClick}>\n        {children}\n      </FocusTrap>\n    </Popper>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}