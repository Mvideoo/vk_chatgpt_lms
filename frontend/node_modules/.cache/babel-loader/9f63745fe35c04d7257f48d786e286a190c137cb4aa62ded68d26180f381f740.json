{"ast":null,"code":"'use client';\n\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nimport { AppRootPortal } from \"../AppRoot/AppRootPortal.js\";\nimport { useScrollLock } from \"../AppRoot/ScrollContext.js\";\nimport { PopoutWrapper } from \"../PopoutWrapper/PopoutWrapper.js\";\nimport { ScreenSpinnerContainer } from \"./ScreenSpinnerContainer.js\";\nimport { ScreenSpinnerLoader } from \"./ScreenSpinnerLoader.js\";\nimport { ScreenSpinnerSwapIcon } from \"./ScreenSpinnerSwapIcon.js\";\n/**\n * @see https://vkcom.github.io/VKUI/#/ScreenSpinner\n */\nexport const ScreenSpinner = _param => {\n  var {\n      style,\n      className,\n      state = 'loading',\n      onClick,\n      cancelLabel,\n      mode,\n      label,\n      customIcon,\n      usePortal\n    } = _param,\n    restProps = _object_without_properties(_param, [\"style\", \"className\", \"state\", \"onClick\", \"cancelLabel\", \"mode\", \"label\", \"customIcon\", \"usePortal\"]);\n  useScrollLock();\n  return /*#__PURE__*/_jsx(AppRootPortal, {\n    usePortal: usePortal,\n    children: /*#__PURE__*/_jsx(PopoutWrapper, {\n      className: className,\n      style: style,\n      noBackground: true,\n      strategy: \"fixed\",\n      children: /*#__PURE__*/_jsxs(ScreenSpinnerContainer, {\n        state: state,\n        mode: mode,\n        label: label,\n        customIcon: customIcon,\n        children: [/*#__PURE__*/_jsx(ScreenSpinnerLoader, _object_spread({}, restProps)), /*#__PURE__*/_jsx(ScreenSpinnerSwapIcon, {\n          onClick: onClick,\n          cancelLabel: cancelLabel\n        })]\n      })\n    })\n  });\n};\nScreenSpinner.displayName = 'ScreenSpinner';\nScreenSpinner.Container = ScreenSpinnerContainer;\nScreenSpinner.Container.displayName = 'ScreenSpinner.Container';\nScreenSpinner.Loader = ScreenSpinnerLoader;\nScreenSpinner.Loader.displayName = 'ScreenSpinner.Loader';\nScreenSpinner.SwapIcon = ScreenSpinnerSwapIcon;\nScreenSpinner.SwapIcon.displayName = 'ScreenSpinner.SwapIcon';","map":{"version":3,"names":["React","AppRootPortal","useScrollLock","PopoutWrapper","ScreenSpinnerContainer","ScreenSpinnerLoader","ScreenSpinnerSwapIcon","ScreenSpinner","_param","style","className","state","onClick","cancelLabel","mode","label","customIcon","usePortal","restProps","_object_without_properties","_jsx","noBackground","strategy","_jsxs","_object_spread","displayName","Container","Loader","SwapIcon"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/components/ScreenSpinner/ScreenSpinner.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { AppRootPortal } from '../AppRoot/AppRootPortal';\nimport { useScrollLock } from '../AppRoot/ScrollContext';\nimport { PopoutWrapper } from '../PopoutWrapper/PopoutWrapper';\nimport { ScreenSpinnerContainer } from './ScreenSpinnerContainer';\nimport { ScreenSpinnerLoader } from './ScreenSpinnerLoader';\nimport { ScreenSpinnerSwapIcon } from './ScreenSpinnerSwapIcon';\nimport type { ScreenSpinnerProps } from './types';\n\nexport type { ScreenSpinnerProps };\n\n/**\n * @see https://vkcom.github.io/VKUI/#/ScreenSpinner\n */\nexport const ScreenSpinner: React.FC<ScreenSpinnerProps> & {\n  Container: typeof ScreenSpinnerContainer;\n  Loader: typeof ScreenSpinnerLoader;\n  SwapIcon: typeof ScreenSpinnerSwapIcon;\n} = ({\n  style,\n  className,\n  state = 'loading',\n  onClick,\n  cancelLabel,\n  mode,\n  label,\n  customIcon,\n  usePortal,\n  ...restProps\n}: ScreenSpinnerProps): React.ReactNode => {\n  useScrollLock();\n\n  return (\n    <AppRootPortal usePortal={usePortal}>\n      <PopoutWrapper className={className} style={style} noBackground strategy=\"fixed\">\n        <ScreenSpinnerContainer state={state} mode={mode} label={label} customIcon={customIcon}>\n          <ScreenSpinnerLoader {...restProps} />\n          <ScreenSpinnerSwapIcon onClick={onClick} cancelLabel={cancelLabel} />\n        </ScreenSpinnerContainer>\n      </PopoutWrapper>\n    </AppRootPortal>\n  );\n};\n\nScreenSpinner.displayName = 'ScreenSpinner';\n\nScreenSpinner.Container = ScreenSpinnerContainer;\nScreenSpinner.Container.displayName = 'ScreenSpinner.Container';\n\nScreenSpinner.Loader = ScreenSpinnerLoader;\nScreenSpinner.Loader.displayName = 'ScreenSpinner.Loader';\n\nScreenSpinner.SwapIcon = ScreenSpinnerSwapIcon;\nScreenSpinner.SwapIcon.displayName = 'ScreenSpinner.SwapIcon';\n"],"mappings":"AAAA;;;;;AAEA,YAAYA,KAAA,MAAW;AACvB,SAASC,aAAa,QAAQ;AAC9B,SAASC,aAAa,QAAQ;AAC9B,SAASC,aAAa,QAAQ;AAC9B,SAASC,sBAAsB,QAAQ;AACvC,SAASC,mBAAmB,QAAQ;AACpC,SAASC,qBAAqB,QAAQ;AAKtC;;;AAGA,OAAO,MAAMC,aAAA,GAITC,MAAA;MAAC;MACHC,KAAK;MACLC,SAAS;MACTC,KAAA,GAAQ,SAAS;MACjBC,OAAO;MACPC,WAAW;MACXC,IAAI;MACJC,KAAK;MACLC,UAAU;MACVC;IAAS,CAEU,GAAAT,MAAA;IADhBU,SAAA,GAAAC,0BAAA,CAAAX,MAAA,GATH,SACA,aACA,SACA,WACA,eACA,QACA,SACA,cACA,Y;EAGAN,aAAA;EAEA,oBACEkB,IAAA,CAACnB,aAAA;IAAcgB,SAAA,EAAWA,SAAA;cACxB,aAAAG,IAAA,CAACjB,aAAA;MAAcO,SAAA,EAAWA,SAAA;MAAWD,KAAA,EAAOA,KAAA;MAAOY,YAAY;MAACC,QAAA,EAAS;gBACvE,aAAAC,KAAA,CAACnB,sBAAA;QAAuBO,KAAA,EAAOA,KAAA;QAAOG,IAAA,EAAMA,IAAA;QAAMC,KAAA,EAAOA,KAAA;QAAOC,UAAA,EAAYA,UAAA;gCAC1EI,IAAA,CAACf,mBAAA,EAAAmB,cAAA,KAAwBN,SAAA,I,aACzBE,IAAA,CAACd,qBAAA;UAAsBM,OAAA,EAASA,OAAA;UAASC,WAAA,EAAaA;;;;;AAKhE;AAEAN,aAAA,CAAckB,WAAW,GAAG;AAE5BlB,aAAA,CAAcmB,SAAS,GAAGtB,sBAAA;AAC1BG,aAAA,CAAcmB,SAAS,CAACD,WAAW,GAAG;AAEtClB,aAAA,CAAcoB,MAAM,GAAGtB,mBAAA;AACvBE,aAAA,CAAcoB,MAAM,CAACF,WAAW,GAAG;AAEnClB,aAAA,CAAcqB,QAAQ,GAAGtB,qBAAA;AACzBC,aAAA,CAAcqB,QAAQ,CAACH,WAAW,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}