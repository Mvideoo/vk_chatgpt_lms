{"ast":null,"code":"'use client';\n\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nimport { classNames } from \"@vkontakte/vkjs\";\nimport { ENABLE_KEYBOARD_INPUT_EVENT_NAME } from \"../../hooks/useKeyboardInputTracker.js\";\nimport { useConfigProvider } from \"../ConfigProvider/ConfigProviderContext.js\";\nimport { Tappable } from \"../Tappable/Tappable.js\";\nimport { VisuallyHidden } from \"../VisuallyHidden/VisuallyHidden.js\";\nexport const CalendarDay = /*#__PURE__*/React.memo(_param => {\n  var {\n      day,\n      today,\n      selected,\n      onChange,\n      hidden,\n      disabled,\n      active,\n      selectionStart,\n      selectionEnd,\n      focused,\n      onEnter,\n      onLeave,\n      hinted,\n      hintedSelectionStart,\n      hintedSelectionEnd,\n      sameMonth,\n      size,\n      children,\n      renderDayContent,\n      testId\n    } = _param,\n    restProps = _object_without_properties(_param, [\"day\", \"today\", \"selected\", \"onChange\", \"hidden\", \"disabled\", \"active\", \"selectionStart\", \"selectionEnd\", \"focused\", \"onEnter\", \"onLeave\", \"hinted\", \"hintedSelectionStart\", \"hintedSelectionEnd\", \"sameMonth\", \"size\", \"children\", \"renderDayContent\", \"testId\"]);\n  const {\n    locale,\n    direction\n  } = useConfigProvider();\n  const ref = React.useRef(null);\n  const onClick = React.useCallback(() => onChange(day), [day, onChange]);\n  const handleEnter = React.useCallback(() => onEnter === null || onEnter === void 0 ? void 0 : onEnter(day), [day, onEnter]);\n  const handleLeave = React.useCallback(() => onLeave === null || onLeave === void 0 ? void 0 : onLeave(day), [day, onLeave]);\n  const label = new Intl.DateTimeFormat(locale, {\n    weekday: 'long',\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  }).format(day);\n  React.useEffect(() => {\n    if (focused && ref.current) {\n      ref.current.dispatchEvent(new Event(ENABLE_KEYBOARD_INPUT_EVENT_NAME, {\n        bubbles: true\n      }));\n      ref.current.focus();\n    }\n  }, [focused]);\n  const content = React.useMemo(() => {\n    if (renderDayContent) {\n      return renderDayContent(day);\n    }\n    return /*#__PURE__*/_jsxs(\"div\", {\n      className: \"vkuiCalendarDay__dayNumber\",\n      children: [/*#__PURE__*/_jsx(VisuallyHidden, {\n        children: children !== null && children !== void 0 ? children : label\n      }), /*#__PURE__*/_jsx(\"span\", {\n        \"aria-hidden\": true,\n        children: day.getDate()\n      })]\n    });\n  }, [renderDayContent, day, children, label]);\n  if (hidden) {\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(\"vkuiCalendarDay__hidden\", size === 's' && \"vkuiCalendarDay__sizeS\")\n    });\n  }\n  return /*#__PURE__*/_jsx(Tappable, _object_spread_props(_object_spread({\n    baseClassName: classNames(\"vkuiCalendarDay__host\", size === 's' && \"vkuiCalendarDay__sizeS\", direction === 'rtl' && \"vkuiCalendarDay__rtl\"),\n    hoverMode: \"vkuiCalendarDay__hostHovered\",\n    activeMode: \"vkuiCalendarDay__hostActivated\",\n    hasActive: false,\n    onClick: onClick,\n    disabled: disabled,\n    tabIndex: -1,\n    getRootRef: ref,\n    focusVisibleMode: active ? 'outside' : 'inside',\n    onPointerEnter: handleEnter,\n    onPointerLeave: handleLeave,\n    \"data-testid\": typeof testId === 'string' ? testId : testId === null || testId === void 0 ? void 0 : testId(day)\n  }, restProps), {\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(\"vkuiCalendarDay__content\", size === 's' && \"vkuiCalendarDay__sizeS\", today && \"vkuiCalendarDay__today\", selected && !disabled && \"vkuiCalendarDay__selected\", selectionStart && \"vkuiCalendarDay__selectionStart\", selectionEnd && \"vkuiCalendarDay__selectionEnd\", disabled && \"vkuiCalendarDay__disabled\", !sameMonth && \"vkuiCalendarDay__notSameMonth\"),\n      children: /*#__PURE__*/_jsx(\"div\", {\n        className: classNames(\"vkuiCalendarDay__hinted\", hinted && \"vkuiCalendarDay__hintedActive\", hintedSelectionStart && \"vkuiCalendarDay__hintedSelectionStart\", hintedSelectionEnd && \"vkuiCalendarDay__hintedSelectionEnd\"),\n        children: /*#__PURE__*/_jsx(\"div\", {\n          className: classNames(\"vkuiCalendarDay__inner\", active && !disabled && \"vkuiCalendarDay__innerActive\"),\n          children: content\n        })\n      })\n    })\n  }));\n});\nCalendarDay.displayName = 'CalendarDay';","map":{"version":3,"names":["React","classNames","ENABLE_KEYBOARD_INPUT_EVENT_NAME","useConfigProvider","Tappable","VisuallyHidden","CalendarDay","memo","_param","day","today","selected","onChange","hidden","disabled","active","selectionStart","selectionEnd","focused","onEnter","onLeave","hinted","hintedSelectionStart","hintedSelectionEnd","sameMonth","size","children","renderDayContent","testId","restProps","_object_without_properties","locale","direction","ref","useRef","onClick","useCallback","handleEnter","handleLeave","label","Intl","DateTimeFormat","weekday","year","month","format","useEffect","current","dispatchEvent","Event","bubbles","focus","content","useMemo","_jsxs","className","_jsx","getDate","_object_spread_props","_object_spread","baseClassName","hoverMode","activeMode","hasActive","tabIndex","getRootRef","focusVisibleMode","onPointerEnter","onPointerLeave","displayName"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/components/CalendarDay/CalendarDay.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { ENABLE_KEYBOARD_INPUT_EVENT_NAME } from '../../hooks/useKeyboardInputTracker';\nimport { useConfigProvider } from '../ConfigProvider/ConfigProviderContext';\nimport { Tappable } from '../Tappable/Tappable';\nimport { VisuallyHidden } from '../VisuallyHidden/VisuallyHidden';\nimport styles from './CalendarDay.module.css';\n\nexport type CalendarDayElementProps = Omit<\n  React.AllHTMLAttributes<HTMLElement>,\n  'onChange' | 'size' | 'disabled' | 'selected'\n>;\n\nexport type CalendarDayTestsProps = {\n  /**\n   * Передает атрибут `data-testid` для дня в календаре\n   */\n  testId?: string | ((day: Date) => string);\n};\n\nexport interface CalendarDayProps extends CalendarDayElementProps, CalendarDayTestsProps {\n  day: Date;\n  today?: boolean;\n  selected?: boolean;\n  selectionStart?: boolean;\n  selectionEnd?: boolean;\n  hintedSelectionStart?: boolean;\n  hintedSelectionEnd?: boolean;\n  active?: boolean;\n  hidden?: boolean;\n  disabled?: boolean;\n  focused?: boolean;\n  hinted?: boolean;\n  sameMonth?: boolean;\n  size?: 's' | 'm';\n  onChange: (value: Date) => void;\n  onEnter?: (value: Date) => void;\n  onLeave?: (value: Date) => void;\n  // Функция отрисовки контента в ячейке дня\n  renderDayContent?: (day: Date) => React.ReactNode;\n}\n\nexport const CalendarDay: React.FC<CalendarDayProps> = React.memo(\n  ({\n    day,\n    today,\n    selected,\n    onChange,\n    hidden,\n    disabled,\n    active,\n    selectionStart,\n    selectionEnd,\n    focused,\n    onEnter,\n    onLeave,\n    hinted,\n    hintedSelectionStart,\n    hintedSelectionEnd,\n    sameMonth,\n    size,\n    children,\n    renderDayContent,\n    testId,\n    ...restProps\n  }: CalendarDayProps) => {\n    const { locale, direction } = useConfigProvider();\n    const ref = React.useRef<HTMLElement>(null);\n    const onClick = React.useCallback(() => onChange(day), [day, onChange]);\n    const handleEnter = React.useCallback(() => onEnter?.(day), [day, onEnter]);\n    const handleLeave = React.useCallback(() => onLeave?.(day), [day, onLeave]);\n\n    const label = new Intl.DateTimeFormat(locale, {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n    }).format(day);\n\n    React.useEffect(() => {\n      if (focused && ref.current) {\n        ref.current.dispatchEvent(new Event(ENABLE_KEYBOARD_INPUT_EVENT_NAME, { bubbles: true }));\n        ref.current.focus();\n      }\n    }, [focused]);\n\n    const content = React.useMemo(() => {\n      if (renderDayContent) {\n        return renderDayContent(day);\n      }\n      return (\n        <div className={styles.dayNumber}>\n          <VisuallyHidden>{children ?? label}</VisuallyHidden>\n          <span aria-hidden>{day.getDate()}</span>\n        </div>\n      );\n    }, [renderDayContent, day, children, label]);\n\n    if (hidden) {\n      return <div className={classNames(styles.hidden, size === 's' && styles.sizeS)} />;\n    }\n\n    return (\n      <Tappable\n        baseClassName={classNames(\n          styles.host,\n          size === 's' && styles.sizeS,\n          direction === 'rtl' && styles.rtl,\n        )}\n        hoverMode={styles.hostHovered}\n        activeMode={styles.hostActivated}\n        hasActive={false}\n        onClick={onClick}\n        disabled={disabled}\n        tabIndex={-1}\n        getRootRef={ref}\n        focusVisibleMode={active ? 'outside' : 'inside'}\n        onPointerEnter={handleEnter}\n        onPointerLeave={handleLeave}\n        data-testid={typeof testId === 'string' ? testId : testId?.(day)}\n        {...restProps}\n      >\n        <div\n          className={classNames(\n            styles.content,\n            size === 's' && styles.sizeS,\n            today && styles.today,\n            selected && !disabled && styles.selected,\n            selectionStart && styles.selectionStart,\n            selectionEnd && styles.selectionEnd,\n            disabled && styles.disabled,\n            !sameMonth && styles.notSameMonth,\n          )}\n        >\n          <div\n            className={classNames(\n              styles.hinted,\n              hinted && styles.hintedActive,\n              hintedSelectionStart && styles.hintedSelectionStart,\n              hintedSelectionEnd && styles.hintedSelectionEnd,\n            )}\n          >\n            <div className={classNames(styles.inner, active && !disabled && styles.innerActive)}>\n              {content}\n            </div>\n          </div>\n        </div>\n      </Tappable>\n    );\n  },\n);\n\nCalendarDay.displayName = 'CalendarDay';\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}