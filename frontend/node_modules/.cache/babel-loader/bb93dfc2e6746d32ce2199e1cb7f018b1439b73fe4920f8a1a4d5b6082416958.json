{"ast":null,"code":"'use client';\n\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nimport { Icon16Clear, Icon20CalendarOutline } from \"@vkontakte/icons\";\nimport { classNames } from \"@vkontakte/vkjs\";\nimport { startOfDay, startOfMinute } from \"date-fns\";\nimport { useAdaptivity } from \"../../hooks/useAdaptivity.js\";\nimport { useDateInput } from \"../../hooks/useDateInput.js\";\nimport { useExternRef } from \"../../hooks/useExternRef.js\";\nimport { callMultiple } from \"../../lib/callMultiple.js\";\nimport { format, isMatch, parse } from \"../../lib/date.js\";\nimport { useIsomorphicLayoutEffect } from \"../../lib/useIsomorphicLayoutEffect.js\";\nimport { Calendar } from \"../Calendar/Calendar.js\";\nimport { FormField } from \"../FormField/FormField.js\";\nimport { IconButton } from \"../IconButton/IconButton.js\";\nimport { InputLike } from \"../InputLike/InputLike.js\";\nimport { InputLikeDivider } from \"../InputLike/InputLikeDivider.js\";\nimport { Popper } from \"../Popper/Popper.js\";\nimport { Text } from \"../Typography/Text/Text.js\";\nimport { VisuallyHidden } from \"../VisuallyHidden/VisuallyHidden.js\";\nimport { useDateInputValue } from \"./hooks.js\";\nconst sizeYClassNames = {\n  none: \"vkuiDateInput__sizeYNone\",\n  compact: \"vkuiDateInput__sizeYCompact\"\n};\nconst elementsConfig = index => {\n  let length = 2;\n  let min = 1;\n  let max = 0;\n  switch (index) {\n    case 0:\n      max = 31;\n      break;\n    case 1:\n      max = 12;\n      break;\n    case 2:\n      max = 2100;\n      min = 1900;\n      length = 4;\n      break;\n    case 3:\n      max = 23;\n      break;\n    case 4:\n      max = 59;\n      break;\n  }\n  return {\n    length,\n    min,\n    max\n  };\n};\nconst getInternalValue = value => {\n  const newValue = ['', '', '', '', ''];\n  if (value) {\n    newValue[0] = String(value.getDate()).padStart(2, '0');\n    newValue[1] = String(value.getMonth() + 1).padStart(2, '0');\n    newValue[2] = String(value.getFullYear()).padStart(4, '0');\n    newValue[3] = String(value.getHours()).padStart(2, '0');\n    newValue[4] = String(value.getMinutes()).padStart(2, '0');\n  }\n  return newValue;\n};\n/**\n * @see https://vkcom.github.io/VKUI/#/DateInput\n */\nexport const DateInput = _param => {\n  var {\n      enableTime,\n      shouldDisableDate,\n      disableFuture,\n      disablePast,\n      minDateTime,\n      maxDateTime,\n      value: valueProp,\n      defaultValue,\n      onChange,\n      calendarPlacement: calendarPlacementProp = 'bottom-start',\n      style,\n      className,\n      doneButtonText,\n      DoneButton,\n      closeOnChange = true,\n      disablePickers,\n      getRootRef,\n      name,\n      autoFocus,\n      disabled,\n      onClick,\n      onFocus,\n      prevMonthLabel = 'Предыдущий месяц',\n      nextMonthLabel = 'Следующий месяц',\n      showNeighboringMonth,\n      size,\n      changeMonthLabel = 'Изменить месяц',\n      changeYearLabel = 'Изменить год',\n      changeDayLabel = 'Изменить день',\n      changeHoursLabel = 'Изменить час',\n      changeMinutesLabel = 'Изменить минуту',\n      clearFieldLabel = 'Очистить поле',\n      showCalendarLabel = 'Показать календарь',\n      viewDate,\n      onHeaderChange,\n      onNextMonth,\n      onPrevMonth,\n      prevMonthIcon,\n      nextMonthIcon,\n      disableCalendar = false,\n      renderDayContent,\n      onCalendarOpenChanged,\n      calendarTestsProps,\n      dayFieldTestId,\n      monthFieldTestId,\n      yearFieldTestId,\n      hourFieldTestId,\n      minuteFieldTestId,\n      id,\n      onApply,\n      renderCustomValue,\n      timezone\n    } = _param,\n    props = _object_without_properties(_param, [\"enableTime\", \"shouldDisableDate\", \"disableFuture\", \"disablePast\", \"minDateTime\", \"maxDateTime\", \"value\", \"defaultValue\", \"onChange\", \"calendarPlacement\", \"style\", \"className\", \"doneButtonText\", \"DoneButton\", \"closeOnChange\", \"disablePickers\", \"getRootRef\", \"name\", \"autoFocus\", \"disabled\", \"onClick\", \"onFocus\", \"prevMonthLabel\", \"nextMonthLabel\", \"showNeighboringMonth\", \"size\", \"changeMonthLabel\", \"changeYearLabel\", \"changeDayLabel\", \"changeHoursLabel\", \"changeMinutesLabel\", \"clearFieldLabel\", \"showCalendarLabel\", \"viewDate\", \"onHeaderChange\", \"onNextMonth\", \"onPrevMonth\", \"prevMonthIcon\", \"nextMonthIcon\", \"disableCalendar\", \"renderDayContent\", \"onCalendarOpenChanged\", \"calendarTestsProps\", \"dayFieldTestId\", \"monthFieldTestId\", \"yearFieldTestId\", \"hourFieldTestId\", \"minuteFieldTestId\", \"id\", \"onApply\", \"renderCustomValue\", \"timezone\"]);\n  const daysRef = React.useRef(null);\n  const monthsRef = React.useRef(null);\n  const yearsRef = React.useRef(null);\n  const hoursRef = React.useRef(null);\n  const minutesRef = React.useRef(null);\n  const {\n    value,\n    updateValue,\n    setInternalValue,\n    getLastUpdatedValue\n  } = useDateInputValue({\n    value: valueProp,\n    defaultValue,\n    onChange,\n    timezone\n  });\n  const maxElement = enableTime ? 4 : 2;\n  const onInternalValueChange = React.useCallback(internalValue => {\n    for (let i = 0; i <= maxElement; i += 1) {\n      if (internalValue[i].length < elementsConfig(i).length) {\n        return;\n      }\n    }\n    let formattedValue = `${internalValue[0]}.${internalValue[1]}.${internalValue[2]}`;\n    let mask = 'dd.MM.yyyy';\n    if (enableTime) {\n      formattedValue += ` ${internalValue[3]}:${internalValue[4]}`;\n      mask += ' HH:mm';\n    }\n    if (isMatch(formattedValue, mask)) {\n      const now = new Date();\n      updateValue(parse(formattedValue, mask, value !== null && value !== void 0 ? value : enableTime ? startOfMinute(now) : startOfDay(now)));\n    }\n  }, [enableTime, maxElement, updateValue, value]);\n  const refs = React.useMemo(() => [daysRef, monthsRef, yearsRef, hoursRef, minutesRef], [daysRef, monthsRef, yearsRef, hoursRef, minutesRef]);\n  const {\n    rootRef,\n    calendarRef,\n    open,\n    openCalendar,\n    internalValue,\n    handleKeyDown,\n    setFocusedElement,\n    handleFieldEnter,\n    clear,\n    removeFocusFromField\n  } = useDateInput({\n    maxElement,\n    refs,\n    autoFocus,\n    disabled,\n    elementsConfig,\n    onChange: updateValue,\n    onInternalValueChange,\n    getInternalValue,\n    value,\n    onCalendarOpenChanged\n  });\n  const {\n    sizeY = 'none'\n  } = useAdaptivity();\n  const handleRootRef = useExternRef(rootRef, getRootRef);\n  useIsomorphicLayoutEffect(function resetValueOnCloseCalendar() {\n    if (!open) {\n      setInternalValue(getLastUpdatedValue());\n    }\n  }, [open, getLastUpdatedValue]);\n  const onCalendarChange = React.useCallback(value => {\n    if (enableTime) {\n      setInternalValue(value);\n      return;\n    }\n    updateValue(value);\n    if (closeOnChange) {\n      removeFocusFromField();\n    }\n  }, [enableTime, updateValue, closeOnChange, setInternalValue, removeFocusFromField]);\n  const onDoneButtonClick = React.useCallback(() => {\n    const newValue = updateValue(value);\n    onApply === null || onApply === void 0 ? void 0 : onApply(newValue);\n    removeFocusFromField();\n  }, [onApply, removeFocusFromField, updateValue, value]);\n  const customValue = React.useMemo(() => !open && (renderCustomValue === null || renderCustomValue === void 0 ? void 0 : renderCustomValue(value)), [open, renderCustomValue, value]);\n  // при переключении месяцев высота календаря может меняться,\n  // чтобы календарь не прыгал при переключении месяцев каждый раз на\n  // лучшую позицию мы запоминаем последнюю удачную, чтобы календарь оставался\n  // на ней, пока помещается.\n  const [calendarPlacement, setCalendarPlacement] = React.useState(calendarPlacementProp);\n  return /*#__PURE__*/_jsxs(FormField, _object_spread_props(_object_spread({\n    style: style,\n    className: classNames(sizeY !== 'regular' && sizeYClassNames[sizeY], className),\n    getRootRef: handleRootRef,\n    after: value ? /*#__PURE__*/_jsx(IconButton, {\n      hoverMode: \"opacity\",\n      label: clearFieldLabel,\n      onClick: clear,\n      children: /*#__PURE__*/_jsx(Icon16Clear, {})\n    }) : /*#__PURE__*/_jsx(IconButton, {\n      hoverMode: \"opacity\",\n      label: showCalendarLabel,\n      onClick: openCalendar,\n      children: /*#__PURE__*/_jsx(Icon20CalendarOutline, {})\n    }),\n    disabled: disabled,\n    onClick: callMultiple(handleFieldEnter, onClick),\n    onFocus: callMultiple(handleFieldEnter, onFocus)\n  }, props), {\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: \"vkuiDateInput__wrapper\",\n      children: [/*#__PURE__*/_jsx(VisuallyHidden, {\n        id: id,\n        Component: \"input\",\n        name: name,\n        value: value ? format(value, enableTime ? \"dd.MM.yyyy'T'HH:mm\" : 'dd.MM.yyyy') : ''\n      }), /*#__PURE__*/_jsxs(Text, {\n        className: classNames(\"vkuiDateInput__input\", customValue && \"vkuiDateInput__hidden\"),\n        onKeyDown: handleKeyDown,\n        // Инцидент: в PR https://github.com/VKCOM/VKUI/pull/6649 стабильно ломается порядок стилей\n        // из-за чего `.Typography--normalize` перебивает стили.\n        normalize: false,\n        Component: \"span\" // для <span> нормализация не нужна\n        ,\n\n        children: [/*#__PURE__*/_jsx(InputLike, {\n          length: 2,\n          getRootRef: daysRef,\n          index: 0,\n          onElementSelect: setFocusedElement,\n          value: internalValue[0],\n          label: changeDayLabel,\n          \"data-testid\": dayFieldTestId\n        }), /*#__PURE__*/_jsx(InputLikeDivider, {\n          children: \".\"\n        }), /*#__PURE__*/_jsx(InputLike, {\n          length: 2,\n          getRootRef: monthsRef,\n          index: 1,\n          onElementSelect: setFocusedElement,\n          value: internalValue[1],\n          label: changeMonthLabel,\n          \"data-testid\": monthFieldTestId\n        }), /*#__PURE__*/_jsx(InputLikeDivider, {\n          children: \".\"\n        }), /*#__PURE__*/_jsx(InputLike, {\n          length: 4,\n          getRootRef: yearsRef,\n          index: 2,\n          onElementSelect: setFocusedElement,\n          value: internalValue[2],\n          label: changeYearLabel,\n          \"data-testid\": yearFieldTestId\n        }), enableTime && /*#__PURE__*/_jsxs(React.Fragment, {\n          children: [/*#__PURE__*/_jsx(InputLikeDivider, {\n            className: \"vkuiDateInput__inputTimeDivider\",\n            children: \" \"\n          }), /*#__PURE__*/_jsx(InputLike, {\n            length: 2,\n            getRootRef: hoursRef,\n            index: 3,\n            onElementSelect: setFocusedElement,\n            value: internalValue[3],\n            label: changeHoursLabel,\n            \"data-testid\": hourFieldTestId\n          }), /*#__PURE__*/_jsx(InputLikeDivider, {\n            children: \":\"\n          }), /*#__PURE__*/_jsx(InputLike, {\n            length: 2,\n            getRootRef: minutesRef,\n            index: 4,\n            onElementSelect: setFocusedElement,\n            value: internalValue[4],\n            label: changeMinutesLabel,\n            \"data-testid\": minuteFieldTestId\n          })]\n        })]\n      }), customValue && /*#__PURE__*/_jsx(Text, {\n        className: \"vkuiDateInput__customValue\",\n        \"aria-hidden\": true,\n        children: customValue\n      })]\n    }), open && !disableCalendar && /*#__PURE__*/_jsx(Popper, {\n      targetRef: rootRef,\n      offsetByMainAxis: 8,\n      placement: calendarPlacement,\n      onPlacementChange: setCalendarPlacement,\n      autoUpdateOnTargetResize: true,\n      children: /*#__PURE__*/_jsx(Calendar, _object_spread({\n        value: value,\n        onChange: onCalendarChange,\n        enableTime: enableTime,\n        disablePast: disablePast,\n        disableFuture: disableFuture,\n        shouldDisableDate: shouldDisableDate,\n        onDoneButtonClick: onDoneButtonClick,\n        getRootRef: calendarRef,\n        doneButtonText: doneButtonText,\n        DoneButton: DoneButton,\n        disablePickers: disablePickers,\n        changeHoursLabel: changeHoursLabel,\n        changeMinutesLabel: changeMinutesLabel,\n        prevMonthLabel: prevMonthLabel,\n        nextMonthLabel: nextMonthLabel,\n        changeMonthLabel: changeMonthLabel,\n        changeYearLabel: changeYearLabel,\n        changeDayLabel: changeDayLabel,\n        showNeighboringMonth: showNeighboringMonth,\n        renderDayContent: renderDayContent,\n        size: size,\n        viewDate: viewDate,\n        onHeaderChange: onHeaderChange,\n        onNextMonth: onNextMonth,\n        onPrevMonth: onPrevMonth,\n        prevMonthIcon: prevMonthIcon,\n        nextMonthIcon: nextMonthIcon,\n        minDateTime: minDateTime,\n        maxDateTime: maxDateTime\n      }, calendarTestsProps))\n    })]\n  }));\n};","map":{"version":3,"names":["React","Icon16Clear","Icon20CalendarOutline","classNames","startOfDay","startOfMinute","useAdaptivity","useDateInput","useExternRef","callMultiple","format","isMatch","parse","useIsomorphicLayoutEffect","Calendar","FormField","IconButton","InputLike","InputLikeDivider","Popper","Text","VisuallyHidden","useDateInputValue","sizeYClassNames","none","compact","elementsConfig","index","length","min","max","getInternalValue","value","newValue","String","getDate","padStart","getMonth","getFullYear","getHours","getMinutes","DateInput","_param","enableTime","shouldDisableDate","disableFuture","disablePast","minDateTime","maxDateTime","valueProp","defaultValue","onChange","calendarPlacement","calendarPlacementProp","style","className","doneButtonText","DoneButton","closeOnChange","disablePickers","getRootRef","name","autoFocus","disabled","onClick","onFocus","prevMonthLabel","nextMonthLabel","showNeighboringMonth","size","changeMonthLabel","changeYearLabel","changeDayLabel","changeHoursLabel","changeMinutesLabel","clearFieldLabel","showCalendarLabel","viewDate","onHeaderChange","onNextMonth","onPrevMonth","prevMonthIcon","nextMonthIcon","disableCalendar","renderDayContent","onCalendarOpenChanged","calendarTestsProps","dayFieldTestId","monthFieldTestId","yearFieldTestId","hourFieldTestId","minuteFieldTestId","id","onApply","renderCustomValue","timezone","props","_object_without_properties","daysRef","useRef","monthsRef","yearsRef","hoursRef","minutesRef","updateValue","setInternalValue","getLastUpdatedValue","maxElement","onInternalValueChange","useCallback","internalValue","i","formattedValue","mask","now","Date","refs","useMemo","rootRef","calendarRef","open","openCalendar","handleKeyDown","setFocusedElement","handleFieldEnter","clear","removeFocusFromField","sizeY","handleRootRef","resetValueOnCloseCalendar","onCalendarChange","onDoneButtonClick","customValue","setCalendarPlacement","useState","_jsxs","_object_spread_props","_object_spread","after","_jsx","hoverMode","label","Component","onKeyDown","normalize","onElementSelect","Fragment","targetRef","offsetByMainAxis","placement","onPlacementChange","autoUpdateOnTargetResize"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/components/DateInput/DateInput.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { Icon16Clear, Icon20CalendarOutline } from '@vkontakte/icons';\nimport { classNames } from '@vkontakte/vkjs';\nimport { startOfDay, startOfMinute } from 'date-fns';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\nimport { useDateInput } from '../../hooks/useDateInput';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { callMultiple } from '../../lib/callMultiple';\nimport { format, isMatch, parse } from '../../lib/date';\nimport type { PlacementWithAuto } from '../../lib/floating';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport type { HasRootRef } from '../../types';\nimport { Calendar, type CalendarProps, type CalendarTestsProps } from '../Calendar/Calendar';\nimport { FormField, type FormFieldProps } from '../FormField/FormField';\nimport { IconButton } from '../IconButton/IconButton';\nimport { InputLike } from '../InputLike/InputLike';\nimport { InputLikeDivider } from '../InputLike/InputLikeDivider';\nimport { Popper } from '../Popper/Popper';\nimport { Text } from '../Typography/Text/Text';\nimport { VisuallyHidden } from '../VisuallyHidden/VisuallyHidden';\nimport { useDateInputValue } from './hooks';\nimport '../InputLike/InputLike.module.css'; // Reorder css\nimport styles from './DateInput.module.css';\n\nconst sizeYClassNames = {\n  none: styles.sizeYNone,\n  compact: styles.sizeYCompact,\n};\n\nexport type DateInputPropsTestsProps = {\n  /**\n   * Передает атрибут `data-testid` для поля ввода дня\n   */\n  dayFieldTestId?: string;\n  /**\n   * Передает атрибут `data-testid` для поля ввода месяца\n   */\n  monthFieldTestId?: string;\n  /**\n   * Передает атрибут `data-testid` для поля ввода года\n   */\n  yearFieldTestId?: string;\n  /**\n   * Передает атрибут `data-testid` для поля ввода часа\n   */\n  hourFieldTestId?: string;\n  /**\n   * Передает атрибут `data-testid` для поля ввода минут\n   */\n  minuteFieldTestId?: string;\n};\n\nexport interface DateInputProps\n  extends Omit<\n      React.InputHTMLAttributes<HTMLDivElement>,\n      'value' | 'defaultValue' | 'onChange' | 'size'\n    >,\n    Pick<\n      CalendarProps,\n      | 'disablePast'\n      | 'disableFuture'\n      | 'enableTime'\n      | 'shouldDisableDate'\n      | 'onChange'\n      | 'value'\n      | 'defaultValue'\n      | 'doneButtonText'\n      | 'DoneButton'\n      | 'weekStartsOn'\n      | 'disablePickers'\n      | 'changeHoursLabel'\n      | 'changeMinutesLabel'\n      | 'prevMonthLabel'\n      | 'nextMonthLabel'\n      | 'changeMonthLabel'\n      | 'changeYearLabel'\n      | 'changeDayLabel'\n      | 'showNeighboringMonth'\n      | 'size'\n      | 'viewDate'\n      | 'onHeaderChange'\n      | 'onNextMonth'\n      | 'onPrevMonth'\n      | 'prevMonthIcon'\n      | 'nextMonthIcon'\n      | 'minDateTime'\n      | 'maxDateTime'\n      | 'renderDayContent'\n    >,\n    HasRootRef<HTMLDivElement>,\n    Omit<FormFieldProps, 'maxHeight'>,\n    DateInputPropsTestsProps {\n  /**\n   * Передает атрибуты `data-testid` для интерактивных элементов в календаре\n   */\n  calendarTestsProps?: CalendarTestsProps;\n  calendarPlacement?: PlacementWithAuto;\n  closeOnChange?: boolean;\n  clearFieldLabel?: string;\n  showCalendarLabel?: string;\n  disableCalendar?: boolean;\n  onCalendarOpenChanged?: (opened: boolean) => void;\n  /**\n   * Колбэк срабатывающий при нажатии на кнопку \"Done\". Используется совместно с флагом `enableTime`.\n   */\n  onApply?: (value?: Date) => void;\n  /**\n   * Функция для кастомного форматирования отображаемого значения даты.\n   * Позволяет переопределить стандартное отображение даты и вернуть собственное представление.\n   */\n  renderCustomValue?: (date: Date | undefined) => React.ReactNode;\n  /**\n   * Свойство для отображения времени в нужной таймзоне\n   */\n  timezone?: string;\n}\n\nconst elementsConfig = (index: number) => {\n  let length = 2;\n  let min = 1;\n  let max = 0;\n\n  switch (index) {\n    case 0:\n      max = 31;\n      break;\n    case 1:\n      max = 12;\n      break;\n    case 2:\n      max = 2100;\n      min = 1900;\n      length = 4;\n      break;\n    case 3:\n      max = 23;\n      break;\n    case 4:\n      max = 59;\n      break;\n  }\n\n  return { length, min, max };\n};\n\nconst getInternalValue = (value: CalendarProps['value']) => {\n  const newValue = ['', '', '', '', ''];\n  if (value) {\n    newValue[0] = String(value.getDate()).padStart(2, '0');\n    newValue[1] = String(value.getMonth() + 1).padStart(2, '0');\n    newValue[2] = String(value.getFullYear()).padStart(4, '0');\n    newValue[3] = String(value.getHours()).padStart(2, '0');\n    newValue[4] = String(value.getMinutes()).padStart(2, '0');\n  }\n  return newValue;\n};\n\n/**\n * @see https://vkcom.github.io/VKUI/#/DateInput\n */\nexport const DateInput = ({\n  enableTime,\n  shouldDisableDate,\n  disableFuture,\n  disablePast,\n  minDateTime,\n  maxDateTime,\n  value: valueProp,\n  defaultValue,\n  onChange,\n  calendarPlacement: calendarPlacementProp = 'bottom-start',\n  style,\n  className,\n  doneButtonText,\n  DoneButton,\n  closeOnChange = true,\n  disablePickers,\n  getRootRef,\n  name,\n  autoFocus,\n  disabled,\n  onClick,\n  onFocus,\n  prevMonthLabel = 'Предыдущий месяц',\n  nextMonthLabel = 'Следующий месяц',\n  showNeighboringMonth,\n  size,\n  changeMonthLabel = 'Изменить месяц',\n  changeYearLabel = 'Изменить год',\n  changeDayLabel = 'Изменить день',\n  changeHoursLabel = 'Изменить час',\n  changeMinutesLabel = 'Изменить минуту',\n  clearFieldLabel = 'Очистить поле',\n  showCalendarLabel = 'Показать календарь',\n  viewDate,\n  onHeaderChange,\n  onNextMonth,\n  onPrevMonth,\n  prevMonthIcon,\n  nextMonthIcon,\n  disableCalendar = false,\n  renderDayContent,\n  onCalendarOpenChanged,\n  calendarTestsProps,\n  dayFieldTestId,\n  monthFieldTestId,\n  yearFieldTestId,\n  hourFieldTestId,\n  minuteFieldTestId,\n  id,\n  onApply,\n  renderCustomValue,\n  timezone,\n  ...props\n}: DateInputProps): React.ReactNode => {\n  const daysRef = React.useRef<HTMLSpanElement>(null);\n  const monthsRef = React.useRef<HTMLSpanElement>(null);\n  const yearsRef = React.useRef<HTMLSpanElement>(null);\n  const hoursRef = React.useRef<HTMLSpanElement>(null);\n  const minutesRef = React.useRef<HTMLSpanElement>(null);\n\n  const { value, updateValue, setInternalValue, getLastUpdatedValue } = useDateInputValue({\n    value: valueProp,\n    defaultValue,\n    onChange,\n    timezone,\n  });\n\n  const maxElement = enableTime ? 4 : 2;\n\n  const onInternalValueChange = React.useCallback(\n    (internalValue: string[]) => {\n      for (let i = 0; i <= maxElement; i += 1) {\n        if (internalValue[i].length < elementsConfig(i).length) {\n          return;\n        }\n      }\n\n      let formattedValue = `${internalValue[0]}.${internalValue[1]}.${internalValue[2]}`;\n      let mask = 'dd.MM.yyyy';\n      if (enableTime) {\n        formattedValue += ` ${internalValue[3]}:${internalValue[4]}`;\n        mask += ' HH:mm';\n      }\n\n      if (isMatch(formattedValue, mask)) {\n        const now = new Date();\n        updateValue(\n          parse(formattedValue, mask, value ?? (enableTime ? startOfMinute(now) : startOfDay(now))),\n        );\n      }\n    },\n    [enableTime, maxElement, updateValue, value],\n  );\n\n  const refs = React.useMemo(\n    () => [daysRef, monthsRef, yearsRef, hoursRef, minutesRef],\n    [daysRef, monthsRef, yearsRef, hoursRef, minutesRef],\n  );\n\n  const {\n    rootRef,\n    calendarRef,\n    open,\n    openCalendar,\n    internalValue,\n    handleKeyDown,\n    setFocusedElement,\n    handleFieldEnter,\n    clear,\n    removeFocusFromField,\n  } = useDateInput({\n    maxElement,\n    refs,\n    autoFocus,\n    disabled,\n    elementsConfig,\n    onChange: updateValue,\n    onInternalValueChange,\n    getInternalValue,\n    value,\n    onCalendarOpenChanged,\n  });\n\n  const { sizeY = 'none' } = useAdaptivity();\n\n  const handleRootRef = useExternRef(rootRef, getRootRef);\n\n  useIsomorphicLayoutEffect(\n    function resetValueOnCloseCalendar() {\n      if (!open) {\n        setInternalValue(getLastUpdatedValue());\n      }\n    },\n    [open, getLastUpdatedValue],\n  );\n\n  const onCalendarChange = React.useCallback(\n    (value?: Date | undefined) => {\n      if (enableTime) {\n        setInternalValue(value);\n        return;\n      }\n      updateValue(value);\n      if (closeOnChange) {\n        removeFocusFromField();\n      }\n    },\n    [enableTime, updateValue, closeOnChange, setInternalValue, removeFocusFromField],\n  );\n\n  const onDoneButtonClick = React.useCallback(() => {\n    const newValue = updateValue(value);\n    onApply?.(newValue);\n    removeFocusFromField();\n  }, [onApply, removeFocusFromField, updateValue, value]);\n\n  const customValue = React.useMemo(\n    () => !open && renderCustomValue?.(value),\n    [open, renderCustomValue, value],\n  );\n\n  // при переключении месяцев высота календаря может меняться,\n  // чтобы календарь не прыгал при переключении месяцев каждый раз на\n  // лучшую позицию мы запоминаем последнюю удачную, чтобы календарь оставался\n  // на ней, пока помещается.\n  const [calendarPlacement, setCalendarPlacement] =\n    React.useState<PlacementWithAuto>(calendarPlacementProp);\n\n  return (\n    <FormField\n      style={style}\n      className={classNames(sizeY !== 'regular' && sizeYClassNames[sizeY], className)}\n      getRootRef={handleRootRef}\n      after={\n        value ? (\n          <IconButton hoverMode=\"opacity\" label={clearFieldLabel} onClick={clear}>\n            <Icon16Clear />\n          </IconButton>\n        ) : (\n          <IconButton hoverMode=\"opacity\" label={showCalendarLabel} onClick={openCalendar}>\n            <Icon20CalendarOutline />\n          </IconButton>\n        )\n      }\n      disabled={disabled}\n      onClick={callMultiple(handleFieldEnter, onClick)}\n      onFocus={callMultiple(handleFieldEnter, onFocus)}\n      {...props}\n    >\n      <div className={styles.wrapper}>\n        <VisuallyHidden\n          id={id}\n          Component=\"input\"\n          name={name}\n          value={value ? format(value, enableTime ? \"dd.MM.yyyy'T'HH:mm\" : 'dd.MM.yyyy') : ''}\n        />\n        <Text\n          className={classNames(styles.input, customValue && styles.hidden)}\n          onKeyDown={handleKeyDown}\n          // Инцидент: в PR https://github.com/VKCOM/VKUI/pull/6649 стабильно ломается порядок стилей\n          // из-за чего `.Typography--normalize` перебивает стили.\n          normalize={false}\n          Component=\"span\" // для <span> нормализация не нужна\n        >\n          <InputLike\n            length={2}\n            getRootRef={daysRef}\n            index={0}\n            onElementSelect={setFocusedElement}\n            value={internalValue[0]}\n            label={changeDayLabel}\n            data-testid={dayFieldTestId}\n          />\n          <InputLikeDivider>.</InputLikeDivider>\n          <InputLike\n            length={2}\n            getRootRef={monthsRef}\n            index={1}\n            onElementSelect={setFocusedElement}\n            value={internalValue[1]}\n            label={changeMonthLabel}\n            data-testid={monthFieldTestId}\n          />\n          <InputLikeDivider>.</InputLikeDivider>\n          <InputLike\n            length={4}\n            getRootRef={yearsRef}\n            index={2}\n            onElementSelect={setFocusedElement}\n            value={internalValue[2]}\n            label={changeYearLabel}\n            data-testid={yearFieldTestId}\n          />\n          {enableTime && (\n            <React.Fragment>\n              <InputLikeDivider className={styles.inputTimeDivider}> </InputLikeDivider>\n              <InputLike\n                length={2}\n                getRootRef={hoursRef}\n                index={3}\n                onElementSelect={setFocusedElement}\n                value={internalValue[3]}\n                label={changeHoursLabel}\n                data-testid={hourFieldTestId}\n              />\n              <InputLikeDivider>:</InputLikeDivider>\n              <InputLike\n                length={2}\n                getRootRef={minutesRef}\n                index={4}\n                onElementSelect={setFocusedElement}\n                value={internalValue[4]}\n                label={changeMinutesLabel}\n                data-testid={minuteFieldTestId}\n              />\n            </React.Fragment>\n          )}\n        </Text>\n        {customValue && (\n          <Text className={styles.customValue} aria-hidden>\n            {customValue}\n          </Text>\n        )}\n      </div>\n      {open && !disableCalendar && (\n        <Popper\n          targetRef={rootRef}\n          offsetByMainAxis={8}\n          placement={calendarPlacement}\n          onPlacementChange={setCalendarPlacement}\n          autoUpdateOnTargetResize\n        >\n          <Calendar\n            value={value}\n            onChange={onCalendarChange}\n            enableTime={enableTime}\n            disablePast={disablePast}\n            disableFuture={disableFuture}\n            shouldDisableDate={shouldDisableDate}\n            onDoneButtonClick={onDoneButtonClick}\n            getRootRef={calendarRef}\n            doneButtonText={doneButtonText}\n            DoneButton={DoneButton}\n            disablePickers={disablePickers}\n            changeHoursLabel={changeHoursLabel}\n            changeMinutesLabel={changeMinutesLabel}\n            prevMonthLabel={prevMonthLabel}\n            nextMonthLabel={nextMonthLabel}\n            changeMonthLabel={changeMonthLabel}\n            changeYearLabel={changeYearLabel}\n            changeDayLabel={changeDayLabel}\n            showNeighboringMonth={showNeighboringMonth}\n            renderDayContent={renderDayContent}\n            size={size}\n            viewDate={viewDate}\n            onHeaderChange={onHeaderChange}\n            onNextMonth={onNextMonth}\n            onPrevMonth={onPrevMonth}\n            prevMonthIcon={prevMonthIcon}\n            nextMonthIcon={nextMonthIcon}\n            minDateTime={minDateTime}\n            maxDateTime={maxDateTime}\n            {...calendarTestsProps}\n          />\n        </Popper>\n      )}\n    </FormField>\n  );\n};\n"],"mappings":"AAAA;;;;;;AAEA,YAAYA,KAAA,MAAW;AACvB,SAASC,WAAW,EAAEC,qBAAqB,QAAQ;AACnD,SAASC,UAAU,QAAQ;AAC3B,SAASC,UAAU,EAAEC,aAAa,QAAQ;AAC1C,SAASC,aAAa,QAAQ;AAC9B,SAASC,YAAY,QAAQ;AAC7B,SAASC,YAAY,QAAQ;AAC7B,SAASC,YAAY,QAAQ;AAC7B,SAASC,MAAM,EAAEC,OAAO,EAAEC,KAAK,QAAQ;AAEvC,SAASC,yBAAyB,QAAQ;AAE1C,SAASC,QAAQ,QAAqD;AACtE,SAASC,SAAS,QAA6B;AAC/C,SAASC,UAAU,QAAQ;AAC3B,SAASC,SAAS,QAAQ;AAC1B,SAASC,gBAAgB,QAAQ;AACjC,SAASC,MAAM,QAAQ;AACvB,SAASC,IAAI,QAAQ;AACrB,SAASC,cAAc,QAAQ;AAC/B,SAASC,iBAAiB,QAAQ;AAIlC,MAAMC,eAAA,GAAkB;EACtBC,IAAI;EACJC,OAAO;AACT;AA0FA,MAAMC,cAAA,GAAkBC,KAAA;EACtB,IAAIC,MAAA,GAAS;EACb,IAAIC,GAAA,GAAM;EACV,IAAIC,GAAA,GAAM;EAEV,QAAQH,KAAA;IACN,KAAK;MACHG,GAAA,GAAM;MACN;IACF,KAAK;MACHA,GAAA,GAAM;MACN;IACF,KAAK;MACHA,GAAA,GAAM;MACND,GAAA,GAAM;MACND,MAAA,GAAS;MACT;IACF,KAAK;MACHE,GAAA,GAAM;MACN;IACF,KAAK;MACHA,GAAA,GAAM;MACN;EACJ;EAEA,OAAO;IAAEF,MAAA;IAAQC,GAAA;IAAKC;EAAI;AAC5B;AAEA,MAAMC,gBAAA,GAAoBC,KAAA;EACxB,MAAMC,QAAA,GAAW,CAAC,IAAI,IAAI,IAAI,IAAI,GAAG;EACrC,IAAID,KAAA,EAAO;IACTC,QAAQ,CAAC,EAAE,GAAGC,MAAA,CAAOF,KAAA,CAAMG,OAAO,IAAIC,QAAQ,CAAC,GAAG;IAClDH,QAAQ,CAAC,EAAE,GAAGC,MAAA,CAAOF,KAAA,CAAMK,QAAQ,KAAK,GAAGD,QAAQ,CAAC,GAAG;IACvDH,QAAQ,CAAC,EAAE,GAAGC,MAAA,CAAOF,KAAA,CAAMM,WAAW,IAAIF,QAAQ,CAAC,GAAG;IACtDH,QAAQ,CAAC,EAAE,GAAGC,MAAA,CAAOF,KAAA,CAAMO,QAAQ,IAAIH,QAAQ,CAAC,GAAG;IACnDH,QAAQ,CAAC,EAAE,GAAGC,MAAA,CAAOF,KAAA,CAAMQ,UAAU,IAAIJ,QAAQ,CAAC,GAAG;EACvD;EACA,OAAOH,QAAA;AACT;AAEA;;;AAGA,OAAO,MAAMQ,SAAA,GAAYC,MAAA;MAAC;MACxBC,UAAU;MACVC,iBAAiB;MACjBC,aAAa;MACbC,WAAW;MACXC,WAAW;MACXC,WAAW;MACXhB,KAAA,EAAOiB,SAAS;MAChBC,YAAY;MACZC,QAAQ;MACRC,iBAAA,EAAmBC,qBAAA,GAAwB,cAAc;MACzDC,KAAK;MACLC,SAAS;MACTC,cAAc;MACdC,UAAU;MACVC,aAAA,GAAgB,IAAI;MACpBC,cAAc;MACdC,UAAU;MACVC,IAAI;MACJC,SAAS;MACTC,QAAQ;MACRC,OAAO;MACPC,OAAO;MACPC,cAAA,GAAiB,kBAAkB;MACnCC,cAAA,GAAiB,iBAAiB;MAClCC,oBAAoB;MACpBC,IAAI;MACJC,gBAAA,GAAmB,gBAAgB;MACnCC,eAAA,GAAkB,cAAc;MAChCC,cAAA,GAAiB,eAAe;MAChCC,gBAAA,GAAmB,cAAc;MACjCC,kBAAA,GAAqB,iBAAiB;MACtCC,eAAA,GAAkB,eAAe;MACjCC,iBAAA,GAAoB,oBAAoB;MACxCC,QAAQ;MACRC,cAAc;MACdC,WAAW;MACXC,WAAW;MACXC,aAAa;MACbC,aAAa;MACbC,eAAA,GAAkB,KAAK;MACvBC,gBAAgB;MAChBC,qBAAqB;MACrBC,kBAAkB;MAClBC,cAAc;MACdC,gBAAgB;MAChBC,eAAe;MACfC,eAAe;MACfC,iBAAiB;MACjBC,EAAE;MACFC,OAAO;MACPC,iBAAiB;MACjBC;IAAQ,CAEO,GAAArD,MAAA;IADZsD,KAAA,GAAAC,0BAAA,CAAAvD,MAAA,GApDH,cACA,qBACA,iBACA,eACA,eACA,eACA,SACA,gBACA,YACA,qBACA,SACA,aACA,kBACA,cACA,iBACA,kBACA,cACA,QACA,aACA,YACA,WACA,WACA,kBACA,kBACA,wBACA,QACA,oBACA,mBACA,kBACA,oBACA,sBACA,mBACA,qBACA,YACA,kBACA,eACA,eACA,iBACA,iBACA,mBACA,oBACA,yBACA,sBACA,kBACA,oBACA,mBACA,mBACA,qBACA,MACA,WACA,qBACA,W;EAGA,MAAMwD,OAAA,GAAUlG,KAAA,CAAMmG,MAAM,CAAkB;EAC9C,MAAMC,SAAA,GAAYpG,KAAA,CAAMmG,MAAM,CAAkB;EAChD,MAAME,QAAA,GAAWrG,KAAA,CAAMmG,MAAM,CAAkB;EAC/C,MAAMG,QAAA,GAAWtG,KAAA,CAAMmG,MAAM,CAAkB;EAC/C,MAAMI,UAAA,GAAavG,KAAA,CAAMmG,MAAM,CAAkB;EAEjD,MAAM;IAAEnE,KAAK;IAAEwE,WAAW;IAAEC,gBAAgB;IAAEC;EAAmB,CAAE,GAAGpF,iBAAA,CAAkB;IACtFU,KAAA,EAAOiB,SAAA;IACPC,YAAA;IACAC,QAAA;IACA4C;EACF;EAEA,MAAMY,UAAA,GAAahE,UAAA,GAAa,IAAI;EAEpC,MAAMiE,qBAAA,GAAwB5G,KAAA,CAAM6G,WAAW,CAC5CC,aAAA;IACC,KAAK,IAAIC,CAAA,GAAI,GAAGA,CAAA,IAAKJ,UAAA,EAAYI,CAAA,IAAK,GAAG;MACvC,IAAID,aAAa,CAACC,CAAA,CAAE,CAACnF,MAAM,GAAGF,cAAA,CAAeqF,CAAA,EAAGnF,MAAM,EAAE;QACtD;MACF;IACF;IAEA,IAAIoF,cAAA,GAAiB,GAAGF,aAAa,CAAC,EAAE,IAAIA,aAAa,CAAC,EAAE,IAAIA,aAAa,CAAC,EAAE,EAAE;IAClF,IAAIG,IAAA,GAAO;IACX,IAAItE,UAAA,EAAY;MACdqE,cAAA,IAAkB,IAAIF,aAAa,CAAC,EAAE,IAAIA,aAAa,CAAC,EAAE,EAAE;MAC5DG,IAAA,IAAQ;IACV;IAEA,IAAItG,OAAA,CAAQqG,cAAA,EAAgBC,IAAA,GAAO;MACjC,MAAMC,GAAA,GAAM,IAAIC,IAAA;MAChBX,WAAA,CACE5F,KAAA,CAAMoG,cAAA,EAAgBC,IAAA,EAAMjF,KAAA,aAAAA,KAAA,cAAAA,KAAA,GAAUW,UAAA,GAAatC,aAAA,CAAc6G,GAAA,IAAO9G,UAAA,CAAW8G,GAAA;IAEvF;EACF,GACA,CAACvE,UAAA,EAAYgE,UAAA,EAAYH,WAAA,EAAaxE,KAAA,CAAM;EAG9C,MAAMoF,IAAA,GAAOpH,KAAA,CAAMqH,OAAO,CACxB,MAAM,CAACnB,OAAA,EAASE,SAAA,EAAWC,QAAA,EAAUC,QAAA,EAAUC,UAAA,CAAW,EAC1D,CAACL,OAAA,EAASE,SAAA,EAAWC,QAAA,EAAUC,QAAA,EAAUC,UAAA,CAAW;EAGtD,MAAM;IACJe,OAAO;IACPC,WAAW;IACXC,IAAI;IACJC,YAAY;IACZX,aAAa;IACbY,aAAa;IACbC,iBAAiB;IACjBC,gBAAgB;IAChBC,KAAK;IACLC;EAAoB,CACrB,GAAGvH,YAAA,CAAa;IACfoG,UAAA;IACAS,IAAA;IACAtD,SAAA;IACAC,QAAA;IACArC,cAAA;IACAyB,QAAA,EAAUqD,WAAA;IACVI,qBAAA;IACA7E,gBAAA;IACAC,KAAA;IACAqD;EACF;EAEA,MAAM;IAAE0C,KAAA,GAAQ;EAAM,CAAE,GAAGzH,aAAA;EAE3B,MAAM0H,aAAA,GAAgBxH,YAAA,CAAa8G,OAAA,EAAS1D,UAAA;EAE5C/C,yBAAA,CACE,SAASoH,0BAAA;IACP,IAAI,CAACT,IAAA,EAAM;MACTf,gBAAA,CAAiBC,mBAAA;IACnB;EACF,GACA,CAACc,IAAA,EAAMd,mBAAA,CAAoB;EAG7B,MAAMwB,gBAAA,GAAmBlI,KAAA,CAAM6G,WAAW,CACvC7E,KAAA;IACC,IAAIW,UAAA,EAAY;MACd8D,gBAAA,CAAiBzE,KAAA;MACjB;IACF;IACAwE,WAAA,CAAYxE,KAAA;IACZ,IAAI0B,aAAA,EAAe;MACjBoE,oBAAA;IACF;EACF,GACA,CAACnF,UAAA,EAAY6D,WAAA,EAAa9C,aAAA,EAAe+C,gBAAA,EAAkBqB,oBAAA,CAAqB;EAGlF,MAAMK,iBAAA,GAAoBnI,KAAA,CAAM6G,WAAW,CAAC;IAC1C,MAAM5E,QAAA,GAAWuE,WAAA,CAAYxE,KAAA;IAC7B6D,OAAA,aAAAA,OAAA,uBAAAA,OAAA,CAAU5D,QAAA;IACV6F,oBAAA;EACF,GAAG,CAACjC,OAAA,EAASiC,oBAAA,EAAsBtB,WAAA,EAAaxE,KAAA,CAAM;EAEtD,MAAMoG,WAAA,GAAcpI,KAAA,CAAMqH,OAAO,CAC/B,MAAM,CAACG,IAAA,KAAQ1B,iBAAA,aAAAA,iBAAA,uBAAAA,iBAAA,CAAoB9D,KAAA,IACnC,CAACwF,IAAA,EAAM1B,iBAAA,EAAmB9D,KAAA,CAAM;EAGlC;EACA;EACA;EACA;EACA,MAAM,CAACoB,iBAAA,EAAmBiF,oBAAA,CAAqB,GAC7CrI,KAAA,CAAMsI,QAAQ,CAAoBjF,qBAAA;EAEpC,oBACEkF,KAAA,CAACxH,SAAA,EAAAyH,oBAAA,CAAAC,cAAA;IACCnF,KAAA,EAAOA,KAAA;IACPC,SAAA,EAAWpD,UAAA,CAAW4H,KAAA,KAAU,aAAaxG,eAAe,CAACwG,KAAA,CAAM,EAAExE,SAAA;IACrEK,UAAA,EAAYoE,aAAA;IACZU,KAAA,EACE1G,KAAA,gBACE2G,IAAA,CAAC3H,UAAA;MAAW4H,SAAA,EAAU;MAAUC,KAAA,EAAOlE,eAAA;MAAiBX,OAAA,EAAS6D,KAAA;gBAC/D,aAAAc,IAAA,CAAC1I,WAAA;sBAGH0I,IAAA,CAAC3H,UAAA;MAAW4H,SAAA,EAAU;MAAUC,KAAA,EAAOjE,iBAAA;MAAmBZ,OAAA,EAASyD,YAAA;gBACjE,aAAAkB,IAAA,CAACzI,qBAAA;;IAIP6D,QAAA,EAAUA,QAAA;IACVC,OAAA,EAASvD,YAAA,CAAamH,gBAAA,EAAkB5D,OAAA;IACxCC,OAAA,EAASxD,YAAA,CAAamH,gBAAA,EAAkB3D,OAAA;KACpC+B,KAAA;4BAEJuC,KAAA,CAAC;MAAIhF,SAAS;8BACZoF,IAAA,CAACtH,cAAA;QACCuE,EAAA,EAAIA,EAAA;QACJkD,SAAA,EAAU;QACVjF,IAAA,EAAMA,IAAA;QACN7B,KAAA,EAAOA,KAAA,GAAQtB,MAAA,CAAOsB,KAAA,EAAOW,UAAA,GAAa,uBAAuB,gBAAgB;uBAEnF4F,KAAA,CAACnH,IAAA;QACCmC,SAAA,EAAWpD,UAAA,yBAAyBiI,WAAA;QACpCW,SAAA,EAAWrB,aAAA;QACX;QACA;QACAsB,SAAA,EAAW;QACXF,SAAA,EAAU,OAAO;QAAA;;gCAEjBH,IAAA,CAAC1H,SAAA;UACCW,MAAA,EAAQ;UACRgC,UAAA,EAAYsC,OAAA;UACZvE,KAAA,EAAO;UACPsH,eAAA,EAAiBtB,iBAAA;UACjB3F,KAAA,EAAO8E,aAAa,CAAC,EAAE;UACvB+B,KAAA,EAAOrE,cAAA;UACP,eAAae;yBAEfoD,IAAA,CAACzH,gBAAA;oBAAiB;yBAClByH,IAAA,CAAC1H,SAAA;UACCW,MAAA,EAAQ;UACRgC,UAAA,EAAYwC,SAAA;UACZzE,KAAA,EAAO;UACPsH,eAAA,EAAiBtB,iBAAA;UACjB3F,KAAA,EAAO8E,aAAa,CAAC,EAAE;UACvB+B,KAAA,EAAOvE,gBAAA;UACP,eAAakB;yBAEfmD,IAAA,CAACzH,gBAAA;oBAAiB;yBAClByH,IAAA,CAAC1H,SAAA;UACCW,MAAA,EAAQ;UACRgC,UAAA,EAAYyC,QAAA;UACZ1E,KAAA,EAAO;UACPsH,eAAA,EAAiBtB,iBAAA;UACjB3F,KAAA,EAAO8E,aAAa,CAAC,EAAE;UACvB+B,KAAA,EAAOtE,eAAA;UACP,eAAakB;YAEd9C,UAAA,iBACC4F,KAAA,CAACvI,KAAA,CAAMkJ,QAAQ;kCACbP,IAAA,CAACzH,gBAAA;YAAiBqC,SAAS;sBAA2B;2BACtDoF,IAAA,CAAC1H,SAAA;YACCW,MAAA,EAAQ;YACRgC,UAAA,EAAY0C,QAAA;YACZ3E,KAAA,EAAO;YACPsH,eAAA,EAAiBtB,iBAAA;YACjB3F,KAAA,EAAO8E,aAAa,CAAC,EAAE;YACvB+B,KAAA,EAAOpE,gBAAA;YACP,eAAaiB;2BAEfiD,IAAA,CAACzH,gBAAA;sBAAiB;2BAClByH,IAAA,CAAC1H,SAAA;YACCW,MAAA,EAAQ;YACRgC,UAAA,EAAY2C,UAAA;YACZ5E,KAAA,EAAO;YACPsH,eAAA,EAAiBtB,iBAAA;YACjB3F,KAAA,EAAO8E,aAAa,CAAC,EAAE;YACvB+B,KAAA,EAAOnE,kBAAA;YACP,eAAaiB;;;UAKpByC,WAAA,iBACCO,IAAA,CAACvH,IAAA;QAAKmC,SAAS;QAAsB,aAAW;kBAC7C6E;;QAINZ,IAAA,IAAQ,CAACrC,eAAA,iBACRwD,IAAA,CAACxH,MAAA;MACCgI,SAAA,EAAW7B,OAAA;MACX8B,gBAAA,EAAkB;MAClBC,SAAA,EAAWjG,iBAAA;MACXkG,iBAAA,EAAmBjB,oBAAA;MACnBkB,wBAAwB;gBAExB,aAAAZ,IAAA,CAAC7H,QAAA,EAAA2H,cAAA;QACCzG,KAAA,EAAOA,KAAA;QACPmB,QAAA,EAAU+E,gBAAA;QACVvF,UAAA,EAAYA,UAAA;QACZG,WAAA,EAAaA,WAAA;QACbD,aAAA,EAAeA,aAAA;QACfD,iBAAA,EAAmBA,iBAAA;QACnBuF,iBAAA,EAAmBA,iBAAA;QACnBvE,UAAA,EAAY2D,WAAA;QACZ/D,cAAA,EAAgBA,cAAA;QAChBC,UAAA,EAAYA,UAAA;QACZE,cAAA,EAAgBA,cAAA;QAChBc,gBAAA,EAAkBA,gBAAA;QAClBC,kBAAA,EAAoBA,kBAAA;QACpBR,cAAA,EAAgBA,cAAA;QAChBC,cAAA,EAAgBA,cAAA;QAChBG,gBAAA,EAAkBA,gBAAA;QAClBC,eAAA,EAAiBA,eAAA;QACjBC,cAAA,EAAgBA,cAAA;QAChBJ,oBAAA,EAAsBA,oBAAA;QACtBgB,gBAAA,EAAkBA,gBAAA;QAClBf,IAAA,EAAMA,IAAA;QACNQ,QAAA,EAAUA,QAAA;QACVC,cAAA,EAAgBA,cAAA;QAChBC,WAAA,EAAaA,WAAA;QACbC,WAAA,EAAaA,WAAA;QACbC,aAAA,EAAeA,aAAA;QACfC,aAAA,EAAeA,aAAA;QACfnC,WAAA,EAAaA,WAAA;QACbC,WAAA,EAAaA;SACTsC,kBAAA;;;AAMhB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}