{"ast":null,"code":"import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport * as React from \"react\";\nimport { useMemo } from \"react\";\nimport { useFloatingMiddlewaresBootstrap, useFloatingWithInteractions, usePlacementChangeCallback } from \"../lib/floating/index.js\";\nimport { useReferenceHiddenChangeCallback } from \"../lib/floating/useReferenceHiddenChangeCallback.js\";\nimport { useExternRef } from \"./useExternRef.js\";\nimport { useGlobalEscKeyDown } from \"./useGlobalEscKeyDown.js\";\nexport const useFloatingElement = _ref => {\n  let {\n    // useFloatingMiddlewaresBootstrap\n    placement = 'bottom-start',\n    arrow,\n    arrowHeight,\n    arrowPadding,\n    sameWidth,\n    offsetByMainAxis = 0,\n    offsetByCrossAxis = 0,\n    customMiddlewares,\n    hideWhenReferenceHidden,\n    disableFlipMiddleware = false,\n    // useFloatingWithInteractions\n    trigger,\n    hoverDelay,\n    closeAfterClick,\n    disabled,\n    disableInteractive,\n    disableCloseOnClickOutside,\n    disableCloseOnEscKey,\n    defaultShown,\n    shown: shownProp,\n    onShownChange,\n    onShownChanged,\n    strategy,\n    onReferenceHiddenChange,\n    onPlacementChange,\n    renderFloatingComponent,\n    externalFloatingElementRef,\n    remapReferenceProps\n  } = _ref;\n  const [arrowRef, setArrowRef] = React.useState(null);\n  const {\n    middlewares,\n    strictPlacement\n  } = useFloatingMiddlewaresBootstrap({\n    placement,\n    offsetByMainAxis,\n    offsetByCrossAxis,\n    customMiddlewares,\n    hideWhenReferenceHidden,\n    sameWidth,\n    arrow,\n    arrowRef,\n    arrowPadding,\n    arrowHeight,\n    disableFlipMiddleware\n  });\n  const {\n    placement: resolvedPlacement,\n    shown,\n    willBeHide,\n    refs,\n    referenceProps,\n    floatingProps,\n    middlewareData,\n    onClose,\n    onRestoreFocus,\n    onEscapeKeyDown\n  } = useFloatingWithInteractions({\n    middlewares,\n    strategy,\n    placement: strictPlacement,\n    trigger,\n    hoverDelay,\n    closeAfterClick,\n    disabled,\n    disableInteractive,\n    disableCloseOnClickOutside,\n    disableCloseOnEscKey,\n    defaultShown,\n    shown: shownProp,\n    onShownChange,\n    onShownChanged\n  });\n  const resultRef = useExternRef(externalFloatingElementRef, refs.setFloating);\n  usePlacementChangeCallback(placement, resolvedPlacement, onPlacementChange);\n  useReferenceHiddenChangeCallback(middlewareData.hide, onReferenceHiddenChange);\n  const component = renderFloatingComponent({\n    shown,\n    willBeHide,\n    floatingProps,\n    floatingRef: resultRef,\n    middlewareData,\n    placement: resolvedPlacement,\n    onClose,\n    onRestoreFocus,\n    setArrowRef\n  });\n  useGlobalEscKeyDown(shown, onEscapeKeyDown);\n  const remappedReferenceProps = useMemo(() => remapReferenceProps ? remapReferenceProps(_object_spread_props(_object_spread({}, referenceProps), {\n    shown\n  })) : referenceProps, [remapReferenceProps, shown, referenceProps]);\n  return {\n    anchorRef: refs.setReference,\n    anchorProps: remappedReferenceProps,\n    component\n  };\n};","map":{"version":3,"names":["React","useMemo","useFloatingMiddlewaresBootstrap","useFloatingWithInteractions","usePlacementChangeCallback","useReferenceHiddenChangeCallback","useExternRef","useGlobalEscKeyDown","useFloatingElement","_ref","placement","arrow","arrowHeight","arrowPadding","sameWidth","offsetByMainAxis","offsetByCrossAxis","customMiddlewares","hideWhenReferenceHidden","disableFlipMiddleware","trigger","hoverDelay","closeAfterClick","disabled","disableInteractive","disableCloseOnClickOutside","disableCloseOnEscKey","defaultShown","shown","shownProp","onShownChange","onShownChanged","strategy","onReferenceHiddenChange","onPlacementChange","renderFloatingComponent","externalFloatingElementRef","remapReferenceProps","arrowRef","setArrowRef","useState","middlewares","strictPlacement","resolvedPlacement","willBeHide","refs","referenceProps","floatingProps","middlewareData","onClose","onRestoreFocus","onEscapeKeyDown","resultRef","setFloating","hide","component","floatingRef","remappedReferenceProps","_object_spread_props","_object_spread","anchorRef","setReference","anchorProps"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/hooks/useFloatingElement.tsx"],"sourcesContent":["import * as React from 'react';\nimport { type Ref, useMemo } from 'react';\nimport {\n  type OnPlacementChange,\n  useFloatingMiddlewaresBootstrap,\n  type UseFloatingMiddlewaresBootstrapOptions,\n  useFloatingWithInteractions,\n  type UseFloatingWithInteractionsProps,\n  type UseFloatingWithInteractionsReturn,\n  usePlacementChangeCallback,\n} from '../lib/floating';\nimport { type ReferenceProps } from '../lib/floating/useFloatingWithInteractions/types';\nimport { useReferenceHiddenChangeCallback } from '../lib/floating/useReferenceHiddenChangeCallback';\nimport { useExternRef } from './useExternRef';\nimport { useGlobalEscKeyDown } from './useGlobalEscKeyDown';\n\nexport type FloatingComponentProps<FloatingElement extends HTMLElement = HTMLElement> = Pick<\n  UseFloatingWithInteractionsReturn,\n  | 'shown'\n  | 'willBeHide'\n  | 'floatingProps'\n  | 'middlewareData'\n  | 'onClose'\n  | 'onRestoreFocus'\n  | 'placement'\n> & {\n  floatingRef: React.Ref<FloatingElement>;\n  setArrowRef: React.Dispatch<React.SetStateAction<HTMLDivElement | null>>;\n};\n\nexport type RenderFloatingComponentFn<FloatingElement extends HTMLElement = HTMLElement> = (\n  props: FloatingComponentProps<FloatingElement>,\n) => React.ReactNode | null;\n\nexport type RemapReferencePropsFn<ReferenceElement extends HTMLElement = HTMLElement> = (\n  props: ReferenceProps<ReferenceElement> & { shown: boolean },\n) => ReferenceProps<ReferenceElement>;\n\nexport type UseFloatingElementProps<\n  FloatingElement extends HTMLElement = HTMLElement,\n  ReferenceElement extends HTMLElement = HTMLElement,\n> = Omit<UseFloatingMiddlewaresBootstrapOptions, 'arrowRef'> &\n  Omit<UseFloatingWithInteractionsProps, 'placement'> & {\n    onPlacementChange?: OnPlacementChange;\n    onReferenceHiddenChange?: (hidden: boolean) => void;\n    renderFloatingComponent: RenderFloatingComponentFn<FloatingElement>;\n    remapReferenceProps?: RemapReferencePropsFn<ReferenceElement>;\n    externalFloatingElementRef?: React.Ref<FloatingElement>;\n  };\n\nexport type UseFloatingResult<ReferenceElement extends HTMLElement = HTMLElement> = {\n  anchorRef: Ref<ReferenceElement>;\n  anchorProps: ReferenceProps<ReferenceElement>;\n  component: React.ReactNode | null;\n};\n\nexport const useFloatingElement = <\n  ReferenceElement extends HTMLElement = HTMLElement,\n  FloatingElement extends HTMLElement = HTMLElement,\n>({\n  // useFloatingMiddlewaresBootstrap\n  placement = 'bottom-start',\n  arrow,\n  arrowHeight,\n  arrowPadding,\n  sameWidth,\n  offsetByMainAxis = 0,\n  offsetByCrossAxis = 0,\n  customMiddlewares,\n  hideWhenReferenceHidden,\n  disableFlipMiddleware = false,\n\n  // useFloatingWithInteractions\n  trigger,\n  hoverDelay,\n  closeAfterClick,\n  disabled,\n  disableInteractive,\n  disableCloseOnClickOutside,\n  disableCloseOnEscKey,\n  defaultShown,\n  shown: shownProp,\n  onShownChange,\n  onShownChanged,\n  strategy,\n  onReferenceHiddenChange,\n\n  onPlacementChange,\n\n  renderFloatingComponent,\n  externalFloatingElementRef,\n  remapReferenceProps,\n}: UseFloatingElementProps<\n  FloatingElement,\n  ReferenceElement\n>): UseFloatingResult<ReferenceElement> => {\n  const [arrowRef, setArrowRef] = React.useState<HTMLDivElement | null>(null);\n\n  const { middlewares, strictPlacement } = useFloatingMiddlewaresBootstrap({\n    placement,\n    offsetByMainAxis,\n    offsetByCrossAxis,\n    customMiddlewares,\n    hideWhenReferenceHidden,\n    sameWidth,\n    arrow,\n    arrowRef,\n    arrowPadding,\n    arrowHeight,\n    disableFlipMiddleware,\n  });\n\n  const {\n    placement: resolvedPlacement,\n    shown,\n    willBeHide,\n    refs,\n    referenceProps,\n    floatingProps,\n    middlewareData,\n    onClose,\n    onRestoreFocus,\n    onEscapeKeyDown,\n  } = useFloatingWithInteractions({\n    middlewares,\n    strategy,\n    placement: strictPlacement,\n    trigger,\n    hoverDelay,\n    closeAfterClick,\n    disabled,\n    disableInteractive,\n    disableCloseOnClickOutside,\n    disableCloseOnEscKey,\n    defaultShown,\n    shown: shownProp,\n    onShownChange,\n    onShownChanged,\n  });\n\n  const resultRef = useExternRef<FloatingElement>(externalFloatingElementRef, refs.setFloating);\n\n  usePlacementChangeCallback(placement, resolvedPlacement, onPlacementChange);\n\n  useReferenceHiddenChangeCallback(middlewareData.hide, onReferenceHiddenChange);\n\n  const component = renderFloatingComponent({\n    shown,\n    willBeHide,\n    floatingProps,\n    floatingRef: resultRef,\n    middlewareData,\n    placement: resolvedPlacement,\n    onClose,\n    onRestoreFocus,\n    setArrowRef,\n  });\n\n  useGlobalEscKeyDown(shown, onEscapeKeyDown);\n\n  const remappedReferenceProps = useMemo(\n    () =>\n      remapReferenceProps ? remapReferenceProps({ ...referenceProps, shown }) : referenceProps,\n    [remapReferenceProps, shown, referenceProps],\n  );\n\n  return {\n    anchorRef: refs.setReference,\n    anchorProps: remappedReferenceProps,\n    component,\n  };\n};\n"],"mappings":";;AAAA,YAAYA,KAAA,MAAW;AACvB,SAAmBC,OAAO,QAAQ;AAClC,SAEEC,+BAA+B,EAE/BC,2BAA2B,EAG3BC,0BAA0B,QACrB;AAEP,SAASC,gCAAgC,QAAQ;AACjD,SAASC,YAAY,QAAQ;AAC7B,SAASC,mBAAmB,QAAQ;AA0CpC,OAAO,MAAMC,kBAAA,GAAqBC,IAAA,IAuCjC;EAAA,IApCC;IACA;IACAC,SAAA,GAAY,cAAc;IAC1BC,KAAK;IACLC,WAAW;IACXC,YAAY;IACZC,SAAS;IACTC,gBAAA,GAAmB,CAAC;IACpBC,iBAAA,GAAoB,CAAC;IACrBC,iBAAiB;IACjBC,uBAAuB;IACvBC,qBAAA,GAAwB,KAAK;IAE7B;IACAC,OAAO;IACPC,UAAU;IACVC,eAAe;IACfC,QAAQ;IACRC,kBAAkB;IAClBC,0BAA0B;IAC1BC,oBAAoB;IACpBC,YAAY;IACZC,KAAA,EAAOC,SAAS;IAChBC,aAAa;IACbC,cAAc;IACdC,QAAQ;IACRC,uBAAuB;IAEvBC,iBAAiB;IAEjBC,uBAAuB;IACvBC,0BAA0B;IAC1BC;EAAmB,CAIpB,GAAA5B,IAAA;EACC,MAAM,CAAC6B,QAAA,EAAUC,WAAA,CAAY,GAAGvC,KAAA,CAAMwC,QAAQ,CAAwB;EAEtE,MAAM;IAAEC,WAAW;IAAEC;EAAe,CAAE,GAAGxC,+BAAA,CAAgC;IACvEQ,SAAA;IACAK,gBAAA;IACAC,iBAAA;IACAC,iBAAA;IACAC,uBAAA;IACAJ,SAAA;IACAH,KAAA;IACA2B,QAAA;IACAzB,YAAA;IACAD,WAAA;IACAO;EACF;EAEA,MAAM;IACJT,SAAA,EAAWiC,iBAAiB;IAC5Bf,KAAK;IACLgB,UAAU;IACVC,IAAI;IACJC,cAAc;IACdC,aAAa;IACbC,cAAc;IACdC,OAAO;IACPC,cAAc;IACdC;EAAe,CAChB,GAAGhD,2BAAA,CAA4B;IAC9BsC,WAAA;IACAT,QAAA;IACAtB,SAAA,EAAWgC,eAAA;IACXtB,OAAA;IACAC,UAAA;IACAC,eAAA;IACAC,QAAA;IACAC,kBAAA;IACAC,0BAAA;IACAC,oBAAA;IACAC,YAAA;IACAC,KAAA,EAAOC,SAAA;IACPC,aAAA;IACAC;EACF;EAEA,MAAMqB,SAAA,GAAY9C,YAAA,CAA8B8B,0BAAA,EAA4BS,IAAA,CAAKQ,WAAW;EAE5FjD,0BAAA,CAA2BM,SAAA,EAAWiC,iBAAA,EAAmBT,iBAAA;EAEzD7B,gCAAA,CAAiC2C,cAAA,CAAeM,IAAI,EAAErB,uBAAA;EAEtD,MAAMsB,SAAA,GAAYpB,uBAAA,CAAwB;IACxCP,KAAA;IACAgB,UAAA;IACAG,aAAA;IACAS,WAAA,EAAaJ,SAAA;IACbJ,cAAA;IACAtC,SAAA,EAAWiC,iBAAA;IACXM,OAAA;IACAC,cAAA;IACAX;EACF;EAEAhC,mBAAA,CAAoBqB,KAAA,EAAOuB,eAAA;EAE3B,MAAMM,sBAAA,GAAyBxD,OAAA,CAC7B,MACEoC,mBAAA,GAAsBA,mBAAA,CAAoBqB,oBAAA,CAAAC,cAAA,KAAKb,cAAA;IAAgBlB;QAAWkB,cAAA,EAC5E,CAACT,mBAAA,EAAqBT,KAAA,EAAOkB,cAAA,CAAe;EAG9C,OAAO;IACLc,SAAA,EAAWf,IAAA,CAAKgB,YAAY;IAC5BC,WAAA,EAAaL,sBAAA;IACbF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}