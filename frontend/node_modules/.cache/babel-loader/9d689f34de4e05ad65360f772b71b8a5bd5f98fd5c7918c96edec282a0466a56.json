{"ast":null,"code":"import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nimport { hasReactNode } from \"@vkontakte/vkjs\";\nimport { HorizontalScroll } from \"../HorizontalScroll/HorizontalScroll.js\";\nimport { RootComponent } from \"../RootComponent/RootComponent.js\";\nconst defaultScrollToLeft = x => x - 240;\nconst defaultScrollToRight = x => x + 240;\n/**\n * @see https://vkcom.github.io/VKUI/#/SubnavigationBar\n */\nexport const SubnavigationBar = _param => {\n  var {\n      fixed = false,\n      children,\n      showArrows = true,\n      getScrollToLeft = defaultScrollToLeft,\n      getScrollToRight = defaultScrollToRight,\n      scrollAnimationDuration\n    } = _param,\n    restProps = _object_without_properties(_param, [\"fixed\", \"children\", \"showArrows\", \"getScrollToLeft\", \"getScrollToRight\", \"scrollAnimationDuration\"]);\n  let ScrollWrapper;\n  let scrollWrapperProps = {};\n  if (fixed) {\n    ScrollWrapper = 'div';\n  } else {\n    ScrollWrapper = HorizontalScroll;\n    scrollWrapperProps = {\n      showArrows,\n      getScrollToLeft,\n      getScrollToRight,\n      scrollAnimationDuration\n    };\n  }\n  return /*#__PURE__*/_jsx(RootComponent, _object_spread_props(_object_spread({\n    baseClassName: fixed && \"vkuiSubnavigationBar__modeFixed\"\n  }, restProps), {\n    children: /*#__PURE__*/_jsx(ScrollWrapper, _object_spread_props(_object_spread({\n      className: \"vkuiSubnavigationBar__in\"\n    }, scrollWrapperProps), {\n      children: /*#__PURE__*/_jsx(\"ul\", {\n        className: \"vkuiSubnavigationBar__scrollIn\",\n        children: React.Children.map(children, (child, idx) => hasReactNode(child) ? /*#__PURE__*/_jsx(\"li\", {\n          className: \"vkuiSubnavigationBar__item\",\n          children: child\n        }, idx) : null)\n      })\n    }))\n  }));\n};","map":{"version":3,"names":["React","hasReactNode","HorizontalScroll","RootComponent","defaultScrollToLeft","x","defaultScrollToRight","SubnavigationBar","_param","fixed","children","showArrows","getScrollToLeft","getScrollToRight","scrollAnimationDuration","restProps","_object_without_properties","ScrollWrapper","scrollWrapperProps","_jsx","_object_spread_props","_object_spread","baseClassName","className","Children","map","child","idx"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/components/SubnavigationBar/SubnavigationBar.tsx"],"sourcesContent":["import * as React from 'react';\nimport { hasReactNode } from '@vkontakte/vkjs';\nimport type { HTMLAttributesWithRootRef } from '../../types';\nimport {\n  HorizontalScroll,\n  type HorizontalScrollProps,\n  type ScrollPositionHandler,\n} from '../HorizontalScroll/HorizontalScroll';\nimport { RootComponent } from '../RootComponent/RootComponent';\nimport styles from './SubnavigationBar.module.css';\n\nexport interface SubnavigationBarProps\n  extends HTMLAttributesWithRootRef<HTMLDivElement>,\n    Pick<\n      HorizontalScrollProps,\n      'showArrows' | 'getScrollToLeft' | 'getScrollToRight' | 'scrollAnimationDuration'\n    > {\n  fixed?: boolean;\n}\n\nconst defaultScrollToLeft: ScrollPositionHandler = (x) => x - 240;\n\nconst defaultScrollToRight: ScrollPositionHandler = (x) => x + 240;\n\n/**\n * @see https://vkcom.github.io/VKUI/#/SubnavigationBar\n */\nexport const SubnavigationBar = ({\n  fixed = false,\n  children,\n  showArrows = true,\n  getScrollToLeft = defaultScrollToLeft,\n  getScrollToRight = defaultScrollToRight,\n  scrollAnimationDuration,\n  ...restProps\n}: SubnavigationBarProps): React.ReactNode => {\n  let ScrollWrapper: React.ElementType;\n  let scrollWrapperProps = {};\n\n  if (fixed) {\n    ScrollWrapper = 'div';\n  } else {\n    ScrollWrapper = HorizontalScroll;\n    scrollWrapperProps = {\n      showArrows,\n      getScrollToLeft,\n      getScrollToRight,\n      scrollAnimationDuration,\n    };\n  }\n\n  return (\n    <RootComponent baseClassName={fixed && styles.modeFixed} {...restProps}>\n      <ScrollWrapper className={styles.in} {...scrollWrapperProps}>\n        <ul className={styles.scrollIn}>\n          {React.Children.map(children, (child, idx) =>\n            hasReactNode(child) ? (\n              <li key={idx} className={styles.item}>\n                {child}\n              </li>\n            ) : null,\n          )}\n        </ul>\n      </ScrollWrapper>\n    </RootComponent>\n  );\n};\n"],"mappings":";;;;AAAA,YAAYA,KAAA,MAAW;AACvB,SAASC,YAAY,QAAQ;AAE7B,SACEC,gBAAgB,QAGX;AACP,SAASC,aAAa,QAAQ;AAY9B,MAAMC,mBAAA,GAA8CC,CAAA,IAAMA,CAAA,GAAI;AAE9D,MAAMC,oBAAA,GAA+CD,CAAA,IAAMA,CAAA,GAAI;AAE/D;;;AAGA,OAAO,MAAME,gBAAA,GAAmBC,MAAA;MAAC;MAC/BC,KAAA,GAAQ,KAAK;MACbC,QAAQ;MACRC,UAAA,GAAa,IAAI;MACjBC,eAAA,GAAkBR,mBAAmB;MACrCS,gBAAA,GAAmBP,oBAAoB;MACvCQ;IAAuB,CAED,GAAAN,MAAA;IADnBO,SAAA,GAAAC,0BAAA,CAAAR,MAAA,GANH,SACA,YACA,cACA,mBACA,oBACA,0B;EAGA,IAAIS,aAAA;EACJ,IAAIC,kBAAA,GAAqB,CAAC;EAE1B,IAAIT,KAAA,EAAO;IACTQ,aAAA,GAAgB;EAClB,OAAO;IACLA,aAAA,GAAgBf,gBAAA;IAChBgB,kBAAA,GAAqB;MACnBP,UAAA;MACAC,eAAA;MACAC,gBAAA;MACAC;IACF;EACF;EAEA,oBACEK,IAAA,CAAChB,aAAA,EAAAiB,oBAAA,CAAAC,cAAA;IAAcC,aAAA,EAAeb,KAAA;KAA+BM,SAAA;cAC3D,aAAAI,IAAA,CAACF,aAAA,EAAAG,oBAAA,CAAAC,cAAA;MAAcE,SAAS;OAAiBL,kBAAA;gBACvC,aAAAC,IAAA,CAAC;QAAGI,SAAS;kBACVvB,KAAA,CAAMwB,QAAQ,CAACC,GAAG,CAACf,QAAA,EAAU,CAACgB,KAAA,EAAOC,GAAA,KACpC1B,YAAA,CAAayB,KAAA,iBACXP,IAAA,CAAC;UAAaI,SAAS;oBACpBG;WADMC,GAAA,IAGP;;;;AAMhB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}