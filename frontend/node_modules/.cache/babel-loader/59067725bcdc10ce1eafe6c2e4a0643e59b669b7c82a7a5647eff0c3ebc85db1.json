{"ast":null,"code":"'use client';\n\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { classNames } from \"@vkontakte/vkjs\";\nimport { useExternRef } from \"../../hooks/useExternRef.js\";\nimport { useCSSTransition } from \"../../lib/animation/useCSSTransition.js\";\nconst positionClassNames = {\n  absolute: \"vkuiModalOverlay__hostPositionAbsolute\",\n  fixed: \"vkuiModalOverlay__hostPositionFixed\"\n};\nconst transitionStateClassNames = {\n  appear: \"vkuiModalOverlay__hostStateEnter\",\n  appearing: \"vkuiModalOverlay__hostStateEntering\",\n  appeared: \"vkuiModalOverlay__hostStateEntered\",\n  enter: \"vkuiModalOverlay__hostStateEnter\",\n  entering: \"vkuiModalOverlay__hostStateEntering\",\n  entered: \"vkuiModalOverlay__hostStateEntered\",\n  exit: \"vkuiModalOverlay__hostStateExit\",\n  exiting: \"vkuiModalOverlay__hostStateExiting\",\n  exited: \"vkuiModalOverlay__hostStateExited\"\n};\n/**\n * @private\n */\nexport const ModalOverlay = _param => {\n  var {\n      visible = false,\n      position = 'absolute',\n      getRootRef,\n      onClick\n    } = _param,\n    restProps = _object_without_properties(_param, [\"visible\", \"position\", \"getRootRef\", \"onClick\"]);\n  const [transitionState, {\n    ref,\n    onTransitionEnd\n  }] = useCSSTransition(visible, {\n    enableAppear: true\n  });\n  const handleRef = useExternRef(getRootRef, ref);\n  return /*#__PURE__*/_jsx(\"div\", _object_spread_props(_object_spread({}, restProps), {\n    ref: handleRef,\n    \"aria-hidden\": \"true\",\n    hidden: transitionState === 'exited',\n    className: classNames(\"vkuiModalOverlay__host\", onClick === undefined && \"vkuiModalOverlay__nonInteractive\", positionClassNames[position], transitionStateClassNames[transitionState]),\n    onClick: onClick,\n    onTransitionEnd: onTransitionEnd\n  }));\n};","map":{"version":3,"names":["classNames","useExternRef","useCSSTransition","positionClassNames","absolute","fixed","transitionStateClassNames","appear","appearing","appeared","enter","entering","entered","exit","exiting","exited","ModalOverlay","_param","visible","position","getRootRef","onClick","restProps","_object_without_properties","transitionState","ref","onTransitionEnd","enableAppear","handleRef","_jsx","_object_spread_props","_object_spread","hidden","className","undefined"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/components/ModalOverlay/ModalOverlay.tsx"],"sourcesContent":["'use client';\n\nimport type { DataHTMLAttributes } from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { useCSSTransition, type UseCSSTransitionState } from '../../lib/animation/useCSSTransition';\nimport type { HasRootRef } from '../../types';\nimport styles from './ModalOverlay.module.css';\n\nconst positionClassNames = {\n  absolute: styles.hostPositionAbsolute,\n  fixed: styles.hostPositionFixed,\n};\n\nconst transitionStateClassNames: Partial<Record<UseCSSTransitionState, string>> = {\n  appear: styles['hostStateEnter'],\n  appearing: styles['hostStateEntering'],\n  appeared: styles['hostStateEntered'],\n  enter: styles['hostStateEnter'],\n  entering: styles['hostStateEntering'],\n  entered: styles['hostStateEntered'],\n  exit: styles['hostStateExit'],\n  exiting: styles['hostStateExiting'],\n  exited: styles['hostStateExited'],\n};\n\nexport interface ModalOverlayProps\n  extends DataHTMLAttributes<HTMLDivElement>,\n    HasRootRef<HTMLDivElement> {\n  visible?: boolean;\n  position?: 'absolute' | 'fixed';\n  onClick?: (event: React.MouseEvent<HTMLDivElement>) => void;\n}\n\n/**\n * @private\n */\nexport const ModalOverlay = ({\n  visible = false,\n  position = 'absolute',\n  getRootRef,\n  onClick,\n  ...restProps\n}: ModalOverlayProps) => {\n  const [transitionState, { ref, onTransitionEnd }] = useCSSTransition<HTMLDivElement>(visible, {\n    enableAppear: true,\n  });\n  const handleRef = useExternRef(getRootRef, ref);\n\n  return (\n    <div\n      {...restProps}\n      ref={handleRef}\n      aria-hidden=\"true\"\n      hidden={transitionState === 'exited'}\n      className={classNames(\n        styles.host,\n        onClick === undefined && styles.nonInteractive,\n        positionClassNames[position],\n        transitionStateClassNames[transitionState],\n      )}\n      onClick={onClick}\n      onTransitionEnd={onTransitionEnd}\n    />\n  );\n};\n"],"mappings":"AAAA;;;;;;AAGA,SAASA,UAAU,QAAQ;AAC3B,SAASC,YAAY,QAAQ;AAC7B,SAASC,gBAAgB,QAAoC;AAI7D,MAAMC,kBAAA,GAAqB;EACzBC,QAAQ;EACRC,KAAK;AACP;AAEA,MAAMC,yBAAA,GAA4E;EAChFC,MAAM;EACNC,SAAS;EACTC,QAAQ;EACRC,KAAK;EACLC,QAAQ;EACRC,OAAO;EACPC,IAAI;EACJC,OAAO;EACPC,MAAM;AACR;AAUA;;;AAGA,OAAO,MAAMC,YAAA,GAAeC,MAAA;MAAC;MAC3BC,OAAA,GAAU,KAAK;MACfC,QAAA,GAAW,UAAU;MACrBC,UAAU;MACVC;IAAO,CAEW,GAAAJ,MAAA;IADfK,SAAA,GAAAC,0BAAA,CAAAN,MAAA,GAJH,WACA,YACA,cACA,U;EAGA,MAAM,CAACO,eAAA,EAAiB;IAAEC,GAAG;IAAEC;EAAe,CAAE,CAAC,GAAGxB,gBAAA,CAAiCgB,OAAA,EAAS;IAC5FS,YAAA,EAAc;EAChB;EACA,MAAMC,SAAA,GAAY3B,YAAA,CAAamB,UAAA,EAAYK,GAAA;EAE3C,oBACEI,IAAA,CAAC,OAAAC,oBAAA,CAAAC,cAAA,KACKT,SAAA;IACJG,GAAA,EAAKG,SAAA;IACL,eAAY;IACZI,MAAA,EAAQR,eAAA,KAAoB;IAC5BS,SAAA,EAAWjC,UAAA,2BAETqB,OAAA,KAAYa,SAAA,wCACZ/B,kBAAkB,CAACgB,QAAA,CAAS,EAC5Bb,yBAAyB,CAACkB,eAAA,CAAgB;IAE5CH,OAAA,EAASA,OAAA;IACTK,eAAA,EAAiBA;;AAGvB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}