{"ast":null,"code":"/**\n * https://github.com/alexreardon/raf-schd\n *\n * Copyright (c) 2021 Alex Reardon\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */export const rafSchd = fn => {\n  let lastArgs = [];\n  let frameId = null;\n  const wrapperFn = function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    // Always capture the latest value\n    lastArgs = args;\n    // There is already a frame queued\n    if (frameId) {\n      return;\n    }\n    // Schedule a new frame\n    frameId = requestAnimationFrame(() => {\n      frameId = null;\n      fn(...lastArgs);\n    });\n  };\n  // Adding cancel property to result function\n  wrapperFn.cancel = () => {\n    if (!frameId) {\n      return;\n    }\n    cancelAnimationFrame(frameId);\n    frameId = null;\n  };\n  return wrapperFn;\n};","map":{"version":3,"names":["rafSchd","fn","lastArgs","frameId","wrapperFn","_len","arguments","length","args","Array","_key","requestAnimationFrame","cancel","cancelAnimationFrame"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/lib/rafSchd.ts"],"sourcesContent":["/**\n * https://github.com/alexreardon/raf-schd\n *\n * Copyright (c) 2021 Alex Reardon\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\ntype AnyFn = (...args: any[]) => void;\n\nexport interface RafSchedule<T extends AnyFn> {\n  (...args: Parameters<T>): void;\n  cancel: () => void;\n}\n\nexport const rafSchd = <T extends AnyFn>(fn: T): RafSchedule<T> => {\n  let lastArgs: any = [];\n  let frameId: number | null = null;\n\n  const wrapperFn = <T extends AnyFn>(...args: Parameters<T>) => {\n    // Always capture the latest value\n    lastArgs = args;\n\n    // There is already a frame queued\n    if (frameId) {\n      return;\n    }\n\n    // Schedule a new frame\n    frameId = requestAnimationFrame(() => {\n      frameId = null;\n      fn(...lastArgs);\n    });\n  };\n\n  // Adding cancel property to result function\n  wrapperFn.cancel = () => {\n    if (!frameId) {\n      return;\n    }\n\n    cancelAnimationFrame(frameId);\n    frameId = null;\n  };\n\n  return wrapperFn;\n};\n"],"mappings":"AAAA;;;;;;;GAgBA,OAAO,MAAMA,OAAA,GAA4BC,EAAA;EACvC,IAAIC,QAAA,GAAgB,EAAE;EACtB,IAAIC,OAAA,GAAyB;EAE7B,MAAMC,SAAA,GAAY,SAAAA,CAAA,EAAqB;IAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAAC,IAAA,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;MAAAF,IAAA,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;IAAA;IACrC;IACAR,QAAA,GAAWM,IAAA;IAEX;IACA,IAAIL,OAAA,EAAS;MACX;IACF;IAEA;IACAA,OAAA,GAAUQ,qBAAA,CAAsB;MAC9BR,OAAA,GAAU;MACVF,EAAA,IAAMC,QAAA;IACR;EACF;EAEA;EACAE,SAAA,CAAUQ,MAAM,GAAG;IACjB,IAAI,CAACT,OAAA,EAAS;MACZ;IACF;IAEAU,oBAAA,CAAqBV,OAAA;IACrBA,OAAA,GAAU;EACZ;EAEA,OAAOC,SAAA;AACT","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}