{"ast":null,"code":"'use client';\n\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nimport { Icon16Dropdown } from \"@vkontakte/icons\";\nimport { classNames } from \"@vkontakte/vkjs\";\nimport { useAdaptivity } from \"../../hooks/useAdaptivity.js\";\nimport { Tappable } from \"../Tappable/Tappable.js\";\nimport { Caption } from \"../Typography/Caption/Caption.js\";\nimport { Subhead } from \"../Typography/Subhead/Subhead.js\";\nconst appearanceStyles = {\n  accent: \"vkuiSubnavigationButton__appearanceAccent\",\n  neutral: \"vkuiSubnavigationButton__appearanceNeutral\"\n};\nconst modeStyles = {\n  primary: \"vkuiSubnavigationButton__modePrimary\",\n  outline: \"vkuiSubnavigationButton__modeOutline\",\n  tertiary: \"vkuiSubnavigationButton__modeTertiary\"\n};\nconst sizeStyles = {\n  s: \"vkuiSubnavigationButton__sizeS\",\n  m: \"vkuiSubnavigationButton__sizeM\",\n  l: \"vkuiSubnavigationButton__sizeL\"\n};\nconst sizeYClassNames = {\n  none: \"vkuiSubnavigationButton__sizeYNone\",\n  compact: \"vkuiSubnavigationButton__sizeYCompact\"\n};\nconst SubnavigationButtonTypography = _param => {\n  var {\n      textLevel\n    } = _param,\n    restProps = _object_without_properties(_param, [\"textLevel\"]);\n  if (textLevel === '1') {\n    return /*#__PURE__*/_jsx(Subhead, _object_spread({}, restProps));\n  }\n  return /*#__PURE__*/_jsx(Caption, _object_spread({\n    level: textLevel === '2' ? '1' : '2'\n  }, restProps));\n};\n/**\n * @see https://vkcom.github.io/VKUI/#/SubnavigationButton\n */\nexport const SubnavigationButton = _param => {\n  var {\n      mode = 'primary',\n      appearance = 'accent',\n      size = 'm',\n      selected,\n      textLevel = '1',\n      before,\n      after,\n      chevron,\n      children\n    } = _param,\n    restProps = _object_without_properties(_param, [\"mode\", \"appearance\", \"size\", \"selected\", \"textLevel\", \"before\", \"after\", \"chevron\", \"children\"]);\n  const {\n    sizeY = 'none'\n  } = useAdaptivity();\n  return /*#__PURE__*/_jsx(Tappable, _object_spread_props(_object_spread({}, restProps), {\n    hasActive: false,\n    focusVisibleMode: \"outside\",\n    baseClassName: classNames(\"vkuiSubnavigationButton__host\", sizeStyles[size], modeStyles[mode], appearanceStyles[appearance], selected && \"vkuiSubnavigationButton__selected\", sizeY !== 'regular' && sizeYClassNames[sizeY], restProps.disabled && \"vkuiSubnavigationButton__disabled\"),\n    children: /*#__PURE__*/_jsxs(\"span\", {\n      className: \"vkuiSubnavigationButton__in\",\n      children: [before && /*#__PURE__*/_jsx(\"span\", {\n        className: \"vkuiSubnavigationButton__before\",\n        children: before\n      }), /*#__PURE__*/_jsx(SubnavigationButtonTypography, {\n        textLevel: textLevel,\n        className: \"vkuiSubnavigationButton__label\",\n        Component: \"span\",\n        children: children\n      }), after && /*#__PURE__*/_jsx(\"span\", {\n        className: \"vkuiSubnavigationButton__after\",\n        children: after\n      }), chevron && /*#__PURE__*/_jsx(Icon16Dropdown, {\n        className: \"vkuiSubnavigationButton__chevronIcon\"\n      })]\n    })\n  }));\n};","map":{"version":3,"names":["React","Icon16Dropdown","classNames","useAdaptivity","Tappable","Caption","Subhead","appearanceStyles","accent","neutral","modeStyles","primary","outline","tertiary","sizeStyles","s","m","l","sizeYClassNames","none","compact","SubnavigationButtonTypography","_param","textLevel","restProps","_object_without_properties","_jsx","_object_spread","level","SubnavigationButton","mode","appearance","size","selected","before","after","chevron","children","sizeY","_object_spread_props","hasActive","focusVisibleMode","baseClassName","disabled","_jsxs","className","Component"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/components/SubnavigationButton/SubnavigationButton.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { Icon16Dropdown } from '@vkontakte/icons';\nimport { classNames } from '@vkontakte/vkjs';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\nimport type { HasChildren, HasComponent } from '../../types';\nimport { Tappable, type TappableProps } from '../Tappable/Tappable';\nimport { Caption } from '../Typography/Caption/Caption';\nimport { Subhead } from '../Typography/Subhead/Subhead';\nimport styles from './SubnavigationButton.module.css';\n\nconst appearanceStyles = {\n  accent: styles.appearanceAccent,\n  neutral: styles.appearanceNeutral,\n};\n\nconst modeStyles = {\n  primary: styles.modePrimary,\n  outline: styles.modeOutline,\n  tertiary: styles.modeTertiary,\n};\n\nconst sizeStyles = {\n  s: styles.sizeS,\n  m: styles.sizeM,\n  l: styles.sizeL,\n};\n\nconst sizeYClassNames = {\n  none: styles.sizeYNone,\n  compact: styles.sizeYCompact,\n};\n\nexport interface SubnavigationButtonProps extends Omit<TappableProps, 'size'> {\n  mode?: 'primary' | 'outline' | 'tertiary';\n  appearance?: 'accent' | 'neutral';\n  size?: 's' | 'm' | 'l';\n  selected?: boolean;\n  /**\n   * Размер шрифта. Этим свойством рекомендуется пользоваться, чтобы отрегулировать размер шрифта у кнопок в `<SubnavigationBar fixed />`\n   */\n  textLevel?: '1' | '2' | '3';\n  /**\n   * Рекомендуется использовать только иконки с размером 24\n   */\n  before?: React.ReactNode;\n  /**\n   * Рекомендуется использовать только `<Counter size=\"s\" />` или `<Badge />`\n   */\n  after?: React.ReactNode;\n  chevron?: boolean;\n}\n\ntype SubnavigationButtonTypographyProps = Pick<\n  SubnavigationButtonProps,\n  'textLevel' | 'className'\n> &\n  HasComponent &\n  HasChildren;\n\nconst SubnavigationButtonTypography = ({\n  textLevel,\n  ...restProps\n}: SubnavigationButtonTypographyProps) => {\n  if (textLevel === '1') {\n    return <Subhead {...restProps} />;\n  }\n\n  return <Caption level={textLevel === '2' ? '1' : '2'} {...restProps} />;\n};\n\n/**\n * @see https://vkcom.github.io/VKUI/#/SubnavigationButton\n */\nexport const SubnavigationButton = ({\n  mode = 'primary',\n  appearance = 'accent',\n  size = 'm',\n  selected,\n  textLevel = '1',\n  before,\n  after,\n  chevron,\n  children,\n  ...restProps\n}: SubnavigationButtonProps): React.ReactNode => {\n  const { sizeY = 'none' } = useAdaptivity();\n\n  return (\n    <Tappable\n      {...restProps}\n      hasActive={false}\n      focusVisibleMode=\"outside\"\n      baseClassName={classNames(\n        styles.host,\n        sizeStyles[size],\n        modeStyles[mode],\n        appearanceStyles[appearance],\n        selected && styles.selected,\n        sizeY !== 'regular' && sizeYClassNames[sizeY],\n        restProps.disabled && styles.disabled,\n      )}\n    >\n      <span className={styles.in}>\n        {before && <span className={styles.before}>{before}</span>}\n        <SubnavigationButtonTypography\n          textLevel={textLevel}\n          className={styles.label}\n          Component=\"span\"\n        >\n          {children}\n        </SubnavigationButtonTypography>\n        {after && <span className={styles.after}>{after}</span>}\n        {chevron && <Icon16Dropdown className={styles.chevronIcon} />}\n      </span>\n    </Tappable>\n  );\n};\n"],"mappings":"AAAA;;;;;;AAEA,YAAYA,KAAA,MAAW;AACvB,SAASC,cAAc,QAAQ;AAC/B,SAASC,UAAU,QAAQ;AAC3B,SAASC,aAAa,QAAQ;AAE9B,SAASC,QAAQ,QAA4B;AAC7C,SAASC,OAAO,QAAQ;AACxB,SAASC,OAAO,QAAQ;AAGxB,MAAMC,gBAAA,GAAmB;EACvBC,MAAM;EACNC,OAAO;AACT;AAEA,MAAMC,UAAA,GAAa;EACjBC,OAAO;EACPC,OAAO;EACPC,QAAQ;AACV;AAEA,MAAMC,UAAA,GAAa;EACjBC,CAAC;EACDC,CAAC;EACDC,CAAC;AACH;AAEA,MAAMC,eAAA,GAAkB;EACtBC,IAAI;EACJC,OAAO;AACT;AA6BA,MAAMC,6BAAA,GAAgCC,MAAA;MAAC;MACrCC;IAAS,CAE0B,GAAAD,MAAA;IADhCE,SAAA,GAAAC,0BAAA,CAAAH,MAAA,GADH,Y;EAGA,IAAIC,SAAA,KAAc,KAAK;IACrB,oBAAOG,IAAA,CAACpB,OAAA,EAAAqB,cAAA,KAAYH,SAAA;EACtB;EAEA,oBAAOE,IAAA,CAACrB,OAAA,EAAAsB,cAAA;IAAQC,KAAA,EAAOL,SAAA,KAAc,MAAM,MAAM;KAASC,SAAA;AAC5D;AAEA;;;AAGA,OAAO,MAAMK,mBAAA,GAAsBP,MAAA;MAAC;MAClCQ,IAAA,GAAO,SAAS;MAChBC,UAAA,GAAa,QAAQ;MACrBC,IAAA,GAAO,GAAG;MACVC,QAAQ;MACRV,SAAA,GAAY,GAAG;MACfW,MAAM;MACNC,KAAK;MACLC,OAAO;MACPC;IAAQ,CAEiB,GAAAf,MAAA;IADtBE,SAAA,GAAAC,0BAAA,CAAAH,MAAA,GATH,QACA,cACA,QACA,YACA,aACA,UACA,SACA,WACA,W;EAGA,MAAM;IAAEgB,KAAA,GAAQ;EAAM,CAAE,GAAGnC,aAAA;EAE3B,oBACEuB,IAAA,CAACtB,QAAA,EAAAmC,oBAAA,CAAAZ,cAAA,KACKH,SAAA;IACJgB,SAAA,EAAW;IACXC,gBAAA,EAAiB;IACjBC,aAAA,EAAexC,UAAA,kCAEbY,UAAU,CAACkB,IAAA,CAAK,EAChBtB,UAAU,CAACoB,IAAA,CAAK,EAChBvB,gBAAgB,CAACwB,UAAA,CAAW,EAC5BE,QAAA,yCACAK,KAAA,KAAU,aAAapB,eAAe,CAACoB,KAAA,CAAM,EAC7Cd,SAAA,CAAUmB,QAAQ;cAGpB,aAAAC,KAAA,CAAC;MAAKC,SAAS;iBACZX,MAAA,iBAAUR,IAAA,CAAC;QAAKmB,SAAS;kBAAkBX;uBAC5CR,IAAA,CAACL,6BAAA;QACCE,SAAA,EAAWA,SAAA;QACXsB,SAAS;QACTC,SAAA,EAAU;kBAETT;UAEFF,KAAA,iBAAST,IAAA,CAAC;QAAKmB,SAAS;kBAAiBV;UACzCC,OAAA,iBAAWV,IAAA,CAACzB,cAAA;QAAe4C,SAAS;;;;AAI7C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}