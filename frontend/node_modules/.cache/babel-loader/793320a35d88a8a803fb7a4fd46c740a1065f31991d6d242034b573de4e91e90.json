{"ast":null,"code":"import { useContext, useState } from \"react\";\nimport { useIsomorphicLayoutEffect } from \"../../lib/useIsomorphicLayoutEffect.js\";\nimport { ModalOverlay } from \"../ModalOverlay/ModalOverlay.js\";\nimport { ModalRootContext } from \"./ModalRootContext.js\";\nimport { VisuallyHiddenModalOverlay } from \"./VisuallyHiddenModalOverlay/VisuallyHiddenModalOverlay.js\";\nexport const useModalManager = _ref => {\n  let {\n    id,\n    open,\n    keepMounted,\n    modalOverlayTestId,\n    noFocusToDialog,\n    onOpen,\n    onOpened,\n    onClose,\n    onClosed\n  } = _ref;\n  const context = useContext(ModalRootContext);\n  const opened = context.isInsideModal ? context.activeModal === id : open;\n  const shouldPreserveSnapPoint = context.isInsideModal ? context.activeModal !== null : false;\n  const [unmounted, setUnmounted] = useState(keepMounted ? false : !opened);\n  useIsomorphicLayoutEffect(function unsetUnmounted() {\n    if (!keepMounted && opened) {\n      setUnmounted(prev => prev ? false : prev);\n    }\n  }, [opened, keepMounted]);\n  if (unmounted) {\n    return {\n      mounted: false,\n      shouldPreserveSnapPoint\n    };\n  }\n  return {\n    mounted: true,\n    open: opened,\n    shouldPreserveSnapPoint,\n    noFocusToDialog: noFocusToDialog || context.noFocusToDialog,\n    modalOverlayTestId: modalOverlayTestId || context.modalOverlayTestId,\n    ModalOverlay: context.isInsideModal ? VisuallyHiddenModalOverlay : ModalOverlay,\n    onOpen: onOpen || getContextCallback(id, context.onOpen),\n    onOpened: onOpened || getContextCallback(id, context.onOpened),\n    onClose: onClose || getContextCallback(id, context.onClose),\n    onClosed: function handleClosed() {\n      if (!keepMounted) {\n        setUnmounted(true);\n      }\n      if (onClosed) {\n        onClosed(...arguments);\n      } else {\n        var _context_onClosed;\n        (_context_onClosed = context.onClosed) === null || _context_onClosed === void 0 ? void 0 : _context_onClosed.call(context, id);\n      }\n    }\n  };\n};\nfunction getContextCallback(id, fn) {\n  return fn ? () => fn(id) : undefined;\n}","map":{"version":3,"names":["useContext","useState","useIsomorphicLayoutEffect","ModalOverlay","ModalRootContext","VisuallyHiddenModalOverlay","useModalManager","_ref","id","open","keepMounted","modalOverlayTestId","noFocusToDialog","onOpen","onOpened","onClose","onClosed","context","opened","isInsideModal","activeModal","shouldPreserveSnapPoint","unmounted","setUnmounted","unsetUnmounted","prev","mounted","getContextCallback","handleClosed","arguments","_context_onClosed","call","fn","undefined"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/components/ModalRoot/useModalManager.tsx"],"sourcesContent":["import { useContext, useState } from 'react';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport type { AnyFunction } from '../../types';\nimport { ModalOverlay, type ModalOverlayProps } from '../ModalOverlay/ModalOverlay';\nimport { ModalRootContext } from './ModalRootContext';\nimport { VisuallyHiddenModalOverlay } from './VisuallyHiddenModalOverlay/VisuallyHiddenModalOverlay';\nimport type { ModalRootCallbackFunction } from './types';\n\nexport interface UseModalManager {\n  id: string;\n  open: boolean;\n  keepMounted: boolean;\n  modalOverlayTestId?: string;\n  noFocusToDialog?: boolean;\n  onOpen?: AnyFunction;\n  onOpened?: AnyFunction;\n  onClose?: AnyFunction;\n  onClosed?: AnyFunction;\n}\n\nexport interface UseModalManagerResolvedProps {\n  open: boolean;\n  noFocusToDialog?: boolean;\n  modalOverlayTestId?: string;\n  ModalOverlay: React.ComponentType<ModalOverlayProps>;\n  onOpen?: AnyFunction;\n  onOpened?: AnyFunction;\n  onClose?: AnyFunction;\n  onClosed?: AnyFunction;\n}\n\nexport type UseModalManagerResult =\n  | { mounted: false; shouldPreserveSnapPoint: boolean }\n  | ({ mounted: true; shouldPreserveSnapPoint: boolean } & UseModalManagerResolvedProps);\n\nexport const useModalManager = ({\n  id,\n  open,\n  keepMounted,\n  modalOverlayTestId,\n  noFocusToDialog,\n  onOpen,\n  onOpened,\n  onClose,\n  onClosed,\n}: UseModalManager): UseModalManagerResult => {\n  const context = useContext(ModalRootContext);\n  const opened = context.isInsideModal ? context.activeModal === id : open;\n  const shouldPreserveSnapPoint = context.isInsideModal ? context.activeModal !== null : false;\n\n  const [unmounted, setUnmounted] = useState(keepMounted ? false : !opened);\n\n  useIsomorphicLayoutEffect(\n    function unsetUnmounted() {\n      if (!keepMounted && opened) {\n        setUnmounted((prev) => (prev ? false : prev));\n      }\n    },\n    [opened, keepMounted],\n  );\n\n  if (unmounted) {\n    return { mounted: false, shouldPreserveSnapPoint };\n  }\n\n  return {\n    mounted: true,\n    open: opened,\n    shouldPreserveSnapPoint,\n    noFocusToDialog: noFocusToDialog || context.noFocusToDialog,\n    modalOverlayTestId: modalOverlayTestId || context.modalOverlayTestId,\n    ModalOverlay: context.isInsideModal ? VisuallyHiddenModalOverlay : ModalOverlay,\n    onOpen: onOpen || getContextCallback(id, context.onOpen),\n    onOpened: onOpened || getContextCallback(id, context.onOpened),\n    onClose: onClose || getContextCallback(id, context.onClose),\n    onClosed: function handleClosed(...args: any[]) {\n      if (!keepMounted) {\n        setUnmounted(true);\n      }\n\n      if (onClosed) {\n        onClosed(...args);\n      } else {\n        context.onClosed?.(id);\n      }\n    },\n  };\n};\n\nfunction getContextCallback(id: string, fn: ModalRootCallbackFunction | undefined) {\n  return fn ? () => fn(id) : undefined;\n}\n"],"mappings":"AAAA,SAASA,UAAU,EAAEC,QAAQ,QAAQ;AACrC,SAASC,yBAAyB,QAAQ;AAE1C,SAASC,YAAY,QAAgC;AACrD,SAASC,gBAAgB,QAAQ;AACjC,SAASC,0BAA0B,QAAQ;AA8B3C,OAAO,MAAMC,eAAA,GAAkBC,IAAA,IAUb;EAAA,IAVc;IAC9BC,EAAE;IACFC,IAAI;IACJC,WAAW;IACXC,kBAAkB;IAClBC,eAAe;IACfC,MAAM;IACNC,QAAQ;IACRC,OAAO;IACPC;EAAQ,CACQ,GAAAT,IAAA;EAChB,MAAMU,OAAA,GAAUjB,UAAA,CAAWI,gBAAA;EAC3B,MAAMc,MAAA,GAASD,OAAA,CAAQE,aAAa,GAAGF,OAAA,CAAQG,WAAW,KAAKZ,EAAA,GAAKC,IAAA;EACpE,MAAMY,uBAAA,GAA0BJ,OAAA,CAAQE,aAAa,GAAGF,OAAA,CAAQG,WAAW,KAAK,OAAO;EAEvF,MAAM,CAACE,SAAA,EAAWC,YAAA,CAAa,GAAGtB,QAAA,CAASS,WAAA,GAAc,QAAQ,CAACQ,MAAA;EAElEhB,yBAAA,CACE,SAASsB,eAAA;IACP,IAAI,CAACd,WAAA,IAAeQ,MAAA,EAAQ;MAC1BK,YAAA,CAAcE,IAAA,IAAUA,IAAA,GAAO,QAAQA,IAAA;IACzC;EACF,GACA,CAACP,MAAA,EAAQR,WAAA,CAAY;EAGvB,IAAIY,SAAA,EAAW;IACb,OAAO;MAAEI,OAAA,EAAS;MAAOL;IAAwB;EACnD;EAEA,OAAO;IACLK,OAAA,EAAS;IACTjB,IAAA,EAAMS,MAAA;IACNG,uBAAA;IACAT,eAAA,EAAiBA,eAAA,IAAmBK,OAAA,CAAQL,eAAe;IAC3DD,kBAAA,EAAoBA,kBAAA,IAAsBM,OAAA,CAAQN,kBAAkB;IACpER,YAAA,EAAcc,OAAA,CAAQE,aAAa,GAAGd,0BAAA,GAA6BF,YAAA;IACnEU,MAAA,EAAQA,MAAA,IAAUc,kBAAA,CAAmBnB,EAAA,EAAIS,OAAA,CAAQJ,MAAM;IACvDC,QAAA,EAAUA,QAAA,IAAYa,kBAAA,CAAmBnB,EAAA,EAAIS,OAAA,CAAQH,QAAQ;IAC7DC,OAAA,EAASA,OAAA,IAAWY,kBAAA,CAAmBnB,EAAA,EAAIS,OAAA,CAAQF,OAAO;IAC1DC,QAAA,EAAU,SAASY,aAAA,EAA2B;MAC5C,IAAI,CAAClB,WAAA,EAAa;QAChBa,YAAA,CAAa;MACf;MAEA,IAAIP,QAAA,EAAU;QACZA,QAAA,IAAAa,SAAY;MACd,OAAO;YACLC,iBAAA;SAAAA,iBAAA,GAAAb,OAAA,CAAQD,QAAQ,cAAhBc,iBAAA,uBAAAA,iBAAA,CAAAC,IAAA,CAAAd,OAAA,EAAmBT,EAAA;MACrB;IACF;EACF;AACF;AAEA,SAASmB,mBAAmBnB,EAAU,EAAEwB,EAAyC;EAC/E,OAAOA,EAAA,GAAK,MAAMA,EAAA,CAAGxB,EAAA,IAAMyB,SAAA;AAC7B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}