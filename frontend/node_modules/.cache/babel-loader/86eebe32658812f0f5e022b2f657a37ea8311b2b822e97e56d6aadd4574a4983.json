{"ast":null,"code":"'use client';\n\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nvar _options_;\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nimport { classNames } from \"@vkontakte/vkjs\";\nimport { useAdaptivity } from \"../../hooks/useAdaptivity.js\";\nimport { useConfigDirection } from \"../../hooks/useConfigDirection.js\";\nimport { useCustomEnsuredControl } from \"../../hooks/useEnsuredControl.js\";\nimport { useTabsNavigation } from \"../../hooks/useTabsNavigation.js\";\nimport { useIsomorphicLayoutEffect } from \"../../lib/useIsomorphicLayoutEffect.js\";\nimport { warnOnce } from \"../../lib/warnOnce.js\";\nimport { RootComponent } from \"../RootComponent/RootComponent.js\";\nimport { SegmentedControlOption } from \"./SegmentedControlOption/SegmentedControlOption.js\";\nconst sizeYClassNames = {\n  none: \"vkuiSegmentedControl__sizeYNone\",\n  regular: \"vkuiSegmentedControl__sizeYRegular\"\n};\nconst warn = warnOnce('SegmentedControl');\n/**\n * @see https://vkcom.github.io/VKUI/#/SegmentedControl\n */\nexport const SegmentedControl = _param => {\n  var {\n      size = 'l',\n      name,\n      options,\n      defaultValue = (_options_ = options[0]) === null || _options_ === void 0 ? void 0 : _options_.value,\n      children,\n      onChange: onChangeProp,\n      value: valueProp,\n      role = 'radiogroup'\n    } = _param,\n    restProps = _object_without_properties(_param, [\"size\", \"name\", \"options\", \"defaultValue\", \"children\", \"onChange\", \"value\", \"role\"]);\n  const id = React.useId();\n  const direction = useConfigDirection();\n  const isRtl = direction === 'rtl';\n  const [value, onChange] = useCustomEnsuredControl({\n    onChange: onChangeProp,\n    value: valueProp,\n    defaultValue\n  });\n  const {\n    sizeY = 'none'\n  } = useAdaptivity();\n  const {\n    tabsRef\n  } = useTabsNavigation(role === 'tablist', isRtl);\n  const actualIndex = options.findIndex(option => option.value === value);\n  useIsomorphicLayoutEffect(() => {\n    if (actualIndex === -1 && process.env.NODE_ENV === 'development') {\n      warn('defaultValue: такого значения нет среди опций!', 'error');\n    }\n  }, [actualIndex]);\n  const sliderStyle = {\n    '--vkui_internal--SegmentedControl_actual_index': String(actualIndex),\n    '--vkui_internal--SegmentedControl_options': String(options.length)\n  };\n  return /*#__PURE__*/_jsx(RootComponent, _object_spread_props(_object_spread({}, restProps), {\n    baseClassName: classNames(\"vkuiSegmentedControl__host\", sizeY !== 'compact' && sizeYClassNames[sizeY], size === 'l' && \"vkuiSegmentedControl__sizeL\", isRtl && \"vkuiSegmentedControl__rtl\"),\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      role: role,\n      ref: tabsRef,\n      className: \"vkuiSegmentedControl__in\",\n      children: [actualIndex > -1 && /*#__PURE__*/_jsx(\"div\", {\n        \"aria-hidden\": true,\n        className: \"vkuiSegmentedControl__slider\",\n        style: sliderStyle\n      }), options.map(_param => {\n        var {\n            label,\n            before\n          } = _param,\n          optionProps = _object_without_properties(_param, [\"label\", \"before\"]);\n        const selected = value === optionProps.value;\n        const onSelect = () => onChange(optionProps.value);\n        var _optionProps_tabIndex;\n        const optionRootProps = role === 'tablist' ? _object_spread({\n          'role': 'tab',\n          'aria-selected': selected,\n          'onClick': onSelect,\n          'tabIndex': (_optionProps_tabIndex = optionProps.tabIndex) !== null && _optionProps_tabIndex !== void 0 ? _optionProps_tabIndex : selected ? 0 : -1\n        }, optionProps) : undefined;\n        const optionInputProps = role !== 'tablist' ? _object_spread({\n          role: optionProps.role || (role === 'radiogroup' ? 'radio' : undefined),\n          checked: selected,\n          onChange: onSelect,\n          name: name !== null && name !== void 0 ? name : id\n        }, optionProps) : undefined;\n        return /*#__PURE__*/_jsx(SegmentedControlOption, {\n          before: before,\n          rootProps: optionRootProps,\n          inputProps: optionInputProps,\n          children: label\n        }, `${optionProps.value}`);\n      })]\n    })\n  }));\n};","map":{"version":3,"names":["_options_","React","classNames","useAdaptivity","useConfigDirection","useCustomEnsuredControl","useTabsNavigation","useIsomorphicLayoutEffect","warnOnce","RootComponent","SegmentedControlOption","sizeYClassNames","none","regular","warn","SegmentedControl","_param","size","name","options","defaultValue","value","children","onChange","onChangeProp","valueProp","role","restProps","_object_without_properties","id","useId","direction","isRtl","sizeY","tabsRef","actualIndex","findIndex","option","process","env","NODE_ENV","sliderStyle","String","length","_jsx","_object_spread_props","_object_spread","baseClassName","_jsxs","ref","className","style","map","label","before","optionProps","selected","onSelect","_optionProps_tabIndex","optionRootProps","tabIndex","undefined","optionInputProps","checked","rootProps","inputProps"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/components/SegmentedControl/SegmentedControl.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\nimport { useConfigDirection } from '../../hooks/useConfigDirection';\nimport { useCustomEnsuredControl } from '../../hooks/useEnsuredControl';\nimport { useTabsNavigation } from '../../hooks/useTabsNavigation';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport { warnOnce } from '../../lib/warnOnce';\nimport type { CSSCustomProperties, HTMLAttributesWithRootRef } from '../../types';\nimport { RootComponent } from '../RootComponent/RootComponent';\nimport {\n  SegmentedControlOption,\n  type SegmentedControlOptionProps,\n} from './SegmentedControlOption/SegmentedControlOption';\nimport styles from './SegmentedControl.module.css';\n\nconst sizeYClassNames = {\n  none: styles.sizeYNone,\n  regular: styles.sizeYRegular,\n};\n\nexport type SegmentedControlValue = string | number | undefined;\n\nexport interface SegmentedControlOptionInterface\n  extends Omit<React.HTMLAttributes<HTMLElement>, 'label'> {\n  /**\n   * Вставляет элемент перед основным контентом.\n   * Рекомендуется использовать только иконки с размером 20\n   */\n  before?: React.ReactNode;\n  label: React.ReactNode;\n  value: SegmentedControlValue;\n}\n\nexport interface SegmentedControlProps\n  extends Omit<HTMLAttributesWithRootRef<HTMLDivElement>, 'onChange'> {\n  options: SegmentedControlOptionInterface[];\n  size?: 'm' | 'l';\n  name?: string;\n  onChange?: (value: SegmentedControlValue) => void;\n  value?: SegmentedControlValue;\n  defaultValue?: SegmentedControlValue;\n}\n\nconst warn = warnOnce('SegmentedControl');\n\n/**\n * @see https://vkcom.github.io/VKUI/#/SegmentedControl\n */\nexport const SegmentedControl = ({\n  size = 'l',\n  name,\n  options,\n  defaultValue = options[0]?.value,\n  children,\n  onChange: onChangeProp,\n  value: valueProp,\n  role = 'radiogroup',\n  ...restProps\n}: SegmentedControlProps): React.ReactNode => {\n  const id = React.useId();\n  const direction = useConfigDirection();\n  const isRtl = direction === 'rtl';\n\n  const [value, onChange] = useCustomEnsuredControl({\n    onChange: onChangeProp,\n    value: valueProp,\n    defaultValue,\n  });\n\n  const { sizeY = 'none' } = useAdaptivity();\n\n  const { tabsRef } = useTabsNavigation(role === 'tablist', isRtl);\n\n  const actualIndex = options.findIndex((option) => option.value === value);\n\n  useIsomorphicLayoutEffect(() => {\n    if (actualIndex === -1 && process.env.NODE_ENV === 'development') {\n      warn('defaultValue: такого значения нет среди опций!', 'error');\n    }\n  }, [actualIndex]);\n\n  const sliderStyle: CSSCustomProperties = {\n    '--vkui_internal--SegmentedControl_actual_index': String(actualIndex),\n    '--vkui_internal--SegmentedControl_options': String(options.length),\n  };\n\n  return (\n    <RootComponent\n      {...restProps}\n      baseClassName={classNames(\n        styles.host,\n        sizeY !== 'compact' && sizeYClassNames[sizeY],\n        size === 'l' && styles.sizeL,\n        isRtl && styles.rtl,\n      )}\n    >\n      <div role={role} ref={tabsRef} className={styles.in}>\n        {actualIndex > -1 && <div aria-hidden className={styles.slider} style={sliderStyle} />}\n        {options.map(({ label, before, ...optionProps }) => {\n          const selected = value === optionProps.value;\n          const onSelect = () => onChange(optionProps.value);\n          const optionRootProps: SegmentedControlOptionProps['rootProps'] =\n            role === 'tablist'\n              ? {\n                  'role': 'tab',\n                  'aria-selected': selected,\n                  'onClick': onSelect,\n                  'tabIndex': optionProps.tabIndex ?? (selected ? 0 : -1),\n                  ...optionProps,\n                }\n              : undefined;\n\n          const optionInputProps: SegmentedControlOptionProps['inputProps'] =\n            role !== 'tablist'\n              ? {\n                  role: optionProps.role || (role === 'radiogroup' ? 'radio' : undefined),\n                  checked: selected,\n                  onChange: onSelect,\n                  name: name ?? id,\n                  ...optionProps,\n                }\n              : undefined;\n\n          return (\n            <SegmentedControlOption\n              key={`${optionProps.value}`}\n              before={before}\n              rootProps={optionRootProps}\n              inputProps={optionInputProps}\n            >\n              {label}\n            </SegmentedControlOption>\n          );\n        })}\n      </div>\n    </RootComponent>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}