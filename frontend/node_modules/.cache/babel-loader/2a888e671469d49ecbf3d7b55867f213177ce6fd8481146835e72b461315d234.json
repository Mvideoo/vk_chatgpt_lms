{"ast":null,"code":"'use client';\n\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nimport { classNames } from \"@vkontakte/vkjs\";\nimport { millisecondsInSecond } from \"date-fns/constants\";\nimport { useExternRef } from \"../../hooks/useExternRef.js\";\nimport { useResizeObserver } from \"../../hooks/useResizeObserver.js\";\nimport { useStateWithPrev } from \"../../hooks/useStateWithPrev.js\";\nimport { useDOM } from \"../../lib/dom.js\";\nimport { RootComponent } from \"../RootComponent/RootComponent.js\";\nconst CUSTOM_PROPERTY_GRADIENT_LEFT = '--vkui_internal--skeleton_gradient_left';\n/**\n * Синхронизирует анимацию скелетонов с помощью временных отрезков\n *\n * ## visibilitychange\n *\n * В синхронизацию не заложен механизм перехода на оптимизации браузеров при\n * переходе на другую вкладку, поскольку нет уверенности в реальности таких\n * кейсов со скелетонами. Если такой кейс принесут, необходимо обработать\n * событие `visibilitychange` используя функцию `syncAnimation`\n *\n * https://developer.chrome.com/blog/page-lifecycle-api/\n *\n * @param duration длительность анимации в секундах\n */\nfunction useSkeletonSyncAnimation(disableAnimation) {\n  let duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1.5;\n  const [isAnimationStarted, setIsAnimationStarted] = React.useState(false);\n  const timer = React.useRef(undefined);\n  const syncAnimation = React.useCallback(() => {\n    clearTimeout(timer.current);\n    setIsAnimationStarted(false);\n    const durationInMilliseconds = duration * millisecondsInSecond;\n    const delay = durationInMilliseconds - performance.now() % durationInMilliseconds;\n    timer.current = setTimeout(() => setIsAnimationStarted(true), delay);\n    return () => clearTimeout(timer.current);\n  }, [duration]);\n  React.useEffect(() => {\n    if (disableAnimation) {\n      setIsAnimationStarted(false);\n      return;\n    }\n    if (isAnimationStarted) {\n      return;\n    }\n    return syncAnimation();\n  }, [disableAnimation, isAnimationStarted, syncAnimation]);\n  return isAnimationStarted;\n}\n/**\n * Вычисляет позицию скелетона\n */\nfunction useSkeletonPosition(rootRef) {\n  const {\n    document,\n    window\n  } = useDOM();\n  const [[skeletonGradientLeft, prevSkeletonGradientLeft], setSkeletonGradientLeft] = useStateWithPrev('0');\n  const updatePosition = React.useCallback(() => {\n    const el = rootRef.current;\n    if (!el || !document) {\n      return;\n    }\n    const value = -(el.getBoundingClientRect().left - document.body.getBoundingClientRect().left);\n    const gradientValue = value === 0 ? '0' : `${value}px`;\n    if (prevSkeletonGradientLeft !== gradientValue) {\n      setSkeletonGradientLeft(gradientValue);\n    }\n  }, [document, prevSkeletonGradientLeft, rootRef, setSkeletonGradientLeft]);\n  React.useEffect(updatePosition, [updatePosition]);\n  useResizeObserver(window, updatePosition);\n  return skeletonGradientLeft;\n}\n/**\n * > Старайтесь минимизировать количество заглушек на экране. Не каждый элемент\n * > на экране должен заменяться заглушкой.\n * >\n * > Текстовые блоки лучше сокращать до трёх строк. Ширина последней строки\n * > скелета вычисляется, как 75% от ширины текстового блока. Высота скелетона\n * > автоматически подстраивается под размер шрифта, поэтому идеально\n * > вписывается в слоты компонентов, которые обычно ожидают текст.\n *\n * @since 6.1.0\n */\nexport const Skeleton = _param => {\n  var {\n      width,\n      height,\n      inlineSize,\n      blockSize,\n      maxWidth,\n      maxInlineSize,\n      borderRadius,\n      children,\n      colorFrom,\n      colorTo,\n      noAnimation = false,\n      duration,\n      margin,\n      getRootRef\n    } = _param,\n    restProps = _object_without_properties(_param, [\"width\", \"height\", \"inlineSize\", \"blockSize\", \"maxWidth\", \"maxInlineSize\", \"borderRadius\", \"children\", \"colorFrom\", \"colorTo\", \"noAnimation\", \"duration\", \"margin\", \"getRootRef\"]);\n  const rootRef = useExternRef(getRootRef);\n  const disableAnimation = !useSkeletonSyncAnimation(noAnimation, duration);\n  const skeletonGradientLeft = useSkeletonPosition(rootRef);\n  const skeletonStyle = {\n    width,\n    height,\n    inlineSize,\n    blockSize,\n    maxWidth,\n    maxInlineSize,\n    borderRadius,\n    margin,\n    [CUSTOM_PROPERTY_GRADIENT_LEFT]: skeletonGradientLeft\n  };\n  if (colorFrom) {\n    skeletonStyle['--vkui_internal--skeleton_color_from'] = colorFrom;\n  }\n  if (colorTo) {\n    skeletonStyle['--vkui_internal--skeleton_color_to'] = colorTo;\n  }\n  if (Number.isFinite(duration)) {\n    skeletonStyle['--vkui_internal--skeleton_animation_duration'] = `${duration}s`;\n  }\n  return /*#__PURE__*/_jsx(RootComponent, _object_spread_props(_object_spread({\n    getRootRef: rootRef,\n    Component: \"span\",\n    baseClassName: classNames(\"vkuiSkeleton__host\", disableAnimation && \"vkuiSkeleton__disableAnimation\"),\n    baseStyle: skeletonStyle\n  }, restProps), {\n    children: children || /*#__PURE__*/_jsx(_Fragment, {\n      children: \"‌\"\n    })\n  }));\n};","map":{"version":3,"names":["React","classNames","millisecondsInSecond","useExternRef","useResizeObserver","useStateWithPrev","useDOM","RootComponent","CUSTOM_PROPERTY_GRADIENT_LEFT","useSkeletonSyncAnimation","disableAnimation","duration","arguments","length","undefined","isAnimationStarted","setIsAnimationStarted","useState","timer","useRef","syncAnimation","useCallback","clearTimeout","current","durationInMilliseconds","delay","performance","now","setTimeout","useEffect","useSkeletonPosition","rootRef","document","window","skeletonGradientLeft","prevSkeletonGradientLeft","setSkeletonGradientLeft","updatePosition","el","value","getBoundingClientRect","left","body","gradientValue","Skeleton","_param","width","height","inlineSize","blockSize","maxWidth","maxInlineSize","borderRadius","children","colorFrom","colorTo","noAnimation","margin","getRootRef","restProps","_object_without_properties","skeletonStyle","Number","isFinite","_jsx","_object_spread_props","_object_spread","Component","baseClassName","baseStyle","_Fragment"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/components/Skeleton/Skeleton.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { millisecondsInSecond } from 'date-fns/constants';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { useResizeObserver } from '../../hooks/useResizeObserver';\nimport { useStateWithPrev } from '../../hooks/useStateWithPrev';\nimport { useDOM } from '../../lib/dom';\nimport type { CSSCustomProperties, HTMLAttributesWithRootRef } from '../../types';\nimport { RootComponent } from '../RootComponent/RootComponent';\nimport styles from './Skeleton.module.css';\n\nconst CUSTOM_PROPERTY_GRADIENT_LEFT = '--vkui_internal--skeleton_gradient_left';\n\n/**\n * Синхронизирует анимацию скелетонов с помощью временных отрезков\n *\n * ## visibilitychange\n *\n * В синхронизацию не заложен механизм перехода на оптимизации браузеров при\n * переходе на другую вкладку, поскольку нет уверенности в реальности таких\n * кейсов со скелетонами. Если такой кейс принесут, необходимо обработать\n * событие `visibilitychange` используя функцию `syncAnimation`\n *\n * https://developer.chrome.com/blog/page-lifecycle-api/\n *\n * @param duration длительность анимации в секундах\n */\nfunction useSkeletonSyncAnimation(disableAnimation: boolean, duration = 1.5) {\n  const [isAnimationStarted, setIsAnimationStarted] = React.useState<boolean>(false);\n  const timer = React.useRef<ReturnType<typeof setTimeout> | undefined>(undefined);\n\n  const syncAnimation = React.useCallback(() => {\n    clearTimeout(timer.current);\n    setIsAnimationStarted(false);\n\n    const durationInMilliseconds = duration * millisecondsInSecond;\n    const delay = durationInMilliseconds - (performance.now() % durationInMilliseconds);\n\n    timer.current = setTimeout(() => setIsAnimationStarted(true), delay);\n\n    return () => clearTimeout(timer.current);\n  }, [duration]);\n\n  React.useEffect(() => {\n    if (disableAnimation) {\n      setIsAnimationStarted(false);\n      return;\n    }\n\n    if (isAnimationStarted) {\n      return;\n    }\n\n    return syncAnimation();\n  }, [disableAnimation, isAnimationStarted, syncAnimation]);\n\n  return isAnimationStarted;\n}\n\n/**\n * Вычисляет позицию скелетона\n */\nfunction useSkeletonPosition(rootRef: React.RefObject<HTMLElement | null>) {\n  const { document, window } = useDOM();\n  const [[skeletonGradientLeft, prevSkeletonGradientLeft], setSkeletonGradientLeft] =\n    useStateWithPrev('0');\n\n  const updatePosition = React.useCallback(() => {\n    const el = rootRef.current;\n    if (!el || !document) {\n      return;\n    }\n\n    const value = -(el.getBoundingClientRect().left - document.body.getBoundingClientRect().left);\n    const gradientValue = value === 0 ? '0' : `${value}px`;\n    if (prevSkeletonGradientLeft !== gradientValue) {\n      setSkeletonGradientLeft(gradientValue);\n    }\n  }, [document, prevSkeletonGradientLeft, rootRef, setSkeletonGradientLeft]);\n\n  React.useEffect(updatePosition, [updatePosition]);\n  useResizeObserver(window, updatePosition);\n\n  return skeletonGradientLeft;\n}\n\nexport interface SkeletonProps\n  extends HTMLAttributesWithRootRef<HTMLDivElement | HTMLSpanElement>,\n    Pick<\n      React.CSSProperties,\n      | 'width'\n      | 'height'\n      | 'inlineSize'\n      | 'blockSize'\n      | 'maxWidth'\n      | 'maxInlineSize'\n      | 'borderRadius'\n      | 'margin'\n    > {\n  /**\n   * Начальный цвет анимации\n   */\n  colorFrom?: string;\n\n  /**\n   * Финальный цвет анимации\n   */\n  colorTo?: string;\n\n  /**\n   * Выключает анимацию, в результате чего показывается только один цвет\n   */\n  noAnimation?: boolean;\n\n  /**\n   * Длительность анимации в секундах\n   */\n  duration?: number;\n}\n\n/**\n * > Старайтесь минимизировать количество заглушек на экране. Не каждый элемент\n * > на экране должен заменяться заглушкой.\n * >\n * > Текстовые блоки лучше сокращать до трёх строк. Ширина последней строки\n * > скелета вычисляется, как 75% от ширины текстового блока. Высота скелетона\n * > автоматически подстраивается под размер шрифта, поэтому идеально\n * > вписывается в слоты компонентов, которые обычно ожидают текст.\n *\n * @since 6.1.0\n */\nexport const Skeleton = ({\n  width,\n  height,\n  inlineSize,\n  blockSize,\n  maxWidth,\n  maxInlineSize,\n  borderRadius,\n  children,\n  colorFrom,\n  colorTo,\n  noAnimation = false,\n  duration,\n  margin,\n  getRootRef,\n  ...restProps\n}: SkeletonProps): React.ReactNode => {\n  const rootRef = useExternRef(getRootRef);\n\n  const disableAnimation = !useSkeletonSyncAnimation(noAnimation, duration);\n  const skeletonGradientLeft = useSkeletonPosition(rootRef);\n\n  const skeletonStyle: React.CSSProperties & CSSCustomProperties = {\n    width,\n    height,\n    inlineSize,\n    blockSize,\n    maxWidth,\n    maxInlineSize,\n    borderRadius,\n    margin,\n    [CUSTOM_PROPERTY_GRADIENT_LEFT]: skeletonGradientLeft,\n  };\n\n  if (colorFrom) {\n    skeletonStyle['--vkui_internal--skeleton_color_from'] = colorFrom;\n  }\n\n  if (colorTo) {\n    skeletonStyle['--vkui_internal--skeleton_color_to'] = colorTo;\n  }\n\n  if (Number.isFinite(duration)) {\n    skeletonStyle['--vkui_internal--skeleton_animation_duration'] = `${duration}s`;\n  }\n\n  return (\n    <RootComponent\n      getRootRef={rootRef}\n      Component=\"span\"\n      baseClassName={classNames(styles.host, disableAnimation && styles.disableAnimation)}\n      baseStyle={skeletonStyle}\n      {...restProps}\n    >\n      {children || <>&zwnj;</>}\n    </RootComponent>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}