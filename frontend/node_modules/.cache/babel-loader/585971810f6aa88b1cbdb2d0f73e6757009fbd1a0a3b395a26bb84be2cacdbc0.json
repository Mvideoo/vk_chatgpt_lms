{"ast":null,"code":"'use client';\n\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nimport { ConfigProviderContext, useConfigProvider, useConfigProviderContextMemo } from \"./ConfigProviderContext.js\";\n/**\n * Компонент предназначен для перебивания одного из значений контекста\n */\nexport function ConfigProviderOverride(_param) {\n  var {\n      children\n    } = _param,\n    contextValue = _object_without_properties(_param, [\"children\"]);\n  const parentConfig = useConfigProvider();\n  const configContext = useConfigProviderContextMemo(_object_spread({}, parentConfig, contextValue));\n  return /*#__PURE__*/_jsx(ConfigProviderContext.Provider, {\n    value: configContext,\n    children: children\n  });\n}","map":{"version":3,"names":["React","ConfigProviderContext","useConfigProvider","useConfigProviderContextMemo","ConfigProviderOverride","_param","children","contextValue","_object_without_properties","parentConfig","configContext","_object_spread","_jsx","Provider","value"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/components/ConfigProvider/ConfigProviderOverride.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport {\n  ConfigProviderContext,\n  type ConfigProviderContextInterface,\n  useConfigProvider,\n  useConfigProviderContextMemo,\n} from './ConfigProviderContext';\n\nexport interface ConfigProviderOverrideProps extends Partial<ConfigProviderContextInterface> {\n  children: React.ReactNode;\n}\n\n/**\n * Компонент предназначен для перебивания одного из значений контекста\n */\nexport function ConfigProviderOverride({\n  children,\n  ...contextValue\n}: ConfigProviderOverrideProps): React.ReactNode {\n  const parentConfig = useConfigProvider();\n\n  const configContext = useConfigProviderContextMemo({ ...parentConfig, ...contextValue });\n\n  return (\n    <ConfigProviderContext.Provider value={configContext}>\n      {children}\n    </ConfigProviderContext.Provider>\n  );\n}\n"],"mappings":"AAAA;;;;;AAEA,YAAYA,KAAA,MAAW;AACvB,SACEC,qBAAqB,EAErBC,iBAAiB,EACjBC,4BAA4B,QACvB;AAMP;;;AAGA,OAAO,SAASC,uBAAuBC,MAAA;MAAA;MACrCC;IAAQ,CAEoB,GAHSD,MAAA;IAElCE,YAAA,GAAAC,0BAAA,CAFkCH,MAAA,GACrC,W;EAGA,MAAMI,YAAA,GAAeP,iBAAA;EAErB,MAAMQ,aAAA,GAAgBP,4BAAA,CAA6BQ,cAAA,KAAKF,YAAA,EAAiBF,YAAA;EAEzE,oBACEK,IAAA,CAACX,qBAAA,CAAsBY,QAAQ;IAACC,KAAA,EAAOJ,aAAA;cACpCJ;;AAGP","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}