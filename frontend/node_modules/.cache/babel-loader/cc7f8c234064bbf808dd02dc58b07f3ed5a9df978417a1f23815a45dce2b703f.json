{"ast":null,"code":"'use client';\n\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nimport { useCustomEnsuredControl } from \"../../hooks/useEnsuredControl.js\";\nimport { AccordionContent } from \"./AccordionContent.js\";\nimport { AccordionContext } from \"./AccordionContext.js\";\nimport { AccordionSummary } from \"./AccordionSummary.js\";\nfunction useAccordionId(id) {\n  const generatedId = React.useId();\n  const labelId = id !== null && id !== void 0 ? id : `Accordion${generatedId}`;\n  const contentId = `AccordionContent${id !== null && id !== void 0 ? id : generatedId}`;\n  return {\n    labelId,\n    contentId\n  };\n}\nexport const Accordion = _param => {\n  var {\n      id,\n      expanded: expandedProp,\n      defaultExpanded = false,\n      onChange: onChangeProp,\n      children\n    } = _param,\n    restProps = _object_without_properties(_param, [\"id\", \"expanded\", \"defaultExpanded\", \"onChange\", \"children\"]);\n  const {\n    labelId,\n    contentId\n  } = useAccordionId(id);\n  const [expanded, onChange] = useCustomEnsuredControl({\n    value: expandedProp,\n    defaultValue: defaultExpanded,\n    onChange: onChangeProp,\n    disabled: restProps.disabled\n  });\n  const context = React.useMemo(() => ({\n    labelId,\n    contentId,\n    expanded: expanded || false,\n    onChange\n  }), [contentId, expanded, labelId, onChange]);\n  return /*#__PURE__*/_jsx(AccordionContext.Provider, {\n    value: context,\n    children: children\n  });\n};\nAccordion.displayName = 'Accordion';\nAccordion.Summary = AccordionSummary;\nAccordion.Summary.displayName = 'Accordion.Summary';\nAccordion.Content = AccordionContent;\nAccordion.Content.displayName = 'Accordion.Content';","map":{"version":3,"names":["React","useCustomEnsuredControl","AccordionContent","AccordionContext","AccordionSummary","useAccordionId","id","generatedId","useId","labelId","contentId","Accordion","_param","expanded","expandedProp","defaultExpanded","onChange","onChangeProp","children","restProps","_object_without_properties","value","defaultValue","disabled","context","useMemo","_jsx","Provider","displayName","Summary","Content"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/components/Accordion/Accordion.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { useCustomEnsuredControl } from '../../hooks/useEnsuredControl';\nimport type { HasChildren } from '../../types';\nimport { AccordionContent } from './AccordionContent';\nimport { AccordionContext } from './AccordionContext';\nimport { AccordionSummary } from './AccordionSummary';\n\nfunction useAccordionId(id: AccordionProps['id']) {\n  const generatedId = React.useId();\n  const labelId = id ?? `Accordion${generatedId}`;\n  const contentId = `AccordionContent${id ?? generatedId}`;\n\n  return { labelId, contentId };\n}\n\nexport interface AccordionProps extends HasChildren {\n  id?: string;\n  /**\n   * Управляет раскрытием и скрытием контента.\n   */\n  expanded?: boolean;\n  /**\n   * Значение по умолчанию.\n   */\n  defaultExpanded?: boolean;\n  /**\n   * Возвращает новое значение при изменении раскрытия/сворачивания контента.\n   */\n  onChange?: (newValue: boolean) => void;\n  disabled?: boolean;\n}\n\nexport const Accordion: React.FC<AccordionProps> & {\n  Summary: typeof AccordionSummary;\n  Content: typeof AccordionContent;\n} = ({\n  id,\n  expanded: expandedProp,\n  defaultExpanded = false,\n  onChange: onChangeProp,\n  children,\n  ...restProps\n}: AccordionProps) => {\n  const { labelId, contentId } = useAccordionId(id);\n\n  const [expanded, onChange] = useCustomEnsuredControl({\n    value: expandedProp,\n    defaultValue: defaultExpanded,\n    onChange: onChangeProp,\n    disabled: restProps.disabled,\n  });\n\n  const context = React.useMemo(\n    () => ({\n      labelId,\n      contentId,\n      expanded: expanded || false,\n      onChange,\n    }),\n    [contentId, expanded, labelId, onChange],\n  );\n\n  return <AccordionContext.Provider value={context}>{children}</AccordionContext.Provider>;\n};\n\nAccordion.displayName = 'Accordion';\n\nAccordion.Summary = AccordionSummary;\nAccordion.Summary.displayName = 'Accordion.Summary';\n\nAccordion.Content = AccordionContent;\nAccordion.Content.displayName = 'Accordion.Content';\n"],"mappings":"AAAA;;;;AAEA,YAAYA,KAAA,MAAW;AACvB,SAASC,uBAAuB,QAAQ;AAExC,SAASC,gBAAgB,QAAQ;AACjC,SAASC,gBAAgB,QAAQ;AACjC,SAASC,gBAAgB,QAAQ;AAEjC,SAASC,eAAeC,EAAwB;EAC9C,MAAMC,WAAA,GAAcP,KAAA,CAAMQ,KAAK;EAC/B,MAAMC,OAAA,GAAUH,EAAA,aAAAA,EAAA,cAAAA,EAAA,GAAM,YAAYC,WAAA,EAAa;EAC/C,MAAMG,SAAA,GAAY,mBAAmBJ,EAAA,aAAAA,EAAA,cAAAA,EAAA,GAAMC,WAAA,EAAa;EAExD,OAAO;IAAEE,OAAA;IAASC;EAAU;AAC9B;AAmBA,OAAO,MAAMC,SAAA,GAGTC,MAAA;MAAC;MACHN,EAAE;MACFO,QAAA,EAAUC,YAAY;MACtBC,eAAA,GAAkB,KAAK;MACvBC,QAAA,EAAUC,YAAY;MACtBC;IAAQ,CAEO,GAAAN,MAAA;IADZO,SAAA,GAAAC,0BAAA,CAAAR,MAAA,GALH,MACA,YACA,mBACA,YACA,W;EAGA,MAAM;IAAEH,OAAO;IAAEC;EAAS,CAAE,GAAGL,cAAA,CAAeC,EAAA;EAE9C,MAAM,CAACO,QAAA,EAAUG,QAAA,CAAS,GAAGf,uBAAA,CAAwB;IACnDoB,KAAA,EAAOP,YAAA;IACPQ,YAAA,EAAcP,eAAA;IACdC,QAAA,EAAUC,YAAA;IACVM,QAAA,EAAUJ,SAAA,CAAUI;EACtB;EAEA,MAAMC,OAAA,GAAUxB,KAAA,CAAMyB,OAAO,CAC3B,OAAO;IACLhB,OAAA;IACAC,SAAA;IACAG,QAAA,EAAUA,QAAA,IAAY;IACtBG;EACF,IACA,CAACN,SAAA,EAAWG,QAAA,EAAUJ,OAAA,EAASO,QAAA,CAAS;EAG1C,oBAAOU,IAAA,CAACvB,gBAAA,CAAiBwB,QAAQ;IAACN,KAAA,EAAOG,OAAA;cAAUN;;AACrD;AAEAP,SAAA,CAAUiB,WAAW,GAAG;AAExBjB,SAAA,CAAUkB,OAAO,GAAGzB,gBAAA;AACpBO,SAAA,CAAUkB,OAAO,CAACD,WAAW,GAAG;AAEhCjB,SAAA,CAAUmB,OAAO,GAAG5B,gBAAA;AACpBS,SAAA,CAAUmB,OAAO,CAACF,WAAW,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}