{"ast":null,"code":"import * as React from \"react\";\nimport { addMonths, endOfDay, isAfter, isBefore, isSameDay, startOfDay, subMonths } from \"date-fns\";\nimport { DEFAULT_MAX_YEAR, DEFAULT_MIN_YEAR, isDayMinMaxRestricted } from \"../lib/calendar.js\";\nexport function useCalendar(_ref2) {\n  let {\n    value,\n    disablePast,\n    disableFuture,\n    shouldDisableDate,\n    onHeaderChange,\n    onNextMonth,\n    onPrevMonth,\n    minDateTime,\n    maxDateTime\n  } = _ref2;\n  var _ref;\n  const [viewDate, setViewDate] = React.useState((_ref = Array.isArray(value) ? value[0] : value) !== null && _ref !== void 0 ? _ref : new Date());\n  const [focusedDay, setFocusedDay] = React.useState();\n  const setPrevMonth = React.useCallback(() => {\n    onPrevMonth === null || onPrevMonth === void 0 ? void 0 : onPrevMonth();\n    setViewDate(subMonths(viewDate, 1));\n  }, [viewDate, onPrevMonth]);\n  const setNextMonth = React.useCallback(() => {\n    onNextMonth === null || onNextMonth === void 0 ? void 0 : onNextMonth();\n    setViewDate(addMonths(viewDate, 1));\n  }, [viewDate, onNextMonth]);\n  const handleSetViewDate = React.useCallback(value => {\n    onHeaderChange === null || onHeaderChange === void 0 ? void 0 : onHeaderChange(value);\n    setViewDate(value);\n  }, [onHeaderChange]);\n  const isDayFocused = React.useCallback(day => Boolean(focusedDay && isSameDay(day, focusedDay)), [focusedDay]);\n  const isDayDisabled = React.useCallback((day, withTime) => {\n    const now = new Date();\n    if (shouldDisableDate) {\n      return shouldDisableDate(day);\n    }\n    if (disableFuture) {\n      return isAfter(startOfDay(day), now);\n    }\n    if (disablePast) {\n      return isBefore(endOfDay(day), now);\n    }\n    if (minDateTime || maxDateTime) {\n      return isDayMinMaxRestricted(day, {\n        min: minDateTime,\n        max: maxDateTime,\n        withTime\n      });\n    }\n    return false;\n  }, [disableFuture, disablePast, shouldDisableDate, minDateTime, maxDateTime]);\n  const isMonthDisabled = React.useCallback((month, year) => {\n    const now = new Date();\n    year = year || viewDate.getFullYear();\n    const minMonth = minDateTime ? minDateTime.getMonth() : 0;\n    const maxMonth = maxDateTime ? maxDateTime.getMonth() : 11;\n    const minYear = (minDateTime === null || minDateTime === void 0 ? void 0 : minDateTime.getFullYear()) || DEFAULT_MIN_YEAR;\n    const maxYear = (maxDateTime === null || maxDateTime === void 0 ? void 0 : maxDateTime.getFullYear()) || DEFAULT_MAX_YEAR;\n    let isDisabled = year >= minYear && year <= maxYear ? year === minYear && minMonth > month || year === maxYear && month > maxMonth : true;\n    if (disableFuture) {\n      isDisabled = isDisabled || (year === now.getFullYear() ? month > now.getMonth() : year > now.getFullYear());\n    }\n    if (disablePast) {\n      isDisabled = isDisabled || (year === now.getFullYear() ? month < now.getMonth() : year < now.getFullYear());\n    }\n    return isDisabled;\n  }, [disableFuture, disablePast, viewDate, minDateTime, maxDateTime]);\n  const isYearDisabled = React.useCallback(year => {\n    const now = new Date();\n    const minYear = (minDateTime === null || minDateTime === void 0 ? void 0 : minDateTime.getFullYear()) || DEFAULT_MIN_YEAR;\n    const maxYear = (maxDateTime === null || maxDateTime === void 0 ? void 0 : maxDateTime.getFullYear()) || DEFAULT_MAX_YEAR;\n    let isDisabled = minYear > year || year > maxYear;\n    if (disableFuture) {\n      isDisabled = isDisabled || year > now.getFullYear();\n    }\n    if (disablePast) {\n      isDisabled = isDisabled || year < now.getFullYear();\n    }\n    return isDisabled;\n  }, [disableFuture, disablePast, minDateTime, maxDateTime]);\n  const resetSelectedDay = React.useCallback(() => {\n    setFocusedDay(undefined);\n  }, [setFocusedDay]);\n  return {\n    viewDate,\n    setViewDate: handleSetViewDate,\n    setPrevMonth,\n    setNextMonth,\n    focusedDay,\n    setFocusedDay,\n    isDayFocused,\n    isDayDisabled,\n    resetSelectedDay,\n    isMonthDisabled,\n    isYearDisabled\n  };\n}","map":{"version":3,"names":["React","addMonths","endOfDay","isAfter","isBefore","isSameDay","startOfDay","subMonths","DEFAULT_MAX_YEAR","DEFAULT_MIN_YEAR","isDayMinMaxRestricted","useCalendar","_ref2","value","disablePast","disableFuture","shouldDisableDate","onHeaderChange","onNextMonth","onPrevMonth","minDateTime","maxDateTime","_ref","viewDate","setViewDate","useState","Array","isArray","Date","focusedDay","setFocusedDay","setPrevMonth","useCallback","setNextMonth","handleSetViewDate","isDayFocused","day","Boolean","isDayDisabled","withTime","now","min","max","isMonthDisabled","month","year","getFullYear","minMonth","getMonth","maxMonth","minYear","maxYear","isDisabled","isYearDisabled","resetSelectedDay","undefined"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/hooks/useCalendar.ts"],"sourcesContent":["import * as React from 'react';\nimport { addMonths, endOfDay, isAfter, isBefore, isSameDay, startOfDay, subMonths } from 'date-fns';\nimport type { CalendarProps } from '../components/Calendar/Calendar';\nimport { DEFAULT_MAX_YEAR, DEFAULT_MIN_YEAR, isDayMinMaxRestricted } from '../lib/calendar';\n\nexport interface UseCalendarDependencies\n  extends Pick<\n    CalendarProps,\n    | 'onHeaderChange'\n    | 'onNextMonth'\n    | 'onPrevMonth'\n    | 'minDateTime'\n    | 'maxDateTime'\n    | 'shouldDisableDate'\n    | 'disableFuture'\n    | 'disablePast'\n  > {\n  value?: Array<Date | null> | Date;\n}\n\nexport function useCalendar({\n  value,\n  disablePast,\n  disableFuture,\n  shouldDisableDate,\n  onHeaderChange,\n  onNextMonth,\n  onPrevMonth,\n  minDateTime,\n  maxDateTime,\n}: UseCalendarDependencies): {\n  viewDate: Date;\n  setViewDate: (value: Date) => void;\n  setPrevMonth: () => void;\n  setNextMonth: () => void;\n  focusedDay: Date | undefined;\n  setFocusedDay: React.Dispatch<React.SetStateAction<Date | undefined>>;\n  isDayFocused: (day: Date) => boolean;\n  isDayDisabled: (day: Date, withTime?: boolean) => boolean;\n  resetSelectedDay: () => void;\n  isMonthDisabled: (month: number, year?: number) => boolean;\n  isYearDisabled: (year: number) => boolean;\n} {\n  const [viewDate, setViewDate] = React.useState(\n    (Array.isArray(value) ? value[0] : value) ?? new Date(),\n  );\n  const [focusedDay, setFocusedDay] = React.useState<Date>();\n\n  const setPrevMonth = React.useCallback(() => {\n    onPrevMonth?.();\n    setViewDate(subMonths(viewDate, 1));\n  }, [viewDate, onPrevMonth]);\n  const setNextMonth = React.useCallback(() => {\n    onNextMonth?.();\n    setViewDate(addMonths(viewDate, 1));\n  }, [viewDate, onNextMonth]);\n\n  const handleSetViewDate = React.useCallback(\n    (value: Date) => {\n      onHeaderChange?.(value);\n      setViewDate(value);\n    },\n    [onHeaderChange],\n  );\n\n  const isDayFocused = React.useCallback(\n    (day: Date) => Boolean(focusedDay && isSameDay(day, focusedDay)),\n    [focusedDay],\n  );\n\n  const isDayDisabled = React.useCallback(\n    (day: Date, withTime?: boolean) => {\n      const now = new Date();\n      if (shouldDisableDate) {\n        return shouldDisableDate(day);\n      }\n      if (disableFuture) {\n        return isAfter(startOfDay(day), now);\n      }\n      if (disablePast) {\n        return isBefore(endOfDay(day), now);\n      }\n      if (minDateTime || maxDateTime) {\n        return isDayMinMaxRestricted(day, { min: minDateTime, max: maxDateTime, withTime });\n      }\n\n      return false;\n    },\n    [disableFuture, disablePast, shouldDisableDate, minDateTime, maxDateTime],\n  );\n\n  const isMonthDisabled = React.useCallback(\n    (month: number, year?: number): boolean => {\n      const now = new Date();\n      year = year || viewDate.getFullYear();\n      const minMonth = minDateTime ? minDateTime.getMonth() : 0;\n      const maxMonth = maxDateTime ? maxDateTime.getMonth() : 11;\n      const minYear = minDateTime?.getFullYear() || DEFAULT_MIN_YEAR;\n      const maxYear = maxDateTime?.getFullYear() || DEFAULT_MAX_YEAR;\n\n      let isDisabled =\n        year >= minYear && year <= maxYear\n          ? (year === minYear && minMonth > month) || (year === maxYear && month > maxMonth)\n          : true;\n\n      if (disableFuture) {\n        isDisabled =\n          isDisabled ||\n          (year === now.getFullYear() ? month > now.getMonth() : year > now.getFullYear());\n      }\n      if (disablePast) {\n        isDisabled =\n          isDisabled ||\n          (year === now.getFullYear() ? month < now.getMonth() : year < now.getFullYear());\n      }\n\n      return isDisabled;\n    },\n    [disableFuture, disablePast, viewDate, minDateTime, maxDateTime],\n  );\n\n  const isYearDisabled = React.useCallback(\n    (year: number): boolean => {\n      const now = new Date();\n      const minYear = minDateTime?.getFullYear() || DEFAULT_MIN_YEAR;\n      const maxYear = maxDateTime?.getFullYear() || DEFAULT_MAX_YEAR;\n\n      let isDisabled = minYear > year || year > maxYear;\n      if (disableFuture) {\n        isDisabled = isDisabled || year > now.getFullYear();\n      }\n      if (disablePast) {\n        isDisabled = isDisabled || year < now.getFullYear();\n      }\n\n      return isDisabled;\n    },\n    [disableFuture, disablePast, minDateTime, maxDateTime],\n  );\n\n  const resetSelectedDay = React.useCallback(() => {\n    setFocusedDay(undefined);\n  }, [setFocusedDay]);\n\n  return {\n    viewDate,\n    setViewDate: handleSetViewDate,\n    setPrevMonth,\n    setNextMonth,\n    focusedDay,\n    setFocusedDay,\n    isDayFocused,\n    isDayDisabled,\n    resetSelectedDay,\n    isMonthDisabled,\n    isYearDisabled,\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}