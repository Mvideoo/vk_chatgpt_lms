{"ast":null,"code":"'use client';\n\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nimport { classNames } from \"@vkontakte/vkjs\";\nimport { Spinner } from \"../Spinner/Spinner.js\";\nimport { ScreenSpinnerContext } from \"./context.js\";\nexport const ScreenSpinnerLoader = _param => {\n  var {\n      children\n    } = _param,\n    restProps = _object_without_properties(_param, [\"children\"]);\n  const {\n    label\n  } = React.useContext(ScreenSpinnerContext);\n  const a11yText = children !== null && children !== void 0 ? children : label;\n  return /*#__PURE__*/_jsx(Spinner, _object_spread_props(_object_spread({\n    className: classNames(\"vkuiScreenSpinner__spinner\", !label && \"vkuiScreenSpinner__spinnerTransition\"),\n    size: \"xl\",\n    noColor: true\n  }, restProps), {\n    children: a11yText\n  }));\n};\nScreenSpinnerLoader.displayName = 'ScreenSpinnerLoader';","map":{"version":3,"names":["React","classNames","Spinner","ScreenSpinnerContext","ScreenSpinnerLoader","_param","children","restProps","_object_without_properties","label","useContext","a11yText","_jsx","_object_spread_props","_object_spread","className","size","noColor","displayName"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/components/ScreenSpinner/ScreenSpinnerLoader.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { Spinner } from '../Spinner/Spinner';\nimport type { SpinnerProps } from '../Spinner/Spinner';\nimport { ScreenSpinnerContext } from './context';\nimport styles from './ScreenSpinner.module.css';\n\nexport const ScreenSpinnerLoader: React.FC<Omit<SpinnerProps, 'size'>> = ({\n  children,\n  ...restProps\n}) => {\n  const { label } = React.useContext(ScreenSpinnerContext);\n  const a11yText = children ?? label;\n  return (\n    <Spinner\n      className={classNames(styles.spinner, !label && styles.spinnerTransition)}\n      size=\"xl\"\n      noColor\n      {...restProps}\n    >\n      {a11yText}\n    </Spinner>\n  );\n};\n\nScreenSpinnerLoader.displayName = 'ScreenSpinnerLoader';\n"],"mappings":"AAAA;;;;;;AAEA,YAAYA,KAAA,MAAW;AACvB,SAASC,UAAU,QAAQ;AAC3B,SAASC,OAAO,QAAQ;AAExB,SAASC,oBAAoB,QAAQ;AAGrC,OAAO,MAAMC,mBAAA,GAA4DC,MAAA;MAAC;MACxEC;IAAQ,CAET,GAAAD,MAAA;IADIE,SAAA,GAAAC,0BAAA,CAAAH,MAAA,GADH,W;EAGA,MAAM;IAAEI;EAAK,CAAE,GAAGT,KAAA,CAAMU,UAAU,CAACP,oBAAA;EACnC,MAAMQ,QAAA,GAAWL,QAAA,aAAAA,QAAA,cAAAA,QAAA,GAAYG,KAAA;EAC7B,oBACEG,IAAA,CAACV,OAAA,EAAAW,oBAAA,CAAAC,cAAA;IACCC,SAAA,EAAWd,UAAA,+BAA2B,CAACQ,KAAA;IACvCO,IAAA,EAAK;IACLC,OAAO;KACHV,SAAA;cAEHI;;AAGP;AAEAP,mBAAA,CAAoBc,WAAW,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}