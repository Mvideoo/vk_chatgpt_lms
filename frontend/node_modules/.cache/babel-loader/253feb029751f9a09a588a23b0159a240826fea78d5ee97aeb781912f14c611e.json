{"ast":null,"code":"'use client';\n\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nimport { Icon20CheckBoxOff, Icon20CheckBoxOn, Icon20CheckCircleOff, Icon20CheckCircleOn, Icon24CheckBoxOff, Icon24CheckBoxOn, Icon24CheckCircleOff, Icon24CheckCircleOn } from \"@vkontakte/icons\";\nimport { classNames } from \"@vkontakte/vkjs\";\nimport { usePlatform } from \"../../../hooks/usePlatform.js\";\nimport { AdaptiveIconRenderer } from \"../../AdaptiveIconRenderer/AdaptiveIconRenderer.js\";\nimport { VisuallyHidden } from \"../../VisuallyHidden/VisuallyHidden.js\";\nconst CheckBoxOn = () => /*#__PURE__*/_jsx(AdaptiveIconRenderer, {\n  IconCompact: Icon20CheckBoxOn,\n  IconRegular: Icon24CheckBoxOn\n});\nconst CheckBoxOff = () => /*#__PURE__*/_jsx(AdaptiveIconRenderer, {\n  IconCompact: Icon20CheckBoxOff,\n  IconRegular: Icon24CheckBoxOff\n});\nconst CheckCircleOn = () => /*#__PURE__*/_jsx(AdaptiveIconRenderer, {\n  IconCompact: Icon20CheckCircleOn,\n  IconRegular: Icon24CheckCircleOn\n});\nconst CheckCircleOff = () => /*#__PURE__*/_jsx(AdaptiveIconRenderer, {\n  IconCompact: Icon20CheckCircleOff,\n  IconRegular: Icon24CheckCircleOff\n});\nfunction useTypeIcon(type) {\n  const platform = usePlatform();\n  if (type !== 'auto') {\n    return type;\n  }\n  if (platform === 'ios' || platform === 'vkcom') {\n    return 'circle';\n  }\n  return 'square';\n}\nexport const CellCheckbox = _param => {\n  var {\n      getRootRef,\n      getRef,\n      className,\n      style,\n      type = 'auto'\n    } = _param,\n    restProps = _object_without_properties(_param, [\"getRootRef\", \"getRef\", \"className\", \"style\", \"type\"]);\n  const typeIcon = useTypeIcon(type);\n  const IconOff = typeIcon === 'circle' ? CheckCircleOff : CheckBoxOff;\n  const IconOn = typeIcon === 'circle' ? CheckCircleOn : CheckBoxOn;\n  return /*#__PURE__*/_jsxs(\"span\", {\n    className: classNames(\"vkuiCellCheckbox__host\", className),\n    style: style,\n    ref: getRootRef,\n    children: [/*#__PURE__*/_jsx(VisuallyHidden, _object_spread_props(_object_spread({}, restProps), {\n      Component: \"input\",\n      type: \"checkbox\",\n      className: \"vkuiCellCheckbox__input\",\n      getRootRef: getRef\n    })), /*#__PURE__*/_jsx(\"span\", {\n      className: classNames(\"vkuiCellCheckbox__icon\", \"vkuiCellCheckbox__iconOff\"),\n      \"aria-hidden\": true,\n      children: /*#__PURE__*/_jsx(IconOff, {})\n    }), /*#__PURE__*/_jsx(\"span\", {\n      className: classNames(\"vkuiCellCheckbox__icon\", \"vkuiCellCheckbox__iconOn\"),\n      \"aria-hidden\": true,\n      children: /*#__PURE__*/_jsx(IconOn, {})\n    })]\n  });\n};","map":{"version":3,"names":["React","Icon20CheckBoxOff","Icon20CheckBoxOn","Icon20CheckCircleOff","Icon20CheckCircleOn","Icon24CheckBoxOff","Icon24CheckBoxOn","Icon24CheckCircleOff","Icon24CheckCircleOn","classNames","usePlatform","AdaptiveIconRenderer","VisuallyHidden","CheckBoxOn","_jsx","IconCompact","IconRegular","CheckBoxOff","CheckCircleOn","CheckCircleOff","useTypeIcon","type","platform","CellCheckbox","_param","getRootRef","getRef","className","style","restProps","_object_without_properties","typeIcon","IconOff","IconOn","_jsxs","ref","_object_spread_props","_object_spread","Component"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/components/Cell/CellCheckbox/CellCheckbox.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport {\n  Icon20CheckBoxOff,\n  Icon20CheckBoxOn,\n  Icon20CheckCircleOff,\n  Icon20CheckCircleOn,\n  Icon24CheckBoxOff,\n  Icon24CheckBoxOn,\n  Icon24CheckCircleOff,\n  Icon24CheckCircleOn,\n} from '@vkontakte/icons';\nimport { classNames } from '@vkontakte/vkjs';\nimport { usePlatform } from '../../../hooks/usePlatform';\nimport type { HasRef, HasRootRef } from '../../../types';\nimport { AdaptiveIconRenderer } from '../../AdaptiveIconRenderer/AdaptiveIconRenderer';\nimport { VisuallyHidden } from '../../VisuallyHidden/VisuallyHidden';\nimport type { CellProps } from '../Cell';\nimport styles from './CellCheckbox.module.css';\n\nconst CheckBoxOn = () => (\n  <AdaptiveIconRenderer IconCompact={Icon20CheckBoxOn} IconRegular={Icon24CheckBoxOn} />\n);\n\nconst CheckBoxOff = () => (\n  <AdaptiveIconRenderer IconCompact={Icon20CheckBoxOff} IconRegular={Icon24CheckBoxOff} />\n);\n\nconst CheckCircleOn = () => (\n  <AdaptiveIconRenderer IconCompact={Icon20CheckCircleOn} IconRegular={Icon24CheckCircleOn} />\n);\n\nconst CheckCircleOff = () => (\n  <AdaptiveIconRenderer IconCompact={Icon20CheckCircleOff} IconRegular={Icon24CheckCircleOff} />\n);\n\nfunction useTypeIcon(type: NonNullable<CellCheckboxProps['type']>) {\n  const platform = usePlatform();\n\n  if (type !== 'auto') {\n    return type;\n  }\n\n  if (platform === 'ios' || platform === 'vkcom') {\n    return 'circle';\n  }\n\n  return 'square';\n}\n\nexport interface CellCheckboxProps\n  extends Pick<CellProps, 'defaultChecked' | 'checked'>,\n    React.InputHTMLAttributes<HTMLInputElement>,\n    HasRootRef<HTMLSpanElement>,\n    HasRef<HTMLInputElement> {\n  /**\n   * Вид чекбокса. Если auto, то зависит от платформы.\n   */\n  type?: 'auto' | 'circle' | 'square';\n}\n\nexport const CellCheckbox = ({\n  getRootRef,\n  getRef,\n  className,\n  style,\n  type = 'auto',\n  ...restProps\n}: CellCheckboxProps): React.ReactNode => {\n  const typeIcon = useTypeIcon(type);\n\n  const IconOff = typeIcon === 'circle' ? CheckCircleOff : CheckBoxOff;\n  const IconOn = typeIcon === 'circle' ? CheckCircleOn : CheckBoxOn;\n\n  return (\n    <span className={classNames(styles.host, className)} style={style} ref={getRootRef}>\n      <VisuallyHidden\n        {...restProps}\n        Component=\"input\"\n        type=\"checkbox\"\n        className={styles.input}\n        getRootRef={getRef}\n      />\n      <span className={classNames(styles.icon, styles.iconOff)} aria-hidden>\n        <IconOff />\n      </span>\n      <span className={classNames(styles.icon, styles.iconOn)} aria-hidden>\n        <IconOn />\n      </span>\n    </span>\n  );\n};\n"],"mappings":"AAAA;;;;;;AAEA,YAAYA,KAAA,MAAW;AACvB,SACEC,iBAAiB,EACjBC,gBAAgB,EAChBC,oBAAoB,EACpBC,mBAAmB,EACnBC,iBAAiB,EACjBC,gBAAgB,EAChBC,oBAAoB,EACpBC,mBAAmB,QACd;AACP,SAASC,UAAU,QAAQ;AAC3B,SAASC,WAAW,QAAQ;AAE5B,SAASC,oBAAoB,QAAQ;AACrC,SAASC,cAAc,QAAQ;AAI/B,MAAMC,UAAA,GAAaA,CAAA,kBACjBC,IAAA,CAACH,oBAAA;EAAqBI,WAAA,EAAab,gBAAA;EAAkBc,WAAA,EAAaV;;AAGpE,MAAMW,WAAA,GAAcA,CAAA,kBAClBH,IAAA,CAACH,oBAAA;EAAqBI,WAAA,EAAad,iBAAA;EAAmBe,WAAA,EAAaX;;AAGrE,MAAMa,aAAA,GAAgBA,CAAA,kBACpBJ,IAAA,CAACH,oBAAA;EAAqBI,WAAA,EAAaX,mBAAA;EAAqBY,WAAA,EAAaR;;AAGvE,MAAMW,cAAA,GAAiBA,CAAA,kBACrBL,IAAA,CAACH,oBAAA;EAAqBI,WAAA,EAAaZ,oBAAA;EAAsBa,WAAA,EAAaT;;AAGxE,SAASa,YAAYC,IAA4C;EAC/D,MAAMC,QAAA,GAAWZ,WAAA;EAEjB,IAAIW,IAAA,KAAS,QAAQ;IACnB,OAAOA,IAAA;EACT;EAEA,IAAIC,QAAA,KAAa,SAASA,QAAA,KAAa,SAAS;IAC9C,OAAO;EACT;EAEA,OAAO;AACT;AAaA,OAAO,MAAMC,YAAA,GAAeC,MAAA;MAAC;MAC3BC,UAAU;MACVC,MAAM;MACNC,SAAS;MACTC,KAAK;MACLP,IAAA,GAAO;IAAM,CAEK,GAAAG,MAAA;IADfK,SAAA,GAAAC,0BAAA,CAAAN,MAAA,GALH,cACA,UACA,aACA,SACA,O;EAGA,MAAMO,QAAA,GAAWX,WAAA,CAAYC,IAAA;EAE7B,MAAMW,OAAA,GAAUD,QAAA,KAAa,WAAWZ,cAAA,GAAiBF,WAAA;EACzD,MAAMgB,MAAA,GAASF,QAAA,KAAa,WAAWb,aAAA,GAAgBL,UAAA;EAEvD,oBACEqB,KAAA,CAAC;IAAKP,SAAA,EAAWlB,UAAA,2BAAwBkB,SAAA;IAAYC,KAAA,EAAOA,KAAA;IAAOO,GAAA,EAAKV,UAAA;4BACtEX,IAAA,CAACF,cAAA,EAAAwB,oBAAA,CAAAC,cAAA,KACKR,SAAA;MACJS,SAAA,EAAU;MACVjB,IAAA,EAAK;MACLM,SAAS;MACTF,UAAA,EAAYC;sBAEdZ,IAAA,CAAC;MAAKa,SAAA,EAAWlB,UAAA;MAAyC,aAAW;gBACnE,aAAAK,IAAA,CAACkB,OAAA;qBAEHlB,IAAA,CAAC;MAAKa,SAAA,EAAWlB,UAAA;MAAwC,aAAW;gBAClE,aAAAK,IAAA,CAACmB,MAAA;;;AAIT","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}