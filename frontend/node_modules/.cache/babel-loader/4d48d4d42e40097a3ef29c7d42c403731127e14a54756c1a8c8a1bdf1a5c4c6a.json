{"ast":null,"code":"'use client';\n\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nimport { clamp } from \"../../helpers/math.js\";\nimport { useIsClient } from \"../../hooks/useIsClient.js\";\nimport { callMultiple } from \"../../lib/callMultiple.js\";\nimport { CarouselBase } from \"../CarouselBase/CarouselBase.js\";\nimport { useAutoPlay } from \"./hooks.js\";\n/**\n * @see https://vkcom.github.io/VKUI/#/Gallery\n */\nexport const Gallery = _param => {\n  var {\n      initialSlideIndex = 0,\n      children,\n      timeout = 0,\n      onChange,\n      bullets,\n      onDragStart,\n      onDragEnd\n    } = _param,\n    props = _object_without_properties(_param, [\"initialSlideIndex\", \"children\", \"timeout\", \"onChange\", \"bullets\", \"onDragStart\", \"onDragEnd\"]);\n  const [localSlideIndex, setSlideIndex] = React.useState(initialSlideIndex);\n  const isControlled = typeof props.slideIndex === 'number';\n  var _props_slideIndex;\n  const slideIndex = isControlled ? (_props_slideIndex = props.slideIndex) !== null && _props_slideIndex !== void 0 ? _props_slideIndex : 0 : localSlideIndex;\n  const slides = React.useMemo(() => React.Children.toArray(children).filter(item => Boolean(item)), [children]);\n  const childCount = slides.length;\n  const isClient = useIsClient();\n  const handleChange = React.useCallback(current => {\n    if (current === slideIndex) {\n      return;\n    }\n    !isControlled && setSlideIndex(current);\n    onChange && onChange(current);\n  }, [isControlled, onChange, slideIndex]);\n  const autoPlayControls = useAutoPlay({\n    timeout,\n    slideIndex,\n    onNext: () => handleChange((slideIndex + 1) % childCount)\n  });\n  // prevent invalid slideIndex\n  // any slide index is invalid with no slides, just keep it as is\n  const safeSlideIndex = childCount > 0 ? clamp(slideIndex, 0, childCount - 1) : slideIndex;\n  // notify parent in controlled mode\n  React.useEffect(() => {\n    if (onChange && safeSlideIndex !== slideIndex) {\n      onChange(safeSlideIndex);\n    }\n    setSlideIndex(safeSlideIndex);\n  }, [onChange, safeSlideIndex, slideIndex]);\n  if (!isClient) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(CarouselBase, _object_spread_props(_object_spread({\n    dragDisabled: isControlled && !onChange\n  }, props), {\n    onDragStart: callMultiple(onDragStart, autoPlayControls.pause),\n    onDragEnd: callMultiple(onDragEnd, autoPlayControls.resume),\n    bullets: childCount > 0 && bullets,\n    slideIndex: safeSlideIndex,\n    onChange: handleChange,\n    children: slides\n  }));\n};","map":{"version":3,"names":["React","clamp","useIsClient","callMultiple","CarouselBase","useAutoPlay","Gallery","_param","initialSlideIndex","children","timeout","onChange","bullets","onDragStart","onDragEnd","props","_object_without_properties","localSlideIndex","setSlideIndex","useState","isControlled","slideIndex","_props_slideIndex","slides","useMemo","Children","toArray","filter","item","Boolean","childCount","length","isClient","handleChange","useCallback","current","autoPlayControls","onNext","safeSlideIndex","useEffect","_jsx","_object_spread_props","_object_spread","dragDisabled","pause","resume"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/components/Gallery/Gallery.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { clamp } from '../../helpers/math';\nimport { useIsClient } from '../../hooks/useIsClient';\nimport { callMultiple } from '../../lib/callMultiple';\nimport { CarouselBase } from '../CarouselBase/CarouselBase';\nimport type { BaseGalleryProps } from '../CarouselBase/types';\nimport { useAutoPlay } from './hooks';\n\nexport interface GalleryProps extends BaseGalleryProps {\n  initialSlideIndex?: number;\n  timeout?: number;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Gallery\n */\nexport const Gallery = ({\n  initialSlideIndex = 0,\n  children,\n  timeout = 0,\n  onChange,\n  bullets,\n  onDragStart,\n  onDragEnd,\n  ...props\n}: GalleryProps): React.ReactNode => {\n  const [localSlideIndex, setSlideIndex] = React.useState(initialSlideIndex);\n  const isControlled = typeof props.slideIndex === 'number';\n  const slideIndex = isControlled ? (props.slideIndex ?? 0) : localSlideIndex;\n  const slides = React.useMemo(\n    () => React.Children.toArray(children).filter((item) => Boolean(item)),\n    [children],\n  );\n  const childCount = slides.length;\n  const isClient = useIsClient();\n\n  const handleChange: GalleryProps['onChange'] = React.useCallback(\n    (current: number) => {\n      if (current === slideIndex) {\n        return;\n      }\n      !isControlled && setSlideIndex(current);\n      onChange && onChange(current);\n    },\n    [isControlled, onChange, slideIndex],\n  );\n\n  const autoPlayControls = useAutoPlay({\n    timeout,\n    slideIndex,\n    onNext: () => handleChange((slideIndex + 1) % childCount),\n  });\n\n  // prevent invalid slideIndex\n  // any slide index is invalid with no slides, just keep it as is\n  const safeSlideIndex = childCount > 0 ? clamp(slideIndex, 0, childCount - 1) : slideIndex;\n  // notify parent in controlled mode\n  React.useEffect(() => {\n    if (onChange && safeSlideIndex !== slideIndex) {\n      onChange(safeSlideIndex);\n    }\n    setSlideIndex(safeSlideIndex);\n  }, [onChange, safeSlideIndex, slideIndex]);\n\n  if (!isClient) {\n    return null;\n  }\n\n  return (\n    <CarouselBase\n      dragDisabled={isControlled && !onChange}\n      {...props}\n      onDragStart={callMultiple(onDragStart, autoPlayControls.pause)}\n      onDragEnd={callMultiple(onDragEnd, autoPlayControls.resume)}\n      bullets={childCount > 0 && bullets}\n      slideIndex={safeSlideIndex}\n      onChange={handleChange}\n    >\n      {slides}\n    </CarouselBase>\n  );\n};\n"],"mappings":"AAAA;;;;;;AAEA,YAAYA,KAAA,MAAW;AACvB,SAASC,KAAK,QAAQ;AACtB,SAASC,WAAW,QAAQ;AAC5B,SAASC,YAAY,QAAQ;AAC7B,SAASC,YAAY,QAAQ;AAE7B,SAASC,WAAW,QAAQ;AAO5B;;;AAGA,OAAO,MAAMC,OAAA,GAAUC,MAAA;MAAC;MACtBC,iBAAA,GAAoB,CAAC;MACrBC,QAAQ;MACRC,OAAA,GAAU,CAAC;MACXC,QAAQ;MACRC,OAAO;MACPC,WAAW;MACXC;IAAS,CAEI,GAAAP,MAAA;IADVQ,KAAA,GAAAC,0BAAA,CAAAT,MAAA,GAPH,qBACA,YACA,WACA,YACA,WACA,eACA,Y;EAGA,MAAM,CAACU,eAAA,EAAiBC,aAAA,CAAc,GAAGlB,KAAA,CAAMmB,QAAQ,CAACX,iBAAA;EACxD,MAAMY,YAAA,GAAe,OAAOL,KAAA,CAAMM,UAAU,KAAK;MACdC,iBAAA;EAAnC,MAAMD,UAAA,GAAaD,YAAA,GAAgB,CAAAE,iBAAA,GAAAP,KAAA,CAAMM,UAAU,cAAhBC,iBAAA,cAAAA,iBAAA,GAAoB,IAAKL,eAAA;EAC5D,MAAMM,MAAA,GAASvB,KAAA,CAAMwB,OAAO,CAC1B,MAAMxB,KAAA,CAAMyB,QAAQ,CAACC,OAAO,CAACjB,QAAA,EAAUkB,MAAM,CAAEC,IAAA,IAASC,OAAA,CAAQD,IAAA,IAChE,CAACnB,QAAA,CAAS;EAEZ,MAAMqB,UAAA,GAAaP,MAAA,CAAOQ,MAAM;EAChC,MAAMC,QAAA,GAAW9B,WAAA;EAEjB,MAAM+B,YAAA,GAAyCjC,KAAA,CAAMkC,WAAW,CAC7DC,OAAA;IACC,IAAIA,OAAA,KAAYd,UAAA,EAAY;MAC1B;IACF;IACA,CAACD,YAAA,IAAgBF,aAAA,CAAciB,OAAA;IAC/BxB,QAAA,IAAYA,QAAA,CAASwB,OAAA;EACvB,GACA,CAACf,YAAA,EAAcT,QAAA,EAAUU,UAAA,CAAW;EAGtC,MAAMe,gBAAA,GAAmB/B,WAAA,CAAY;IACnCK,OAAA;IACAW,UAAA;IACAgB,MAAA,EAAQA,CAAA,KAAMJ,YAAA,CAAa,CAACZ,UAAA,GAAa,KAAKS,UAAA;EAChD;EAEA;EACA;EACA,MAAMQ,cAAA,GAAiBR,UAAA,GAAa,IAAI7B,KAAA,CAAMoB,UAAA,EAAY,GAAGS,UAAA,GAAa,KAAKT,UAAA;EAC/E;EACArB,KAAA,CAAMuC,SAAS,CAAC;IACd,IAAI5B,QAAA,IAAY2B,cAAA,KAAmBjB,UAAA,EAAY;MAC7CV,QAAA,CAAS2B,cAAA;IACX;IACApB,aAAA,CAAcoB,cAAA;EAChB,GAAG,CAAC3B,QAAA,EAAU2B,cAAA,EAAgBjB,UAAA,CAAW;EAEzC,IAAI,CAACW,QAAA,EAAU;IACb,OAAO;EACT;EAEA,oBACEQ,IAAA,CAACpC,YAAA,EAAAqC,oBAAA,CAAAC,cAAA;IACCC,YAAA,EAAcvB,YAAA,IAAgB,CAACT;KAC3BI,KAAA;IACJF,WAAA,EAAaV,YAAA,CAAaU,WAAA,EAAauB,gBAAA,CAAiBQ,KAAK;IAC7D9B,SAAA,EAAWX,YAAA,CAAaW,SAAA,EAAWsB,gBAAA,CAAiBS,MAAM;IAC1DjC,OAAA,EAASkB,UAAA,GAAa,KAAKlB,OAAA;IAC3BS,UAAA,EAAYiB,cAAA;IACZ3B,QAAA,EAAUsB,YAAA;cAETV;;AAGP","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}