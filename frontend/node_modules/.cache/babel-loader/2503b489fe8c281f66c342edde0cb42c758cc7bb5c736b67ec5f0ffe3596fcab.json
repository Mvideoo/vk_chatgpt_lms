{"ast":null,"code":"import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nimport { classNames, hasReactNode } from \"@vkontakte/vkjs\";\nimport { mergeStyle } from \"../../helpers/mergeStyle.js\";\nimport { Avatar } from \"../Avatar/Avatar.js\";\nimport { Tappable } from \"../Tappable/Tappable.js\";\nimport { Caption } from \"../Typography/Caption/Caption.js\";\nimport { Footnote } from \"../Typography/Footnote/Footnote.js\";\nimport { Subhead } from \"../Typography/Subhead/Subhead.js\";\nexport const CUSTOM_CSS_TOKEN_FOR_CELL_WIDTH = '--vkui_internal--cell_width';\nconst stylesSize = {\n  s: \"vkuiHorizontalCell__sizeS\",\n  m: \"vkuiHorizontalCell__sizeM\",\n  l: \"vkuiHorizontalCell__sizeL\",\n  xl: \"vkuiHorizontalCell__sizeXL\",\n  auto: \"vkuiHorizontalCell__sizeAuto\"\n};\nconst textAlignClassNames = {\n  center: \"vkuiHorizontalCell__textAlignCenter\",\n  end: \"vkuiHorizontalCell__textAlignEnd\"\n};\n/**\n * @see https://vkcom.github.io/VKUI/#/HorizontalCell\n */\nexport const HorizontalCell = _param => {\n  var {\n      className,\n      title,\n      style,\n      subtitle,\n      size = 's',\n      children = /*#__PURE__*/_jsx(Avatar, {\n        size: 56\n      }),\n      getRootRef,\n      getRef,\n      extraSubtitle,\n      textAlign = size === 's' ? 'center' : 'start',\n      noPadding = false,\n      TitleComponent = size === 's' ? Caption : Subhead\n    } = _param,\n    restProps = _object_without_properties(_param, [\"className\", \"title\", \"style\", \"subtitle\", \"size\", \"children\", \"getRootRef\", \"getRef\", \"extraSubtitle\", \"textAlign\", \"noPadding\", \"TitleComponent\"]);\n  const hasTypography = hasReactNode(title) || hasReactNode(subtitle) || hasReactNode(extraSubtitle);\n  const customProperties = typeof size === 'number' ? {\n    [CUSTOM_CSS_TOKEN_FOR_CELL_WIDTH]: `${size}px`\n  } : undefined;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: getRootRef,\n    style: mergeStyle(customProperties, style),\n    className: classNames(\"vkuiHorizontalCell__host\", typeof size === 'string' && stylesSize[size], size !== 'auto' && \"vkuiHorizontalCell__sized\", typeof size === 'number' && \"vkuiHorizontalCell__customSize\", noPadding && \"vkuiHorizontalCell__noPadding\", className),\n    children: /*#__PURE__*/_jsxs(Tappable, _object_spread_props(_object_spread({\n      className: \"vkuiHorizontalCell__body\",\n      getRootRef: getRef\n    }, restProps), {\n      children: [hasReactNode(children) && /*#__PURE__*/_jsx(\"div\", {\n        className: \"vkuiHorizontalCell__image\",\n        children: children\n      }), hasTypography && /*#__PURE__*/_jsxs(\"div\", {\n        className: classNames(\"vkuiHorizontalCell__content\", textAlign !== 'start' && textAlignClassNames[textAlign]),\n        children: [hasReactNode(title) && /*#__PURE__*/_jsx(TitleComponent, {\n          children: title\n        }), hasReactNode(subtitle) && /*#__PURE__*/_jsx(Footnote, {\n          className: \"vkuiHorizontalCell__subtitle\",\n          children: subtitle\n        }), hasReactNode(extraSubtitle) && /*#__PURE__*/_jsx(Footnote, {\n          className: \"vkuiHorizontalCell__subtitle\",\n          children: extraSubtitle\n        })]\n      })]\n    }))\n  });\n};","map":{"version":3,"names":["React","classNames","hasReactNode","mergeStyle","Avatar","Tappable","Caption","Footnote","Subhead","CUSTOM_CSS_TOKEN_FOR_CELL_WIDTH","stylesSize","s","m","l","xl","auto","textAlignClassNames","center","end","HorizontalCell","_param","className","title","style","subtitle","size","children","_jsx","getRootRef","getRef","extraSubtitle","textAlign","noPadding","TitleComponent","restProps","_object_without_properties","hasTypography","customProperties","undefined","ref","_jsxs","_object_spread_props","_object_spread"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/components/HorizontalCell/HorizontalCell.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames, hasReactNode } from '@vkontakte/vkjs';\nimport { mergeStyle } from '../../helpers/mergeStyle';\nimport type { CSSCustomProperties, HasRef, HasRootRef, LiteralUnion } from '../../types';\nimport { Avatar } from '../Avatar/Avatar';\nimport { Tappable, type TappableProps } from '../Tappable/Tappable';\nimport { Caption } from '../Typography/Caption/Caption';\nimport { Footnote } from '../Typography/Footnote/Footnote';\nimport { Subhead } from '../Typography/Subhead/Subhead';\nimport styles from './HorizontalCell.module.css';\n\nexport const CUSTOM_CSS_TOKEN_FOR_CELL_WIDTH = '--vkui_internal--cell_width';\n\nconst stylesSize = {\n  s: styles.sizeS,\n  m: styles.sizeM,\n  l: styles.sizeL,\n  xl: styles.sizeXL,\n  auto: styles.sizeAuto,\n};\n\nconst textAlignClassNames = {\n  center: styles.textAlignCenter,\n  end: styles.textAlignEnd,\n};\n\ntype HorizontalCellSizes = 's' | 'm' | 'l' | 'xl' | 'auto';\n\nexport interface HorizontalCellProps\n  extends Omit<TappableProps, 'size' | 'getRootRef' | 'title' | 'borderRadiusMode'>,\n    HasRootRef<HTMLDivElement>,\n    HasRef<HTMLDivElement> {\n  /**\n   * Ширина компонента\n   *\n   * Значения `'s' | 'm' | 'l' | 'xl'` определяются дизайн-системой.\n   * Значение `auto` позволяет задать динамическую ширину, определяемую контентом.\n   * Пользовательскую ширину можно задать через числовое значение.\n   */\n  size?: LiteralUnion<HorizontalCellSizes, number>;\n  /**\n   * Заголовок\n   */\n  title?: React.ReactNode;\n  /**\n   * Дополнительная строка текста под `children`.\n   */\n  subtitle?: React.ReactNode;\n  /**\n   * Дополнительная строка текста под `children` и `subtitle`.\n   */\n  extraSubtitle?: React.ReactNode;\n  /**\n   * Задает выравнивание типографики. По умолчанию `center` для `size=s`, иначе `start`\n   */\n  textAlign?: 'start' | 'center' | 'end';\n  /**\n   * Отключает формирование отступов у крайних элементов\n   *\n   * Актуально для использования в многострочных списках\n   */\n  noPadding?: boolean;\n  /**\n   * Позволяет передать типографический компонент, используемый для `title`.\n   * По умолчанию `Caption` для `size=s`, иначе `Subhead`.\n   */\n  TitleComponent?: React.ElementType;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/HorizontalCell\n */\nexport const HorizontalCell = ({\n  className,\n  title,\n  style,\n  subtitle,\n  size = 's',\n  children = <Avatar size={56} />,\n  getRootRef,\n  getRef,\n  extraSubtitle,\n  textAlign = size === 's' ? 'center' : 'start',\n  noPadding = false,\n  TitleComponent = size === 's' ? Caption : Subhead,\n  ...restProps\n}: HorizontalCellProps): React.ReactNode => {\n  const hasTypography =\n    hasReactNode(title) || hasReactNode(subtitle) || hasReactNode(extraSubtitle);\n\n  const customProperties: CSSCustomProperties | undefined =\n    typeof size === 'number' ? { [CUSTOM_CSS_TOKEN_FOR_CELL_WIDTH]: `${size}px` } : undefined;\n\n  return (\n    <div\n      ref={getRootRef}\n      style={mergeStyle(customProperties, style)}\n      className={classNames(\n        styles.host,\n        typeof size === 'string' && stylesSize[size],\n        size !== 'auto' && styles.sized,\n        typeof size === 'number' && styles.customSize,\n        noPadding && styles.noPadding,\n        className,\n      )}\n    >\n      <Tappable className={styles.body} getRootRef={getRef} {...restProps}>\n        {hasReactNode(children) && <div className={styles.image}>{children}</div>}\n        {hasTypography && (\n          <div\n            className={classNames(\n              styles.content,\n              textAlign !== 'start' && textAlignClassNames[textAlign],\n            )}\n          >\n            {hasReactNode(title) && <TitleComponent>{title}</TitleComponent>}\n            {hasReactNode(subtitle) && <Footnote className={styles.subtitle}>{subtitle}</Footnote>}\n            {hasReactNode(extraSubtitle) && (\n              <Footnote className={styles.subtitle}>{extraSubtitle}</Footnote>\n            )}\n          </div>\n        )}\n      </Tappable>\n    </div>\n  );\n};\n"],"mappings":";;;;AAAA,YAAYA,KAAA,MAAW;AACvB,SAASC,UAAU,EAAEC,YAAY,QAAQ;AACzC,SAASC,UAAU,QAAQ;AAE3B,SAASC,MAAM,QAAQ;AACvB,SAASC,QAAQ,QAA4B;AAC7C,SAASC,OAAO,QAAQ;AACxB,SAASC,QAAQ,QAAQ;AACzB,SAASC,OAAO,QAAQ;AAGxB,OAAO,MAAMC,+BAAA,GAAkC;AAE/C,MAAMC,UAAA,GAAa;EACjBC,CAAC;EACDC,CAAC;EACDC,CAAC;EACDC,EAAE;EACFC,IAAI;AACN;AAEA,MAAMC,mBAAA,GAAsB;EAC1BC,MAAM;EACNC,GAAG;AACL;AA6CA;;;AAGA,OAAO,MAAMC,cAAA,GAAiBC,MAAA;MAAC;MAC7BC,SAAS;MACTC,KAAK;MACLC,KAAK;MACLC,QAAQ;MACRC,IAAA,GAAO,GAAG;MACVC,QAAA,gBAAWC,IAAA,CAACvB,MAAA;QAAOqB,IAAA,EAAM;QAAM;MAC/BG,UAAU;MACVC,MAAM;MACNC,aAAa;MACbC,SAAA,GAAYN,IAAA,KAAS,MAAM,WAAW,OAAO;MAC7CO,SAAA,GAAY,KAAK;MACjBC,cAAA,GAAiBR,IAAA,KAAS,MAAMnB,OAAA,GAAUE;IAAO,CAE7B,GAAAY,MAAA;IADjBc,SAAA,GAAAC,0BAAA,CAAAf,MAAA,GAZH,aACA,SACA,SACA,YACA,QACA,YACA,cACA,UACA,iBACA,aACA,aACA,iB;EAGA,MAAMgB,aAAA,GACJlC,YAAA,CAAaoB,KAAA,KAAUpB,YAAA,CAAasB,QAAA,KAAatB,YAAA,CAAa4B,aAAA;EAEhE,MAAMO,gBAAA,GACJ,OAAOZ,IAAA,KAAS,WAAW;IAAE,CAAChB,+BAAA,GAAkC,GAAGgB,IAAA;EAAS,IAAIa,SAAA;EAElF,oBACEX,IAAA,CAAC;IACCY,GAAA,EAAKX,UAAA;IACLL,KAAA,EAAOpB,UAAA,CAAWkC,gBAAA,EAAkBd,KAAA;IACpCF,SAAA,EAAWpB,UAAA,6BAET,OAAOwB,IAAA,KAAS,YAAYf,UAAU,CAACe,IAAA,CAAK,EAC5CA,IAAA,KAAS,uCACT,OAAOA,IAAA,KAAS,8CAChBO,SAAA,qCACAX,SAAA;cAGF,aAAAmB,KAAA,CAACnC,QAAA,EAAAoC,oBAAA,CAAAC,cAAA;MAASrB,SAAS;MAAeO,UAAA,EAAYC;OAAYK,SAAA;iBACvDhC,YAAA,CAAawB,QAAA,kBAAaC,IAAA,CAAC;QAAIN,SAAS;kBAAiBK;UACzDU,aAAA,iBACCI,KAAA,CAAC;QACCnB,SAAA,EAAWpB,UAAA,gCAET8B,SAAA,KAAc,WAAWf,mBAAmB,CAACe,SAAA,CAAU;mBAGxD7B,YAAA,CAAaoB,KAAA,kBAAUK,IAAA,CAACM,cAAA;oBAAgBX;YACxCpB,YAAA,CAAasB,QAAA,kBAAaG,IAAA,CAACpB,QAAA;UAASc,SAAS;oBAAoBG;YACjEtB,YAAA,CAAa4B,aAAA,kBACZH,IAAA,CAACpB,QAAA;UAASc,SAAS;oBAAoBS;;;;;AAOrD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}