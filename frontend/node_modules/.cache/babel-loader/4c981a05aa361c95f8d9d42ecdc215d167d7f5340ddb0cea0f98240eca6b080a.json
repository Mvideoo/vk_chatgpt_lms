{"ast":null,"code":"'use client';\n\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nimport { classNames, hasReactNode } from \"@vkontakte/vkjs\";\nimport { useAdaptivity } from \"../../hooks/useAdaptivity.js\";\nimport { usePlatform } from \"../../hooks/usePlatform.js\";\nimport { Tappable } from \"../Tappable/Tappable.js\";\nimport { Footnote } from \"../Typography/Footnote/Footnote.js\";\nimport { Headline } from \"../Typography/Headline/Headline.js\";\nimport { Subhead } from \"../Typography/Subhead/Subhead.js\";\nimport { Chevron } from \"./Chevron/Chevron.js\";\nconst sizeYClassNames = {\n  none: \"vkuiSimpleCell__sizeYNone\",\n  compact: \"vkuiSimpleCell__sizeYCompact\"\n};\n/**\n * @see https://vkcom.github.io/VKUI/#/SimpleCell\n */\nexport const SimpleCell = _param => {\n  var {\n      badgeBeforeTitle,\n      badgeAfterTitle,\n      badgeBeforeSubtitle,\n      badgeAfterSubtitle,\n      before,\n      indicator,\n      children,\n      after,\n      chevron,\n      multiline,\n      overTitle,\n      subtitle,\n      extraSubtitle,\n      chevronSize = 'm'\n    } = _param,\n    restProps = _object_without_properties(_param, [\"badgeBeforeTitle\", \"badgeAfterTitle\", \"badgeBeforeSubtitle\", \"badgeAfterSubtitle\", \"before\", \"indicator\", \"children\", \"after\", \"chevron\", \"multiline\", \"overTitle\", \"subtitle\", \"extraSubtitle\", \"chevronSize\"]);\n  const platform = usePlatform();\n  const hasChevron = chevron === 'always' || chevron === 'auto' && platform === 'ios';\n  const hasAfter = hasReactNode(after) || hasChevron;\n  const {\n    sizeY = 'none'\n  } = useAdaptivity();\n  return /*#__PURE__*/_jsxs(Tappable, _object_spread_props(_object_spread({}, restProps), {\n    baseClassName: classNames(\"vkuiSimpleCell__host\", restProps.disabled && \"vkuiSimpleCell__disabled\", sizeY !== 'regular' && sizeYClassNames[sizeY], multiline && \"vkuiSimpleCell__mult\"),\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: classNames(\"vkuiSimpleCell__before\", platform === 'ios' && \"vkuiSimpleCell__beforeIos\"),\n      children: before\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: \"vkuiSimpleCell__middle\",\n      children: [overTitle && /*#__PURE__*/_jsx(Subhead, {\n        Component: \"span\",\n        className: classNames(\"vkuiSimpleCell__text\", \"vkuiSimpleCell__overTitle\"),\n        children: overTitle\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: \"vkuiSimpleCell__content\",\n        children: [badgeBeforeTitle && /*#__PURE__*/_jsx(\"span\", {\n          className: \"vkuiSimpleCell__badge\",\n          children: badgeBeforeTitle\n        }), /*#__PURE__*/_jsx(Headline, {\n          Component: \"span\",\n          className: \"vkuiSimpleCell__children\",\n          weight: \"3\",\n          children: children\n        }), hasReactNode(badgeAfterTitle) && /*#__PURE__*/_jsx(\"span\", {\n          className: \"vkuiSimpleCell__badge\",\n          children: badgeAfterTitle\n        })]\n      }), subtitle && /*#__PURE__*/_jsxs(\"div\", {\n        className: \"vkuiSimpleCell__content\",\n        children: [badgeBeforeSubtitle && /*#__PURE__*/_jsx(\"span\", {\n          className: \"vkuiSimpleCell__badge\",\n          children: badgeBeforeSubtitle\n        }), /*#__PURE__*/_jsx(Footnote, {\n          normalize: false,\n          className: classNames(\"vkuiSimpleCell__text\", \"vkuiSimpleCell__subtitle\"),\n          children: subtitle\n        }), badgeAfterSubtitle && /*#__PURE__*/_jsx(\"span\", {\n          className: \"vkuiSimpleCell__badge\",\n          children: badgeAfterSubtitle\n        })]\n      }), extraSubtitle && /*#__PURE__*/_jsx(Footnote, {\n        className: classNames(\"vkuiSimpleCell__text\", \"vkuiSimpleCell__extraSubtitle\"),\n        children: extraSubtitle\n      })]\n    }), hasReactNode(indicator) && /*#__PURE__*/_jsx(Headline, {\n      Component: \"span\",\n      weight: \"3\",\n      className: \"vkuiSimpleCell__indicator\",\n      children: indicator\n    }), hasAfter && /*#__PURE__*/_jsxs(\"div\", {\n      className: classNames(\"vkuiSimpleCell__after\", 'vkuiInternalSimpleCell__after'),\n      children: [after, hasChevron && /*#__PURE__*/_jsx(Chevron, {\n        size: chevronSize,\n        className: \"vkuiSimpleCell__chevronIcon\"\n      })]\n    })]\n  }));\n};","map":{"version":3,"names":["React","classNames","hasReactNode","useAdaptivity","usePlatform","Tappable","Footnote","Headline","Subhead","Chevron","sizeYClassNames","none","compact","SimpleCell","_param","badgeBeforeTitle","badgeAfterTitle","badgeBeforeSubtitle","badgeAfterSubtitle","before","indicator","children","after","chevron","multiline","overTitle","subtitle","extraSubtitle","chevronSize","restProps","_object_without_properties","platform","hasChevron","hasAfter","sizeY","_jsxs","_object_spread_props","_object_spread","baseClassName","disabled","_jsx","className","Component","weight","normalize","size"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/components/SimpleCell/SimpleCell.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { classNames, hasReactNode } from '@vkontakte/vkjs';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport type { HasComponent } from '../../types';\nimport { Tappable, type TappableProps } from '../Tappable/Tappable';\nimport { Footnote } from '../Typography/Footnote/Footnote';\nimport { Headline } from '../Typography/Headline/Headline';\nimport { Subhead } from '../Typography/Subhead/Subhead';\nimport { Chevron } from './Chevron/Chevron';\nimport styles from './SimpleCell.module.css';\n\nconst sizeYClassNames = {\n  none: styles.sizeYNone,\n  compact: styles.sizeYCompact,\n};\n\nexport interface SimpleCellOwnProps extends HasComponent {\n  /**\n   * Иконка 28 или `<Avatar size={28|32|40|48|72} />`\n   */\n  before?: React.ReactNode;\n  /**\n   * Иконка 12 или `<Badge />`. Добавится слева от текста `children`.\n   */\n  badgeBeforeTitle?: React.ReactNode;\n  /**\n   * Иконка 12 или `<Badge />`. Добавится справа от текста `children`.\n   */\n  badgeAfterTitle?: React.ReactNode;\n  /**\n   * Иконка 12. Добавится слева от текста `subtitle`.\n   */\n  badgeBeforeSubtitle?: React.ReactNode;\n  /**\n   * Иконка 12. Добавится справа от текста `subtitle`.\n   */\n  badgeAfterSubtitle?: React.ReactNode;\n  /**\n   * Контейнер для текста справа от `children`.\n   */\n  indicator?: React.ReactNode;\n  /**\n   * Дополнительная строка текста над `children`.\n   */\n  overTitle?: React.ReactNode;\n  /**\n   * Дополнительная строка текста под `children`.\n   */\n  subtitle?: React.ReactNode;\n  /**\n   * Дополнительная строка текста под `children` и `subtitle`.\n   */\n  extraSubtitle?: React.ReactNode;\n  /**\n   * Иконка 24|28 или `<Switch />`. Располагается справа от `indicator`.\n   */\n  after?: React.ReactNode;\n  /**\n   * Помечает ячейку неактивной\n   */\n  disabled?: boolean;\n  /**\n   * Управляет видимостью иконки шеврона `›`\n   *\n   * - `auto` - добавляет шеврон справа только для платформы `ios`;\n   * - `always` - всегда показывает шеврон.\n   */\n  chevron?: 'auto' | 'always';\n  /**\n   * Размер chevron\n   */\n  chevronSize?: 's' | 'm';\n  /**\n   * Включает многострочный режим для отображения текста\n   */\n  multiline?: boolean;\n}\n\nexport interface SimpleCellProps extends SimpleCellOwnProps, TappableProps {}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/SimpleCell\n */\nexport const SimpleCell = ({\n  badgeBeforeTitle,\n  badgeAfterTitle,\n  badgeBeforeSubtitle,\n  badgeAfterSubtitle,\n  before,\n  indicator,\n  children,\n  after,\n  chevron,\n  multiline,\n  overTitle,\n  subtitle,\n  extraSubtitle,\n  chevronSize = 'm',\n  ...restProps\n}: SimpleCellProps): React.ReactNode => {\n  const platform = usePlatform();\n\n  const hasChevron = chevron === 'always' || (chevron === 'auto' && platform === 'ios');\n\n  const hasAfter = hasReactNode(after) || hasChevron;\n  const { sizeY = 'none' } = useAdaptivity();\n\n  return (\n    <Tappable\n      {...restProps}\n      baseClassName={classNames(\n        styles.host,\n        restProps.disabled && styles.disabled,\n        sizeY !== 'regular' && sizeYClassNames[sizeY],\n        multiline && styles.mult,\n      )}\n    >\n      <div className={classNames(styles.before, platform === 'ios' && styles.beforeIos)}>\n        {before}\n      </div>\n      <div className={styles.middle}>\n        {overTitle && (\n          <Subhead Component=\"span\" className={classNames(styles.text, styles.overTitle)}>\n            {overTitle}\n          </Subhead>\n        )}\n        <div className={styles.content}>\n          {badgeBeforeTitle && <span className={styles.badge}>{badgeBeforeTitle}</span>}\n          <Headline Component=\"span\" className={styles.children} weight=\"3\">\n            {children}\n          </Headline>\n          {hasReactNode(badgeAfterTitle) && <span className={styles.badge}>{badgeAfterTitle}</span>}\n        </div>\n        {subtitle && (\n          <div className={styles.content}>\n            {badgeBeforeSubtitle && <span className={styles.badge}>{badgeBeforeSubtitle}</span>}\n            <Footnote normalize={false} className={classNames(styles.text, styles.subtitle)}>\n              {subtitle}\n            </Footnote>\n            {badgeAfterSubtitle && <span className={styles.badge}>{badgeAfterSubtitle}</span>}\n          </div>\n        )}\n        {extraSubtitle && (\n          <Footnote className={classNames(styles.text, styles.extraSubtitle)}>\n            {extraSubtitle}\n          </Footnote>\n        )}\n      </div>\n      {hasReactNode(indicator) && (\n        <Headline Component=\"span\" weight=\"3\" className={styles.indicator}>\n          {indicator}\n        </Headline>\n      )}\n      {hasAfter && (\n        <div className={classNames(styles.after, 'vkuiInternalSimpleCell__after')}>\n          {after}\n          {hasChevron && <Chevron size={chevronSize} className={styles.chevronIcon} />}\n        </div>\n      )}\n    </Tappable>\n  );\n};\n"],"mappings":"AAAA;;;;;;AAEA,YAAYA,KAAA,MAAW;AACvB,SAASC,UAAU,EAAEC,YAAY,QAAQ;AACzC,SAASC,aAAa,QAAQ;AAC9B,SAASC,WAAW,QAAQ;AAE5B,SAASC,QAAQ,QAA4B;AAC7C,SAASC,QAAQ,QAAQ;AACzB,SAASC,QAAQ,QAAQ;AACzB,SAASC,OAAO,QAAQ;AACxB,SAASC,OAAO,QAAQ;AAGxB,MAAMC,eAAA,GAAkB;EACtBC,IAAI;EACJC,OAAO;AACT;AAkEA;;;AAGA,OAAO,MAAMC,UAAA,GAAaC,MAAA;MAAC;MACzBC,gBAAgB;MAChBC,eAAe;MACfC,mBAAmB;MACnBC,kBAAkB;MAClBC,MAAM;MACNC,SAAS;MACTC,QAAQ;MACRC,KAAK;MACLC,OAAO;MACPC,SAAS;MACTC,SAAS;MACTC,QAAQ;MACRC,aAAa;MACbC,WAAA,GAAc;IAAG,CAED,GAAAd,MAAA;IADbe,SAAA,GAAAC,0BAAA,CAAAhB,MAAA,GAdH,oBACA,mBACA,uBACA,sBACA,UACA,aACA,YACA,SACA,WACA,aACA,aACA,YACA,iBACA,c;EAGA,MAAMiB,QAAA,GAAW3B,WAAA;EAEjB,MAAM4B,UAAA,GAAaT,OAAA,KAAY,YAAaA,OAAA,KAAY,UAAUQ,QAAA,KAAa;EAE/E,MAAME,QAAA,GAAW/B,YAAA,CAAaoB,KAAA,KAAUU,UAAA;EACxC,MAAM;IAAEE,KAAA,GAAQ;EAAM,CAAE,GAAG/B,aAAA;EAE3B,oBACEgC,KAAA,CAAC9B,QAAA,EAAA+B,oBAAA,CAAAC,cAAA,KACKR,SAAA;IACJS,aAAA,EAAerC,UAAA,yBAEb4B,SAAA,CAAUU,QAAQ,gCAClBL,KAAA,KAAU,aAAaxB,eAAe,CAACwB,KAAA,CAAM,EAC7CV,SAAA;4BAGFgB,IAAA,CAAC;MAAIC,SAAA,EAAWxC,UAAA,2BAA0B8B,QAAA,KAAa;gBACpDZ;qBAEHgB,KAAA,CAAC;MAAIM,SAAS;iBACXhB,SAAA,iBACCe,IAAA,CAAChC,OAAA;QAAQkC,SAAA,EAAU;QAAOD,SAAA,EAAWxC,UAAA;kBAClCwB;uBAGLU,KAAA,CAAC;QAAIM,SAAS;mBACX1B,gBAAA,iBAAoByB,IAAA,CAAC;UAAKC,SAAS;oBAAiB1B;yBACrDyB,IAAA,CAACjC,QAAA;UAASmC,SAAA,EAAU;UAAOD,SAAS;UAAmBE,MAAA,EAAO;oBAC3DtB;YAEFnB,YAAA,CAAac,eAAA,kBAAoBwB,IAAA,CAAC;UAAKC,SAAS;oBAAiBzB;;UAEnEU,QAAA,iBACCS,KAAA,CAAC;QAAIM,SAAS;mBACXxB,mBAAA,iBAAuBuB,IAAA,CAAC;UAAKC,SAAS;oBAAiBxB;yBACxDuB,IAAA,CAAClC,QAAA;UAASsC,SAAA,EAAW;UAAOH,SAAA,EAAWxC,UAAA;oBACpCyB;YAEFR,kBAAA,iBAAsBsB,IAAA,CAAC;UAAKC,SAAS;oBAAiBvB;;UAG1DS,aAAA,iBACCa,IAAA,CAAClC,QAAA;QAASmC,SAAA,EAAWxC,UAAA;kBAClB0B;;QAINzB,YAAA,CAAakB,SAAA,kBACZoB,IAAA,CAACjC,QAAA;MAASmC,SAAA,EAAU;MAAOC,MAAA,EAAO;MAAIF,SAAS;gBAC5CrB;QAGJa,QAAA,iBACCE,KAAA,CAAC;MAAIM,SAAA,EAAWxC,UAAA,0BAAyB;iBACtCqB,KAAA,EACAU,UAAA,iBAAcQ,IAAA,CAAC/B,OAAA;QAAQoC,IAAA,EAAMjB,WAAA;QAAaa,SAAS;;;;AAK9D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}