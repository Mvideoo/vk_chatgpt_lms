{"ast":null,"code":"'use client';\n\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nimport { classNames } from \"@vkontakte/vkjs\";\nimport { useAdaptivity } from \"../../../hooks/useAdaptivity.js\";\nimport { useExternRef } from \"../../../hooks/useExternRef.js\";\nimport { useFocusWithin } from \"../../../hooks/useFocusWithin.js\";\nimport { usePlatform } from \"../../../hooks/usePlatform.js\";\nimport { getFormFieldModeFromSelectType } from \"../../../lib/select.js\";\nimport { FormField } from \"../../FormField/FormField.js\";\nimport { SelectTypography } from \"../../SelectTypography/SelectTypography.js\";\nimport { Text } from \"../../Typography/Text/Text.js\";\nimport { VisuallyHidden } from \"../../VisuallyHidden/VisuallyHidden.js\";\nconst sizeYClassNames = {\n  none: \"vkuiCustomSelectInput__sizeYNone\",\n  compact: \"vkuiCustomSelectInput__sizeYCompact\"\n};\n/**\n * @since 5.10.0\n * @private\n */\nexport const CustomSelectInput = _param => {\n  var {\n      align = 'left',\n      getRef,\n      className,\n      getRootRef,\n      style,\n      before,\n      after,\n      status,\n      children,\n      placeholder,\n      selectType = 'default',\n      multiline,\n      disabled,\n      fetching,\n      labelTextTestId\n    } = _param,\n    restProps = _object_without_properties(_param, [\"align\", \"getRef\", \"className\", \"getRootRef\", \"style\", \"before\", \"after\", \"status\", \"children\", \"placeholder\", \"selectType\", \"multiline\", \"disabled\", \"fetching\", \"labelTextTestId\"]);\n  const {\n    sizeY = 'none'\n  } = useAdaptivity();\n  const title = children || placeholder;\n  const showLabelOrPlaceholder = !Boolean(restProps.value);\n  const handleRootRef = useExternRef(getRootRef);\n  const focusWithin = useFocusWithin(handleRootRef);\n  const input = /*#__PURE__*/_jsx(Text, _object_spread_props(_object_spread({\n    type: \"text\"\n  }, restProps), {\n    disabled: disabled && !fetching,\n    readOnly: restProps.readOnly || disabled && fetching,\n    Component: \"input\",\n    normalize: false,\n    className: classNames(\"vkuiCustomSelectInput__el\", (restProps.readOnly || showLabelOrPlaceholder && !focusWithin) && \"vkuiCustomSelectInput__elCursorPointer\"),\n    getRootRef: getRef,\n    placeholder: children ? '' : placeholder\n  }));\n  const platform = usePlatform();\n  return /*#__PURE__*/_jsx(FormField, {\n    Component: \"div\",\n    style: style,\n    className: classNames(\"vkuiCustomSelectInput__host\", align === 'right' && \"vkuiCustomSelectInput__alignRight\", align === 'center' && \"vkuiCustomSelectInput__alignCenter\", !children && \"vkuiCustomSelectInput__empty\", multiline && \"vkuiCustomSelectInput__multiline\", sizeY !== 'regular' && sizeYClassNames[sizeY], before && \"vkuiCustomSelectInput__hasBefore\", after && \"vkuiCustomSelectInput__hasAfter\", className),\n    getRootRef: handleRootRef,\n    before: before,\n    after: after,\n    disabled: disabled,\n    mode: getFormFieldModeFromSelectType(selectType),\n    status: status,\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      className: \"vkuiCustomSelectInput__inputGroup\",\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: classNames(\"vkuiCustomSelectInput__container\", className),\n        tabIndex: -1,\n        \"aria-hidden\": true,\n        \"data-testid\": labelTextTestId,\n        children: /*#__PURE__*/_jsx(SelectTypography, {\n          selectType: selectType,\n          className: \"vkuiCustomSelectInput__title\",\n          children: showLabelOrPlaceholder && title\n        })\n      }), restProps.readOnly && platform === 'ios' ? /*#__PURE__*/_jsx(VisuallyHidden, {\n        children: input\n      }) : input]\n    })\n  });\n};","map":{"version":3,"names":["React","classNames","useAdaptivity","useExternRef","useFocusWithin","usePlatform","getFormFieldModeFromSelectType","FormField","SelectTypography","Text","VisuallyHidden","sizeYClassNames","none","compact","CustomSelectInput","_param","align","getRef","className","getRootRef","style","before","after","status","children","placeholder","selectType","multiline","disabled","fetching","labelTextTestId","restProps","_object_without_properties","sizeY","title","showLabelOrPlaceholder","Boolean","value","handleRootRef","focusWithin","input","_jsx","_object_spread_props","_object_spread","type","readOnly","Component","normalize","platform","mode","_jsxs","tabIndex"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/components/CustomSelect/CustomSelectInput/CustomSelectInput.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { useAdaptivity } from '../../../hooks/useAdaptivity';\nimport { useExternRef } from '../../../hooks/useExternRef';\nimport { useFocusWithin } from '../../../hooks/useFocusWithin';\nimport { usePlatform } from '../../../hooks/usePlatform';\nimport { getFormFieldModeFromSelectType } from '../../../lib/select';\nimport type { HasAlign, HasRef, HasRootRef } from '../../../types';\nimport { FormField, type FormFieldProps } from '../../FormField/FormField';\nimport type { SelectType } from '../../Select/Select';\nimport { SelectTypography } from '../../SelectTypography/SelectTypography';\nimport { Text } from '../../Typography/Text/Text';\nimport { VisuallyHidden } from '../../VisuallyHidden/VisuallyHidden';\nimport styles from './CustomSelectInput.module.css';\n\nconst sizeYClassNames = {\n  none: styles.sizeYNone,\n  compact: styles.sizeYCompact,\n};\n\nexport interface CustomSelectInputProps\n  extends React.InputHTMLAttributes<HTMLInputElement>,\n    HasRef<HTMLInputElement>,\n    HasRootRef<HTMLDivElement>,\n    HasAlign,\n    Omit<FormFieldProps, 'mode' | 'type' | 'maxHeight'> {\n  selectType?: SelectType;\n  multiline?: boolean;\n  labelTextTestId?: string;\n  fetching?: boolean;\n}\n\n/**\n * @since 5.10.0\n * @private\n */\nexport const CustomSelectInput = ({\n  align = 'left',\n  getRef,\n  className,\n  getRootRef,\n  style,\n  before,\n  after,\n  status,\n  children,\n  placeholder,\n  selectType = 'default',\n  multiline,\n  disabled,\n  fetching,\n  labelTextTestId,\n  ...restProps\n}: CustomSelectInputProps): React.ReactNode => {\n  const { sizeY = 'none' } = useAdaptivity();\n\n  const title = children || placeholder;\n  const showLabelOrPlaceholder = !Boolean(restProps.value);\n\n  const handleRootRef = useExternRef(getRootRef);\n  const focusWithin = useFocusWithin(handleRootRef);\n\n  const input = (\n    <Text\n      type=\"text\"\n      {...restProps}\n      disabled={disabled && !fetching}\n      readOnly={restProps.readOnly || (disabled && fetching)}\n      Component=\"input\"\n      normalize={false}\n      className={classNames(\n        styles.el,\n        (restProps.readOnly || (showLabelOrPlaceholder && !focusWithin)) && styles.elCursorPointer,\n      )}\n      getRootRef={getRef}\n      placeholder={children ? '' : placeholder}\n    />\n  );\n\n  const platform = usePlatform();\n  return (\n    <FormField\n      Component=\"div\"\n      style={style}\n      className={classNames(\n        styles.host,\n        align === 'right' && styles.alignRight,\n        align === 'center' && styles.alignCenter,\n        !children && styles.empty,\n        multiline && styles.multiline,\n        sizeY !== 'regular' && sizeYClassNames[sizeY],\n        before && styles.hasBefore,\n        after && styles.hasAfter,\n        className,\n      )}\n      getRootRef={handleRootRef}\n      before={before}\n      after={after}\n      disabled={disabled}\n      mode={getFormFieldModeFromSelectType(selectType)}\n      status={status}\n    >\n      <div className={styles.inputGroup}>\n        <div\n          className={classNames(styles.container, className)}\n          tabIndex={-1}\n          aria-hidden\n          data-testid={labelTextTestId}\n        >\n          <SelectTypography selectType={selectType} className={styles.title}>\n            {showLabelOrPlaceholder && title}\n          </SelectTypography>\n        </div>\n        {/* Чтобы отключить autosuggestion в iOS, тултипы которого начинают всплывать даже когда input\n         * в режиме readonly, мы оборачиваем инпут в VisuallyHidden.\n         * Тултипы появляются при каждом клике на input.\n         * смотри: https://github.com/VKCOM/VKUI/issues/6205\n         *\n         * Достаточно не дать пользователю кликнуть по инпуту.\n         * Делаем это только для режима read-only. Потому что проблема именно в режиме read-only.\n         * Обертка вокруг инпута обрабатывает клики и передаёт фокус, так что на взаимодействии с инпутом это никак не скажется.\n         **/}\n        {restProps.readOnly && platform === 'ios' ? (\n          <VisuallyHidden>{input}</VisuallyHidden>\n        ) : (\n          input\n        )}\n      </div>\n    </FormField>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}