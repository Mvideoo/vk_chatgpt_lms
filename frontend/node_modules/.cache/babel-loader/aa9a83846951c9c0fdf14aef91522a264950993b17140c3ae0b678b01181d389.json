{"ast":null,"code":"'use client';\n\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { classNames, hasReactNode } from \"@vkontakte/vkjs\";\nimport { useAdaptivity } from \"../../hooks/useAdaptivity.js\";\nimport { AdaptiveIconRenderer } from \"../AdaptiveIconRenderer/AdaptiveIconRenderer.js\";\nimport { Tappable } from \"../Tappable/Tappable.js\";\nconst stylesMode = {\n  primary: \"vkuiToolButton__modePrimary\",\n  secondary: \"vkuiToolButton__modeSecondary\",\n  tertiary: \"vkuiToolButton__modeTertiary\",\n  outline: \"vkuiToolButton__modeOutline\"\n};\nconst stylesAppearance = {\n  accent: \"vkuiToolButton__appearanceAccent\",\n  neutral: \"vkuiToolButton__appearanceNeutral\"\n};\nconst stylesDirection = {\n  row: \"vkuiToolButton__directionRow\",\n  column: \"vkuiToolButton__directionColumn\"\n};\nconst sizeYClassNames = {\n  none: \"vkuiToolButton__sizeYNone\",\n  regular: \"vkuiToolButton__sizeYRegular\"\n};\n/**\n * Кнопки, которые используются для вызова инструмента, вставки аттачей или\n * для форматирования. Их можно использовать как кнопки для разового действия\n * или для включения/выключения режима.\n *\n * @see https://vkcom.github.io/VKUI/#/ToolButton\n */\nexport const ToolButton = _param => {\n  var {\n      mode = 'primary',\n      appearance = 'accent',\n      direction = 'row',\n      children,\n      IconCompact,\n      IconRegular,\n      rounded\n    } = _param,\n    restProps = _object_without_properties(_param, [\"mode\", \"appearance\", \"direction\", \"children\", \"IconCompact\", \"IconRegular\", \"rounded\"]);\n  const {\n    sizeY = 'none'\n  } = useAdaptivity();\n  const hasChildren = hasReactNode(children);\n  return /*#__PURE__*/_jsxs(Tappable, _object_spread_props(_object_spread({\n    hoverMode: \"vkuiToolButton__hover\",\n    activeMode: \"vkuiToolButton__active\",\n    Component: restProps.href ? 'a' : 'button',\n    focusVisibleMode: \"outside\",\n    baseClassName: classNames(\"vkuiToolButton__host\", rounded && getRoundedClassName(direction, hasChildren), hasChildren && direction === 'row' && \"vkuiToolButton__withFakeEndIcon\", stylesMode[mode], stylesAppearance[appearance], stylesDirection[direction], sizeY !== 'compact' && sizeYClassNames[sizeY])\n  }, restProps), {\n    children: [/*#__PURE__*/_jsx(AdaptiveIconRenderer, {\n      IconCompact: IconCompact,\n      IconRegular: IconRegular\n    }), hasChildren && /*#__PURE__*/_jsx(\"span\", {\n      className: \"vkuiToolButton__text\",\n      children: children\n    })]\n  }));\n};\nexport function getRoundedClassName(direction, hasChildren) {\n  switch (direction) {\n    case 'row':\n      return \"vkuiToolButton__rounded\";\n    case 'column':\n      return hasChildren ? undefined : \"vkuiToolButton__rounded\";\n  }\n}","map":{"version":3,"names":["classNames","hasReactNode","useAdaptivity","AdaptiveIconRenderer","Tappable","stylesMode","primary","secondary","tertiary","outline","stylesAppearance","accent","neutral","stylesDirection","row","column","sizeYClassNames","none","regular","ToolButton","_param","mode","appearance","direction","children","IconCompact","IconRegular","rounded","restProps","_object_without_properties","sizeY","hasChildren","_jsxs","_object_spread_props","_object_spread","hoverMode","activeMode","Component","href","focusVisibleMode","baseClassName","getRoundedClassName","_jsx","className","undefined"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/components/ToolButton/ToolButton.tsx"],"sourcesContent":["'use client';\n\nimport { classNames, hasReactNode } from '@vkontakte/vkjs';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\nimport {\n  AdaptiveIconRenderer,\n  type AdaptiveIconRendererProps,\n} from '../AdaptiveIconRenderer/AdaptiveIconRenderer';\nimport { Tappable, type TappableProps } from '../Tappable/Tappable';\nimport styles from './ToolButton.module.css';\n\nconst stylesMode = {\n  primary: styles.modePrimary,\n  secondary: styles.modeSecondary,\n  tertiary: styles.modeTertiary,\n  outline: styles.modeOutline,\n};\n\nconst stylesAppearance = {\n  accent: styles.appearanceAccent,\n  neutral: styles.appearanceNeutral,\n};\n\nconst stylesDirection = {\n  row: styles.directionRow,\n  column: styles.directionColumn,\n};\n\nconst sizeYClassNames = {\n  none: styles.sizeYNone,\n  regular: styles.sizeYRegular,\n};\n\nexport interface ToolButtonProps extends TappableProps, AdaptiveIconRendererProps {\n  mode?: 'primary' | 'secondary' | 'tertiary' | 'outline';\n  appearance?: 'accent' | 'neutral';\n  direction?: 'row' | 'column';\n  /**\n   * Задаёт `50%` закругления для контейнера.\n   *\n   * > Note: игнорируется при `direction=\"column\"` если передан `children`.\n   */\n  rounded?: boolean;\n}\n\n/**\n * Кнопки, которые используются для вызова инструмента, вставки аттачей или\n * для форматирования. Их можно использовать как кнопки для разового действия\n * или для включения/выключения режима.\n *\n * @see https://vkcom.github.io/VKUI/#/ToolButton\n */\nexport const ToolButton = ({\n  mode = 'primary',\n  appearance = 'accent',\n  direction = 'row',\n  children,\n  IconCompact,\n  IconRegular,\n  rounded,\n  ...restProps\n}: ToolButtonProps): React.ReactNode => {\n  const { sizeY = 'none' } = useAdaptivity();\n  const hasChildren = hasReactNode(children);\n\n  return (\n    <Tappable\n      hoverMode={styles.hover}\n      activeMode={styles.active}\n      Component={restProps.href ? 'a' : 'button'}\n      focusVisibleMode=\"outside\"\n      baseClassName={classNames(\n        styles.host,\n        rounded && getRoundedClassName(direction, hasChildren),\n        hasChildren && direction === 'row' && styles.withFakeEndIcon,\n        stylesMode[mode],\n        stylesAppearance[appearance],\n        stylesDirection[direction],\n        sizeY !== 'compact' && sizeYClassNames[sizeY],\n      )}\n      {...restProps}\n    >\n      <AdaptiveIconRenderer IconCompact={IconCompact} IconRegular={IconRegular} />\n      {hasChildren && <span className={styles.text}>{children}</span>}\n    </Tappable>\n  );\n};\n\nexport function getRoundedClassName(\n  direction: 'row' | 'column',\n  hasChildren: boolean,\n): string | undefined {\n  switch (direction) {\n    case 'row':\n      return styles.rounded;\n    case 'column':\n      return hasChildren ? undefined : styles.rounded;\n  }\n}\n"],"mappings":"AAAA;;;;;;AAEA,SAASA,UAAU,EAAEC,YAAY,QAAQ;AACzC,SAASC,aAAa,QAAQ;AAC9B,SACEC,oBAAoB,QAEf;AACP,SAASC,QAAQ,QAA4B;AAG7C,MAAMC,UAAA,GAAa;EACjBC,OAAO;EACPC,SAAS;EACTC,QAAQ;EACRC,OAAO;AACT;AAEA,MAAMC,gBAAA,GAAmB;EACvBC,MAAM;EACNC,OAAO;AACT;AAEA,MAAMC,eAAA,GAAkB;EACtBC,GAAG;EACHC,MAAM;AACR;AAEA,MAAMC,eAAA,GAAkB;EACtBC,IAAI;EACJC,OAAO;AACT;AAcA;;;;;;;AAOA,OAAO,MAAMC,UAAA,GAAaC,MAAA;MAAC;MACzBC,IAAA,GAAO,SAAS;MAChBC,UAAA,GAAa,QAAQ;MACrBC,SAAA,GAAY,KAAK;MACjBC,QAAQ;MACRC,WAAW;MACXC,WAAW;MACXC;IAAO,CAES,GAAAP,MAAA;IADbQ,SAAA,GAAAC,0BAAA,CAAAT,MAAA,GAPH,QACA,cACA,aACA,YACA,eACA,eACA,U;EAGA,MAAM;IAAEU,KAAA,GAAQ;EAAM,CAAE,GAAG5B,aAAA;EAC3B,MAAM6B,WAAA,GAAc9B,YAAA,CAAauB,QAAA;EAEjC,oBACEQ,KAAA,CAAC5B,QAAA,EAAA6B,oBAAA,CAAAC,cAAA;IACCC,SAAS;IACTC,UAAU;IACVC,SAAA,EAAWT,SAAA,CAAUU,IAAI,GAAG,MAAM;IAClCC,gBAAA,EAAiB;IACjBC,aAAA,EAAexC,UAAA,yBAEb2B,OAAA,IAAWc,mBAAA,CAAoBlB,SAAA,EAAWQ,WAAA,GAC1CA,WAAA,IAAeR,SAAA,KAAc,4CAC7BlB,UAAU,CAACgB,IAAA,CAAK,EAChBX,gBAAgB,CAACY,UAAA,CAAW,EAC5BT,eAAe,CAACU,SAAA,CAAU,EAC1BO,KAAA,KAAU,aAAad,eAAe,CAACc,KAAA,CAAM;KAE3CF,SAAA;4BAEJc,IAAA,CAACvC,oBAAA;MAAqBsB,WAAA,EAAaA,WAAA;MAAaC,WAAA,EAAaA;QAC5DK,WAAA,iBAAeW,IAAA,CAAC;MAAKC,SAAS;gBAAgBnB;;;AAGrD;AAEA,OAAO,SAASiB,oBACdlB,SAA2B,EAC3BQ,WAAoB;EAEpB,QAAQR,SAAA;IACN,KAAK;MACH;IACF,KAAK;MACH,OAAOQ,WAAA,GAAca,SAAA;EACzB;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}