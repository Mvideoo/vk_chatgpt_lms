{"ast":null,"code":"'use client';\n\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nimport { Icon24ChevronCompactLeft, Icon24ChevronCompactRight } from \"@vkontakte/icons\";\nimport { useAdaptivity } from \"../../hooks/useAdaptivity.js\";\nimport { useConfigDirection } from \"../../hooks/useConfigDirection.js\";\nimport { usePagination } from \"../../hooks/usePagination.js\";\nimport { RootComponent } from \"../RootComponent/RootComponent.js\";\nimport { VisuallyHidden } from \"../VisuallyHidden/VisuallyHidden.js\";\nimport { PaginationNavigationButton } from \"./PaginationNavigationButton/PaginationNavigationButton.js\";\nimport { PaginationPageButton } from \"./PaginationPage/PaginationPageButton.js\";\nimport { PaginationPageEllipsis } from \"./PaginationPage/PaginationPageEllipsis.js\";\n/**\n * @see https://vkcom.github.io/VKUI/#/Pagination\n */\nexport const Pagination = _param => {\n  var {\n      currentPage = 1,\n      siblingCount = 1,\n      boundaryCount = 1,\n      totalPages = 1,\n      disabled,\n      prevButtonCaption = 'Назад',\n      nextButtonCaption = 'Вперёд',\n      navigationButtonsStyle = 'icon',\n      getPageLabel,\n      navigationLabel = 'Страницы',\n      navigationLabelComponent = 'h2',\n      prevButtonLabel = 'Перейти на предыдущую страницу',\n      nextButtonLabel = 'Перейти на следующую страницу',\n      onChange,\n      renderPageButton,\n      pageButtonTestId,\n      prevButtonTestId,\n      nextButtonTestId,\n      renderNavigationButton\n    } = _param,\n    resetProps = _object_without_properties(_param, [\"currentPage\", \"siblingCount\", \"boundaryCount\", \"totalPages\", \"disabled\", \"prevButtonCaption\", \"nextButtonCaption\", \"navigationButtonsStyle\", \"getPageLabel\", \"navigationLabel\", \"navigationLabelComponent\", \"prevButtonLabel\", \"nextButtonLabel\", \"onChange\", \"renderPageButton\", \"pageButtonTestId\", \"prevButtonTestId\", \"nextButtonTestId\", \"renderNavigationButton\"]);\n  const direction = useConfigDirection();\n  const isRtl = direction === 'rtl';\n  const pages = usePagination({\n    currentPage,\n    totalPages,\n    siblingCount,\n    boundaryCount\n  });\n  const isFirstPage = currentPage === 1;\n  const isLastPage = currentPage === totalPages;\n  const prevPage = isFirstPage ? undefined : currentPage - 1;\n  const nextPage = isLastPage ? undefined : currentPage + 1;\n  const handlePrevClick = React.useCallback(event => {\n    if (onChange && prevPage !== undefined) {\n      onChange(prevPage, event);\n    }\n  }, [prevPage, onChange]);\n  const handleClick = React.useCallback(event => {\n    const page = event.currentTarget.dataset.page || '1';\n    onChange === null || onChange === void 0 ? void 0 : onChange(Number(page), event);\n  }, [onChange]);\n  const handleNextClick = React.useCallback(event => {\n    if (onChange && nextPage !== undefined) {\n      onChange(nextPage, event);\n    }\n  }, [nextPage, onChange]);\n  const {\n    sizeY\n  } = useAdaptivity();\n  const renderPages = React.useCallback(page => {\n    const isCurrent = page === currentPage;\n    const dataTestId = pageButtonTestId === null || pageButtonTestId === void 0 ? void 0 : pageButtonTestId(page, isCurrent);\n    switch (page) {\n      case 'start-ellipsis':\n      case 'end-ellipsis':\n        return /*#__PURE__*/_jsx(\"li\", {\n          children: /*#__PURE__*/_jsx(PaginationPageEllipsis, {\n            disabled: disabled,\n            \"data-testid\": dataTestId\n          })\n        }, page);\n      default:\n        {\n          return /*#__PURE__*/_jsx(\"li\", {\n            children: /*#__PURE__*/_jsx(PaginationPageButton, {\n              getPageLabel: getPageLabel,\n              isCurrent: isCurrent,\n              onClick: handleClick,\n              disabled: disabled,\n              sizeY: sizeY,\n              renderPageButton: renderPageButton,\n              \"data-testid\": dataTestId,\n              children: page\n            })\n          }, page);\n        }\n    }\n  }, [currentPage, disabled, getPageLabel, handleClick, renderPageButton, sizeY, pageButtonTestId]);\n  const navigationLabelId = React.useId();\n  return /*#__PURE__*/_jsxs(RootComponent, _object_spread_props(_object_spread({\n    Component: \"nav\",\n    role: \"navigation\",\n    \"aria-labelledby\": navigationLabelId\n  }, resetProps), {\n    children: [/*#__PURE__*/_jsx(VisuallyHidden, {\n      id: navigationLabelId,\n      Component: navigationLabelComponent,\n      children: navigationLabel\n    }), /*#__PURE__*/_jsxs(\"ul\", {\n      className: \"vkuiPagination__list\",\n      children: [/*#__PURE__*/_jsx(\"li\", {\n        className: \"vkuiPagination__prevButtonContainer\",\n        children: /*#__PURE__*/_jsx(PaginationNavigationButton, {\n          type: \"prev\",\n          style: navigationButtonsStyle,\n          caption: prevButtonCaption,\n          Icon: isRtl ? Icon24ChevronCompactRight : Icon24ChevronCompactLeft,\n          a11yLabel: prevButtonLabel,\n          disabled: isFirstPage || disabled,\n          onClick: handlePrevClick,\n          \"data-page\": prevPage,\n          \"data-testid\": prevButtonTestId,\n          renderNavigationButton: renderNavigationButton\n        })\n      }), pages.map(renderPages), /*#__PURE__*/_jsx(\"li\", {\n        className: \"vkuiPagination__nextButtonContainer\",\n        children: /*#__PURE__*/_jsx(PaginationNavigationButton, {\n          type: \"next\",\n          style: navigationButtonsStyle,\n          caption: nextButtonCaption,\n          Icon: isRtl ? Icon24ChevronCompactLeft : Icon24ChevronCompactRight,\n          a11yLabel: nextButtonLabel,\n          disabled: isLastPage || disabled,\n          onClick: handleNextClick,\n          \"data-page\": nextPage,\n          \"data-testid\": nextButtonTestId,\n          renderNavigationButton: renderNavigationButton\n        })\n      })]\n    })]\n  }));\n};","map":{"version":3,"names":["React","Icon24ChevronCompactLeft","Icon24ChevronCompactRight","useAdaptivity","useConfigDirection","usePagination","RootComponent","VisuallyHidden","PaginationNavigationButton","PaginationPageButton","PaginationPageEllipsis","Pagination","_param","currentPage","siblingCount","boundaryCount","totalPages","disabled","prevButtonCaption","nextButtonCaption","navigationButtonsStyle","getPageLabel","navigationLabel","navigationLabelComponent","prevButtonLabel","nextButtonLabel","onChange","renderPageButton","pageButtonTestId","prevButtonTestId","nextButtonTestId","renderNavigationButton","resetProps","_object_without_properties","direction","isRtl","pages","isFirstPage","isLastPage","prevPage","undefined","nextPage","handlePrevClick","useCallback","event","handleClick","page","currentTarget","dataset","Number","handleNextClick","sizeY","renderPages","isCurrent","dataTestId","_jsx","onClick","navigationLabelId","useId","_jsxs","_object_spread_props","_object_spread","Component","role","id","className","type","style","caption","Icon","a11yLabel","map"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/components/Pagination/Pagination.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { Icon24ChevronCompactLeft, Icon24ChevronCompactRight } from '@vkontakte/icons';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\nimport { useConfigDirection } from '../../hooks/useConfigDirection';\nimport { type PaginationPageType, usePagination } from '../../hooks/usePagination';\nimport type { HasComponent, HTMLAttributesWithRootRef } from '../../types';\nimport { RootComponent } from '../RootComponent/RootComponent';\nimport { VisuallyHidden } from '../VisuallyHidden/VisuallyHidden';\nimport {\n  type CustomPaginationNavigationButton,\n  PaginationNavigationButton,\n  type PaginationNavigationButtonProps,\n} from './PaginationNavigationButton/PaginationNavigationButton';\nimport {\n  type CustomPaginationPageButtonProps,\n  PaginationPageButton,\n} from './PaginationPage/PaginationPageButton';\nimport { PaginationPageEllipsis } from './PaginationPage/PaginationPageEllipsis';\nimport styles from './Pagination.module.css';\n\nexport interface PaginationProps extends Omit<HTMLAttributesWithRootRef<HTMLElement>, 'onChange'> {\n  /**\n   * Текущая страница.\n   */\n  currentPage?: number;\n  /**\n   * Кол-во всегда видимых страниц по краям текущей страницы.\n   */\n  siblingCount?: number;\n  /**\n   * Кол-во всегда видимых страниц в начале и в конце.\n   */\n  boundaryCount?: number;\n  /**\n   * Общее кол-во страниц.\n   */\n  totalPages?: number;\n  /**\n   * Блокировка всех кнопок.\n   */\n  disabled?: boolean;\n  /**\n   * Декоративный текст для кнопки навигации назад.\n   *\n   * > Note: Экранные дикторы будут использовать `prevButtonLabel`.\n   */\n  prevButtonCaption?: string;\n  /**\n   * Декоративный текст для кнопки навигации вперёд.\n   *\n   * > Note: Экранные дикторы будут использовать `nextButtonLabel`.\n   */\n  nextButtonCaption?: string;\n  /**\n   * Задаёт стиль отображения кнопок навигации.\n   *\n   * - `icon` – показывать только иконку;\n   * - `caption` – показывать только подпись;\n   * - `both` – показывать и иконку, и подпись.\n   */\n  navigationButtonsStyle?: PaginationNavigationButtonProps['style'];\n  /**\n   * [a11y] Метка для обозначения блока навигации.\n   */\n  navigationLabel?: string;\n  navigationLabelComponent?: HasComponent['Component'];\n  /**\n   * [a11y] Метка для кнопки навигации назад.\n   */\n  prevButtonLabel?: string;\n  /**\n   * [a11y] Метка для кнопки навигации вперёд.\n   */\n  nextButtonLabel?: string;\n  /**\n   * [a11y] Функция для переопределения и/или локализации метки кнопки страницы.\n   *\n   * > Note: По возможности лучше не использовать,\n   * так как компонент и так проставляет номер страницы в разметку,\n   * что достаточно для пользователей скринридеров.\n   * Дополнительная информация скорее будет избыточна,\n   * так как будет зачитываться для каждой кнопки при перемещении по списку.\n   */\n  getPageLabel?: (isCurrent: boolean) => string;\n  onChange?: (page: number, event: React.MouseEvent<HTMLElement>) => void;\n  /**\n   * Функция для кастомного рендера кнопок страниц.\n   *\n   * > Note: `CustomPaginationPageButtonProps` наследует API [Tappable](https://vkcom.github.io/VKUI/#/Tappable).\n   */\n  renderPageButton?: (props: CustomPaginationPageButtonProps) => React.ReactNode;\n  /**\n   Функция для кастомного рендера кнопок навигации `prev` и `next`.\n   *\n   * > Note: `CustomPaginationNavigationButton` наследует API [Button](https://vkcom.github.io/VKUI/#/Button).\n   */\n  renderNavigationButton?: (props: CustomPaginationNavigationButton) => React.ReactNode;\n  /**\n   * Передает атрибут `data-testid` для кнопок страниц\n   */\n  pageButtonTestId?: (day: PaginationPageType, active: boolean) => string;\n  /**\n   * Передает атрибут `data-testid` для кнопки `prev`\n   */\n  prevButtonTestId?: string;\n  /**\n   * Передает атрибут `data-testid` для кнопки `next`\n   */\n  nextButtonTestId?: string;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Pagination\n */\nexport const Pagination = ({\n  currentPage = 1,\n  siblingCount = 1,\n  boundaryCount = 1,\n  totalPages = 1,\n  disabled,\n  prevButtonCaption = 'Назад',\n  nextButtonCaption = 'Вперёд',\n  navigationButtonsStyle = 'icon',\n  getPageLabel,\n  navigationLabel = 'Страницы',\n  navigationLabelComponent = 'h2',\n  prevButtonLabel = 'Перейти на предыдущую страницу',\n  nextButtonLabel = 'Перейти на следующую страницу',\n  onChange,\n  renderPageButton,\n  pageButtonTestId,\n  prevButtonTestId,\n  nextButtonTestId,\n  renderNavigationButton,\n  ...resetProps\n}: PaginationProps): React.ReactNode => {\n  const direction = useConfigDirection();\n  const isRtl = direction === 'rtl';\n  const pages = usePagination({\n    currentPage,\n    totalPages,\n    siblingCount,\n    boundaryCount,\n  });\n  const isFirstPage = currentPage === 1;\n  const isLastPage = currentPage === totalPages;\n  const prevPage = isFirstPage ? undefined : currentPage - 1;\n  const nextPage = isLastPage ? undefined : currentPage + 1;\n\n  const handlePrevClick = React.useCallback(\n    (event: React.MouseEvent<HTMLElement>) => {\n      if (onChange && prevPage !== undefined) {\n        onChange(prevPage, event);\n      }\n    },\n    [prevPage, onChange],\n  );\n\n  const handleClick = React.useCallback(\n    (event: React.MouseEvent<HTMLElement>) => {\n      const page: string = event.currentTarget.dataset.page || '1';\n      onChange?.(Number(page), event);\n    },\n    [onChange],\n  );\n\n  const handleNextClick = React.useCallback(\n    (event: React.MouseEvent<HTMLElement>) => {\n      if (onChange && nextPage !== undefined) {\n        onChange(nextPage, event);\n      }\n    },\n    [nextPage, onChange],\n  );\n\n  const { sizeY } = useAdaptivity();\n\n  const renderPages = React.useCallback(\n    (page: PaginationPageType) => {\n      const isCurrent = page === currentPage;\n      const dataTestId = pageButtonTestId?.(page, isCurrent);\n\n      switch (page) {\n        case 'start-ellipsis':\n        case 'end-ellipsis':\n          return (\n            <li key={page}>\n              <PaginationPageEllipsis disabled={disabled} data-testid={dataTestId} />\n            </li>\n          );\n        default: {\n          return (\n            <li key={page}>\n              <PaginationPageButton\n                getPageLabel={getPageLabel}\n                isCurrent={isCurrent}\n                onClick={handleClick}\n                disabled={disabled}\n                sizeY={sizeY}\n                renderPageButton={renderPageButton}\n                data-testid={dataTestId}\n              >\n                {page}\n              </PaginationPageButton>\n            </li>\n          );\n        }\n      }\n    },\n    [currentPage, disabled, getPageLabel, handleClick, renderPageButton, sizeY, pageButtonTestId],\n  );\n\n  const navigationLabelId = React.useId();\n\n  return (\n    <RootComponent\n      Component=\"nav\"\n      role=\"navigation\"\n      aria-labelledby={navigationLabelId}\n      {...resetProps}\n    >\n      <VisuallyHidden id={navigationLabelId} Component={navigationLabelComponent}>\n        {navigationLabel}\n      </VisuallyHidden>\n      <ul className={styles.list}>\n        <li className={styles.prevButtonContainer}>\n          <PaginationNavigationButton\n            type=\"prev\"\n            style={navigationButtonsStyle}\n            caption={prevButtonCaption}\n            Icon={isRtl ? Icon24ChevronCompactRight : Icon24ChevronCompactLeft}\n            a11yLabel={prevButtonLabel}\n            disabled={isFirstPage || disabled}\n            onClick={handlePrevClick}\n            data-page={prevPage}\n            data-testid={prevButtonTestId}\n            renderNavigationButton={renderNavigationButton}\n          />\n        </li>\n        {pages.map(renderPages)}\n        <li className={styles.nextButtonContainer}>\n          <PaginationNavigationButton\n            type=\"next\"\n            style={navigationButtonsStyle}\n            caption={nextButtonCaption}\n            Icon={isRtl ? Icon24ChevronCompactLeft : Icon24ChevronCompactRight}\n            a11yLabel={nextButtonLabel}\n            disabled={isLastPage || disabled}\n            onClick={handleNextClick}\n            data-page={nextPage}\n            data-testid={nextButtonTestId}\n            renderNavigationButton={renderNavigationButton}\n          />\n        </li>\n      </ul>\n    </RootComponent>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}