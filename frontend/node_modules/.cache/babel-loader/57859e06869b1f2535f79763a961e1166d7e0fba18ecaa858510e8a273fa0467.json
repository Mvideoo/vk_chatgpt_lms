{"ast":null,"code":"import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Icon28ChevronRightCircle } from \"@vkontakte/icons\";\nimport { classNames } from \"@vkontakte/vkjs\";\nimport { Tappable } from \"../../Tappable/Tappable.js\";\nimport { Subhead } from \"../../Typography/Subhead/Subhead.js\";\nconst sizeClassNames = {\n  s: \"vkuiHorizontalCellShowMore__sizeS\",\n  m: \"vkuiHorizontalCellShowMore__sizeM\"\n};\nexport const HorizontalCellShowMore = _param => {\n  var {\n      className,\n      style,\n      getRef,\n      getRootRef,\n      height,\n      size = 's',\n      children = size === 's' ? 'Все' : 'Показать все',\n      centered = false\n    } = _param,\n    restProps = _object_without_properties(_param, [\"className\", \"style\", \"getRef\", \"getRootRef\", \"height\", \"size\", \"children\", \"centered\"]);\n  return /*#__PURE__*/_jsx(\"div\", {\n    style: style,\n    className: classNames(\"vkuiHorizontalCellShowMore__host\", centered && \"vkuiHorizontalCellShowMore__centered\", sizeClassNames[size], className),\n    ref: getRootRef,\n    children: /*#__PURE__*/_jsxs(Tappable, _object_spread_props(_object_spread({\n      style: size === 's' ? undefined : {\n        height\n      },\n      className: \"vkuiHorizontalCellShowMore__body\",\n      getRootRef: getRef,\n      activeMode: \"opacity\",\n      hoverMode: \"opacity\"\n    }, restProps), {\n      children: [/*#__PURE__*/_jsx(Icon28ChevronRightCircle, {\n        className: \"vkuiHorizontalCellShowMore__icon\",\n        fill: \"currentColor\"\n      }), /*#__PURE__*/_jsx(Subhead, {\n        className: \"vkuiHorizontalCellShowMore__text\",\n        weight: \"2\",\n        children: children\n      })]\n    }))\n  });\n};","map":{"version":3,"names":["Icon28ChevronRightCircle","classNames","Tappable","Subhead","sizeClassNames","s","m","HorizontalCellShowMore","_param","className","style","getRef","getRootRef","height","size","children","centered","restProps","_object_without_properties","_jsx","ref","_jsxs","_object_spread_props","_object_spread","undefined","activeMode","hoverMode","fill","weight"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/components/HorizontalScroll/HorizontalCellShowMore/HorizontalCellShowMore.tsx"],"sourcesContent":["import { Icon28ChevronRightCircle } from '@vkontakte/icons';\nimport { classNames } from '@vkontakte/vkjs';\nimport type { HasRef, HasRootRef, LiteralUnion } from '../../../types';\nimport type { ImageBaseSize } from '../../ImageBase/ImageBase';\nimport { Tappable, type TappableProps } from '../../Tappable/Tappable';\nimport { Subhead, type SubheadProps } from '../../Typography/Subhead/Subhead';\nimport styles from './HorizontalCellShowMore.module.css';\n\nconst sizeClassNames = {\n  s: styles.sizeS,\n  m: styles.sizeM,\n};\n\nexport interface HorizontalCellShowMoreProps\n  extends Omit<TappableProps, 'getRootRef' | 'size' | 'borderRadiusMode'>,\n    HasRef<HTMLElement>,\n    HasRootRef<HTMLDivElement> {\n  /**\n   * Задаёт высоту компонента. Должeн соответствовать размеру картинок\n   * внутри соседних `HorizontalCell` компонентов.\n   *\n   * Используйте размеры, заданные дизайн-системой (см. типы).\n   *\n   * > ⚠️ Использование кастомного размера – это пограничный кейс.\n   *\n   * Игнорируется, если `size='s'`.\n   */\n  height?: LiteralUnion<ImageBaseSize, number>;\n  /**\n   * Задаёт размер компонента.\n   *\n   * Значение `s` применяется для `<HorizontalCell size=\"s\"`, в остальных случаях рекомендуется `m`.\n   */\n  size?: 's' | 'm';\n  /**\n   * Предназначен для отрисовки текста.\n   * По умолчанию для `size='s'` содержит текст `Все`, для `size='m'` - `Показать все`.\n   * */\n  children?: SubheadProps['children'];\n  /**\n   * Выравнивание по центру относительно родителя\n   */\n  centered?: boolean;\n}\n\nexport const HorizontalCellShowMore = ({\n  className,\n  style,\n  getRef,\n  getRootRef,\n  height,\n  size = 's',\n  children = size === 's' ? 'Все' : 'Показать все',\n  centered = false,\n  ...restProps\n}: HorizontalCellShowMoreProps): React.ReactNode => {\n  return (\n    <div\n      style={style}\n      className={classNames(\n        styles.host,\n        centered && styles.centered,\n        sizeClassNames[size],\n        className,\n      )}\n      ref={getRootRef}\n    >\n      <Tappable\n        style={size === 's' ? undefined : { height }}\n        className={styles.body}\n        getRootRef={getRef}\n        activeMode=\"opacity\"\n        hoverMode=\"opacity\"\n        {...restProps}\n      >\n        <Icon28ChevronRightCircle className={styles.icon} fill=\"currentColor\" />\n\n        <Subhead className={styles.text} weight=\"2\">\n          {children}\n        </Subhead>\n      </Tappable>\n    </div>\n  );\n};\n"],"mappings":";;;;AAAA,SAASA,wBAAwB,QAAQ;AACzC,SAASC,UAAU,QAAQ;AAG3B,SAASC,QAAQ,QAA4B;AAC7C,SAASC,OAAO,QAA2B;AAG3C,MAAMC,cAAA,GAAiB;EACrBC,CAAC;EACDC,CAAC;AACH;AAkCA,OAAO,MAAMC,sBAAA,GAAyBC,MAAA;MAAC;MACrCC,SAAS;MACTC,KAAK;MACLC,MAAM;MACNC,UAAU;MACVC,MAAM;MACNC,IAAA,GAAO,GAAG;MACVC,QAAA,GAAWD,IAAA,KAAS,MAAM,QAAQ,cAAc;MAChDE,QAAA,GAAW;IAAK,CAEY,GAAAR,MAAA;IADzBS,SAAA,GAAAC,0BAAA,CAAAV,MAAA,GARH,aACA,SACA,UACA,cACA,UACA,QACA,YACA,W;EAGA,oBACEW,IAAA,CAAC;IACCT,KAAA,EAAOA,KAAA;IACPD,SAAA,EAAWR,UAAA,qCAETe,QAAA,4CACAZ,cAAc,CAACU,IAAA,CAAK,EACpBL,SAAA;IAEFW,GAAA,EAAKR,UAAA;cAEL,aAAAS,KAAA,CAACnB,QAAA,EAAAoB,oBAAA,CAAAC,cAAA;MACCb,KAAA,EAAOI,IAAA,KAAS,MAAMU,SAAA,GAAY;QAAEX;MAAO;MAC3CJ,SAAS;MACTG,UAAA,EAAYD,MAAA;MACZc,UAAA,EAAW;MACXC,SAAA,EAAU;OACNT,SAAA;8BAEJE,IAAA,CAACnB,wBAAA;QAAyBS,SAAS;QAAekB,IAAA,EAAK;uBAEvDR,IAAA,CAAChB,OAAA;QAAQM,SAAS;QAAemB,MAAA,EAAO;kBACrCb;;;;AAKX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}