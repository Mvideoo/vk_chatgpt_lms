{"ast":null,"code":"import { tryToCheckIsDesktop, ViewWidth } from \"../../lib/adaptivity/index.js\";\nimport { forcedProps } from \"./constants.js\";\nexport const getAdaptiveSizeType = (type, compactMediaQueryProps, regularMediaQueryProps) => {\n  return {\n    compact: type === undefined ? compactMediaQueryProps : type === 'compact' ? forcedProps : false,\n    regular: type === undefined ? regularMediaQueryProps : type === 'regular' ? forcedProps : false\n  };\n};\nexport const getAdaptiveViewWidth = (viewWidth, viewWidthMapProps) => {\n  return {\n    tabletMinus: viewWidth === undefined ? viewWidthMapProps.tabletMinus : viewWidth < ViewWidth.TABLET ? forcedProps : false,\n    tabletPlus: viewWidth === undefined ? viewWidthMapProps.tabletPlus : viewWidth >= ViewWidth.TABLET ? forcedProps : false\n  };\n};\nexport const getAdaptiveDeviceType = (viewWidth, viewHeight, hasPointer, platform, deviceTypeMapProps) => {\n  const isDesktop = tryToCheckIsDesktop(viewWidth, viewHeight, hasPointer, platform);\n  if (isDesktop === null) {\n    return {\n      mobile: deviceTypeMapProps.mobile,\n      desktop: deviceTypeMapProps.desktop\n    };\n  }\n  if (isDesktop) {\n    return {\n      mobile: false,\n      desktop: forcedProps\n    };\n  }\n  return {\n    mobile: forcedProps,\n    desktop: false\n  };\n};","map":{"version":3,"names":["tryToCheckIsDesktop","ViewWidth","forcedProps","getAdaptiveSizeType","type","compactMediaQueryProps","regularMediaQueryProps","compact","undefined","regular","getAdaptiveViewWidth","viewWidth","viewWidthMapProps","tabletMinus","TABLET","tabletPlus","getAdaptiveDeviceType","viewHeight","hasPointer","platform","deviceTypeMapProps","isDesktop","mobile","desktop"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/hooks/useAdaptivityConditionalRender/helpers.ts"],"sourcesContent":["import {\n  type SizeTypeValues,\n  tryToCheckIsDesktop,\n  type ViewHeightType,\n  ViewWidth,\n  type ViewWidthType,\n} from '../../lib/adaptivity';\nimport type { PlatformType } from '../../lib/platform';\nimport { forcedProps } from './constants';\nimport type {\n  AdaptiveDeviceType,\n  AdaptiveSizeType,\n  AdaptiveViewWidth,\n  DeviceTypeCSSBreakpoints,\n  ElementProps,\n  ViewWidthCSSBreakpoints,\n} from './types';\n\nexport const getAdaptiveSizeType = (\n  type: undefined | SizeTypeValues,\n  compactMediaQueryProps: ElementProps,\n  regularMediaQueryProps: ElementProps,\n): AdaptiveSizeType => {\n  return {\n    compact: type === undefined ? compactMediaQueryProps : type === 'compact' ? forcedProps : false,\n    regular: type === undefined ? regularMediaQueryProps : type === 'regular' ? forcedProps : false,\n  };\n};\n\nexport const getAdaptiveViewWidth = (\n  viewWidth: undefined | ViewWidthType,\n  viewWidthMapProps: Record<ViewWidthCSSBreakpoints, ElementProps>,\n): AdaptiveViewWidth => {\n  return {\n    tabletMinus:\n      viewWidth === undefined\n        ? viewWidthMapProps.tabletMinus\n        : viewWidth < ViewWidth.TABLET\n          ? forcedProps\n          : false,\n    tabletPlus:\n      viewWidth === undefined\n        ? viewWidthMapProps.tabletPlus\n        : viewWidth >= ViewWidth.TABLET\n          ? forcedProps\n          : false,\n  };\n};\n\nexport const getAdaptiveDeviceType = (\n  viewWidth: undefined | ViewWidthType,\n  viewHeight: undefined | ViewHeightType,\n  hasPointer: undefined | boolean,\n  platform: PlatformType,\n  deviceTypeMapProps: Record<DeviceTypeCSSBreakpoints, ElementProps>,\n): AdaptiveDeviceType => {\n  const isDesktop = tryToCheckIsDesktop(viewWidth, viewHeight, hasPointer, platform);\n\n  if (isDesktop === null) {\n    return {\n      mobile: deviceTypeMapProps.mobile,\n      desktop: deviceTypeMapProps.desktop,\n    };\n  }\n\n  if (isDesktop) {\n    return {\n      mobile: false,\n      desktop: forcedProps,\n    };\n  }\n\n  return {\n    mobile: forcedProps,\n    desktop: false,\n  };\n};\n"],"mappings":"AAAA,SAEEA,mBAAmB,EAEnBC,SAAS,QAEJ;AAEP,SAASC,WAAW,QAAQ;AAU5B,OAAO,MAAMC,mBAAA,GAAsBA,CACjCC,IAAA,EACAC,sBAAA,EACAC,sBAAA;EAEA,OAAO;IACLC,OAAA,EAASH,IAAA,KAASI,SAAA,GAAYH,sBAAA,GAAyBD,IAAA,KAAS,YAAYF,WAAA,GAAc;IAC1FO,OAAA,EAASL,IAAA,KAASI,SAAA,GAAYF,sBAAA,GAAyBF,IAAA,KAAS,YAAYF,WAAA,GAAc;EAC5F;AACF;AAEA,OAAO,MAAMQ,oBAAA,GAAuBA,CAClCC,SAAA,EACAC,iBAAA;EAEA,OAAO;IACLC,WAAA,EACEF,SAAA,KAAcH,SAAA,GACVI,iBAAA,CAAkBC,WAAW,GAC7BF,SAAA,GAAYV,SAAA,CAAUa,MAAM,GAC1BZ,WAAA,GACA;IACRa,UAAA,EACEJ,SAAA,KAAcH,SAAA,GACVI,iBAAA,CAAkBG,UAAU,GAC5BJ,SAAA,IAAaV,SAAA,CAAUa,MAAM,GAC3BZ,WAAA,GACA;EACV;AACF;AAEA,OAAO,MAAMc,qBAAA,GAAwBA,CACnCL,SAAA,EACAM,UAAA,EACAC,UAAA,EACAC,QAAA,EACAC,kBAAA;EAEA,MAAMC,SAAA,GAAYrB,mBAAA,CAAoBW,SAAA,EAAWM,UAAA,EAAYC,UAAA,EAAYC,QAAA;EAEzE,IAAIE,SAAA,KAAc,MAAM;IACtB,OAAO;MACLC,MAAA,EAAQF,kBAAA,CAAmBE,MAAM;MACjCC,OAAA,EAASH,kBAAA,CAAmBG;IAC9B;EACF;EAEA,IAAIF,SAAA,EAAW;IACb,OAAO;MACLC,MAAA,EAAQ;MACRC,OAAA,EAASrB;IACX;EACF;EAEA,OAAO;IACLoB,MAAA,EAAQpB,WAAA;IACRqB,OAAA,EAAS;EACX;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}