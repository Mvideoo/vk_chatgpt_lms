{"ast":null,"code":"import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nimport { classNames } from \"@vkontakte/vkjs\";\nimport { mergeStyle } from \"../../helpers/mergeStyle.js\";\n/**\n * Базовый корневой компонент.\n */\nexport const RootComponent = _param => {\n  var {\n      Component = 'div',\n      baseClassName,\n      className,\n      baseStyle,\n      style,\n      getRootRef\n    } = _param,\n    restProps = _object_without_properties(_param, [\"Component\", \"baseClassName\", \"className\", \"baseStyle\", \"style\", \"getRootRef\"]);\n  return /*#__PURE__*/_jsx(Component, _object_spread({\n    ref: getRootRef,\n    className: classNames(className, baseClassName, \"vkuiRootComponent__host\", restProps.hidden === true && \"vkuiRootComponent__hidden\"),\n    style: mergeStyle(baseStyle, style)\n  }, restProps));\n};","map":{"version":3,"names":["React","classNames","mergeStyle","RootComponent","_param","Component","baseClassName","className","baseStyle","style","getRootRef","restProps","_object_without_properties","_jsx","_object_spread","ref","hidden"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/components/RootComponent/RootComponent.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { mergeStyle } from '../../helpers/mergeStyle';\nimport type { HasComponent, HasRootRef } from '../../types';\nimport styles from './RootComponent.module.css';\n\nexport interface RootComponentProps<T>\n  extends React.AllHTMLAttributes<T>,\n    HasRootRef<T>,\n    HasComponent {\n  baseClassName?: string | false;\n  baseStyle?: React.CSSProperties;\n}\n\n/**\n * Базовый корневой компонент.\n */\nexport const RootComponent = <T,>({\n  Component = 'div',\n  baseClassName,\n  className,\n  baseStyle,\n  style,\n  getRootRef,\n  ...restProps\n}: RootComponentProps<T>): React.ReactNode => (\n  <Component\n    ref={getRootRef}\n    className={classNames(\n      className,\n      baseClassName,\n      styles.host,\n      restProps.hidden === true && styles.hidden,\n    )}\n    style={mergeStyle(baseStyle, style)}\n    {...restProps}\n  />\n);\n"],"mappings":";;;AAAA,YAAYA,KAAA,MAAW;AACvB,SAASC,UAAU,QAAQ;AAC3B,SAASC,UAAU,QAAQ;AAY3B;;;AAGA,OAAO,MAAMC,aAAA,GAAgBC,MAAA;MAAK;MAChCC,SAAA,GAAY,KAAK;MACjBC,aAAa;MACbC,SAAS;MACTC,SAAS;MACTC,KAAK;MACLC;IAAU,CAEY,GAAAN,MAAA;IADnBO,SAAA,GAAAC,0BAAA,CAAAR,MAAA,GANH,aACA,iBACA,aACA,aACA,SACA,a;sBAGAS,IAAA,CAACR,SAAA,EAAAS,cAAA;IACCC,GAAA,EAAKL,UAAA;IACLH,SAAA,EAAWN,UAAA,CACTM,SAAA,EACAD,aAAA,6BAEAK,SAAA,CAAUK,MAAM,KAAK;IAEvBP,KAAA,EAAOP,UAAA,CAAWM,SAAA,EAAWC,KAAA;KACzBE,SAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}