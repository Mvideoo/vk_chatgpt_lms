{"ast":null,"code":"import * as React from \"react\";\nimport { ConfigProviderContext } from \"../../components/ConfigProvider/ConfigProviderContext.js\";\nimport { DEFAULT_COLOR_SCHEME } from \"../colorScheme/index.js\";\nimport { Platform } from \"../platform.js\";\nimport { DEFAULT_TOKENS_CLASS_NAMES } from \"./constants.js\";\nconst isTokensClassNamesForPlatforms = tokensClassNames => Platform.ANDROID in tokensClassNames || Platform.IOS in tokensClassNames || Platform.VKCOM in tokensClassNames;\nconst getTokenClassNameByAppearance = (colorScheme, tokensClassNames) => tokensClassNames ? tokensClassNames[colorScheme] : undefined;\nconst getAppearanceTokenClassNameByPlatform = (platform, tokensClassNames) => tokensClassNames ? tokensClassNames[platform] : undefined;\n/**\n * @private\n */\nexport const useTokensClassName = () => {\n  const {\n    platform,\n    colorScheme = DEFAULT_COLOR_SCHEME,\n    tokensClassNames\n  } = React.useContext(ConfigProviderContext);\n  const colorSchemeClassName = isTokensClassNamesForPlatforms(tokensClassNames) ? getAppearanceTokenClassNameByPlatform(platform, tokensClassNames) : tokensClassNames;\n  const tokensClassName = getTokenClassNameByAppearance(colorScheme, colorSchemeClassName);\n  return tokensClassName ? tokensClassName : DEFAULT_TOKENS_CLASS_NAMES[platform][colorScheme];\n};","map":{"version":3,"names":["React","ConfigProviderContext","DEFAULT_COLOR_SCHEME","Platform","DEFAULT_TOKENS_CLASS_NAMES","isTokensClassNamesForPlatforms","tokensClassNames","ANDROID","IOS","VKCOM","getTokenClassNameByAppearance","colorScheme","undefined","getAppearanceTokenClassNameByPlatform","platform","useTokensClassName","useContext","colorSchemeClassName","tokensClassName"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/lib/tokens/useTokenClassName.ts"],"sourcesContent":["import * as React from 'react';\nimport { ConfigProviderContext } from '../../components/ConfigProvider/ConfigProviderContext';\nimport { type ColorSchemeType, DEFAULT_COLOR_SCHEME } from '../colorScheme';\nimport { Platform, type PlatformType } from '../platform';\nimport { DEFAULT_TOKENS_CLASS_NAMES } from './constants';\nimport type {\n  TokensClassNames,\n  TokensClassNamesByAppearances,\n  TokensClassNamesByPlatforms,\n} from './types';\n\nconst isTokensClassNamesForPlatforms = (\n  tokensClassNames: TokensClassNames,\n): tokensClassNames is TokensClassNamesByPlatforms =>\n  Platform.ANDROID in tokensClassNames ||\n  Platform.IOS in tokensClassNames ||\n  Platform.VKCOM in tokensClassNames;\n\nconst getTokenClassNameByAppearance = (\n  colorScheme: ColorSchemeType,\n  tokensClassNames?: TokensClassNamesByAppearances,\n) => (tokensClassNames ? tokensClassNames[colorScheme] : undefined);\n\nconst getAppearanceTokenClassNameByPlatform = (\n  platform: PlatformType,\n  tokensClassNames?: TokensClassNamesByPlatforms,\n) => (tokensClassNames ? tokensClassNames[platform] : undefined);\n\n/**\n * @private\n */\nexport const useTokensClassName = (): string => {\n  const {\n    platform,\n    colorScheme = DEFAULT_COLOR_SCHEME,\n    tokensClassNames,\n  } = React.useContext(ConfigProviderContext);\n\n  const colorSchemeClassName = isTokensClassNamesForPlatforms(tokensClassNames)\n    ? getAppearanceTokenClassNameByPlatform(platform, tokensClassNames)\n    : tokensClassNames;\n\n  const tokensClassName = getTokenClassNameByAppearance(colorScheme, colorSchemeClassName);\n\n  return tokensClassName ? tokensClassName : DEFAULT_TOKENS_CLASS_NAMES[platform][colorScheme];\n};\n"],"mappings":"AAAA,YAAYA,KAAA,MAAW;AACvB,SAASC,qBAAqB,QAAQ;AACtC,SAA+BC,oBAAoB,QAAQ;AAC3D,SAASC,QAAQ,QAA2B;AAC5C,SAASC,0BAA0B,QAAQ;AAO3C,MAAMC,8BAAA,GACJC,gBAAA,IAEAH,QAAA,CAASI,OAAO,IAAID,gBAAA,IACpBH,QAAA,CAASK,GAAG,IAAIF,gBAAA,IAChBH,QAAA,CAASM,KAAK,IAAIH,gBAAA;AAEpB,MAAMI,6BAAA,GAAgCA,CACpCC,WAAA,EACAL,gBAAA,KACIA,gBAAA,GAAmBA,gBAAgB,CAACK,WAAA,CAAY,GAAGC,SAAA;AAEzD,MAAMC,qCAAA,GAAwCA,CAC5CC,QAAA,EACAR,gBAAA,KACIA,gBAAA,GAAmBA,gBAAgB,CAACQ,QAAA,CAAS,GAAGF,SAAA;AAEtD;;;AAGA,OAAO,MAAMG,kBAAA,GAAqBA,CAAA;EAChC,MAAM;IACJD,QAAQ;IACRH,WAAA,GAAcT,oBAAoB;IAClCI;EAAgB,CACjB,GAAGN,KAAA,CAAMgB,UAAU,CAACf,qBAAA;EAErB,MAAMgB,oBAAA,GAAuBZ,8BAAA,CAA+BC,gBAAA,IACxDO,qCAAA,CAAsCC,QAAA,EAAUR,gBAAA,IAChDA,gBAAA;EAEJ,MAAMY,eAAA,GAAkBR,6BAAA,CAA8BC,WAAA,EAAaM,oBAAA;EAEnE,OAAOC,eAAA,GAAkBA,eAAA,GAAkBd,0BAA0B,CAACU,QAAA,CAAS,CAACH,WAAA,CAAY;AAC9F","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}