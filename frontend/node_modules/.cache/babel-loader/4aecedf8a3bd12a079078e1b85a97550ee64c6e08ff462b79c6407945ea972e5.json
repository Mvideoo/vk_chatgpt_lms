{"ast":null,"code":"'use client';\n\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nimport { warnOnce } from \"../../lib/warnOnce.js\";\nimport { AppRootPortal } from \"../AppRoot/AppRootPortal.js\";\nimport { useScrollLock } from \"../AppRoot/ScrollContext.js\";\nimport { PopoutWrapper } from \"../PopoutWrapper/PopoutWrapper.js\";\nimport { AlertBase } from \"./AlertBase.js\";\nconst warn = warnOnce('Alert');\n/**\n * @see https://vkcom.github.io/VKUI/#/Alert\n */\nexport const Alert = _param => {\n  var {\n      usePortal,\n      style,\n      className,\n      getRootRef\n    } = _param,\n    restProps = _object_without_properties(_param, [\"usePortal\", \"style\", \"className\", \"getRootRef\"]);\n  const [closing, setClosing] = React.useState(false);\n  const close = React.useCallback(() => {\n    setClosing(true);\n  }, []);\n  useScrollLock();\n  if (process.env.NODE_ENV === 'development' && !restProps.title && !restProps['aria-label'] && !restProps['aria-labelledby']) {\n    warn('Если \"title\" не используется, то необходимо задать либо \"aria-label\", либо \"aria-labelledby\" (см. правило axe aria-dialog-name)');\n  }\n  return /*#__PURE__*/_jsx(AppRootPortal, {\n    usePortal: usePortal,\n    children: /*#__PURE__*/_jsx(PopoutWrapper, {\n      className: className,\n      closing: closing,\n      style: style,\n      onClick: close,\n      getRootRef: getRootRef,\n      strategy: \"fixed\",\n      children: /*#__PURE__*/_jsx(AlertBase, _object_spread_props(_object_spread({}, restProps), {\n        closing: closing,\n        setClosing: setClosing\n      }))\n    })\n  });\n};","map":{"version":3,"names":["React","warnOnce","AppRootPortal","useScrollLock","PopoutWrapper","AlertBase","warn","Alert","_param","usePortal","style","className","getRootRef","restProps","_object_without_properties","closing","setClosing","useState","close","useCallback","process","env","NODE_ENV","title","_jsx","onClick","strategy","_object_spread_props","_object_spread"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/components/Alert/Alert.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { type UseFocusTrapProps } from '../../hooks/useFocusTrap';\nimport { warnOnce } from '../../lib/warnOnce';\nimport type {\n  AlignType,\n  AnchorHTMLAttributesOnly,\n  HasDataAttribute,\n  HasRootRef,\n} from '../../types';\nimport type { AppRootPortalProps } from '../AppRoot/AppRootPortal';\nimport { AppRootPortal } from '../AppRoot/AppRootPortal';\nimport { useScrollLock } from '../AppRoot/ScrollContext';\nimport type { ButtonProps } from '../Button/Button';\nimport { PopoutWrapper } from '../PopoutWrapper/PopoutWrapper';\nimport type { AlertActionProps } from './AlertAction';\nimport { AlertBase } from './AlertBase';\n\ntype AlertActionMode = 'cancel' | 'destructive' | 'default';\n\nexport type { AlertActionProps };\n\nexport interface AlertActionInterface\n  extends Pick<ButtonProps, 'Component'>,\n    AnchorHTMLAttributesOnly,\n    HasDataAttribute {\n  title: string;\n  /**\n   * Обработчик клика на опцию. Если свойство `autoCloseDisabled` включено,\n   * то в аргументы `action` передаётся объект с функцией close,\n   * вызвав которую можно закрыть `action` вручную.\n   */\n  action?: (args?: { close?: VoidFunction }) => void;\n  /**\n   * По умолчанию клик на опцию вызывает переданную в `Alert` функцию `onClose`, данное свойство\n   * позволяет отключить такое поведение\n   */\n  autoCloseDisabled?: boolean;\n  mode: AlertActionMode;\n}\n\nexport interface AlertProps\n  extends Omit<React.HTMLAttributes<HTMLElement>, 'title'>,\n    Pick<UseFocusTrapProps, 'restoreFocus'>,\n    HasRootRef<HTMLDivElement> {\n  actionsLayout?: 'vertical' | 'horizontal';\n  actionsAlign?: AlignType;\n  actions?: AlertActionInterface[];\n  renderAction?: (props: AlertActionProps) => React.ReactNode;\n  title?: React.ReactNode;\n  description?: React.ReactNode;\n  onClose: VoidFunction;\n  /**\n   * Текст кнопки закрытия. Делает ее доступной для ассистивных технологий\n   */\n  dismissLabel?: string;\n  /**\n   * Расположение кнопки закрытия (внутри и вне `popout'a`)\n   * Доступно только в `compact`-режиме, не отображается на `iOS`\n   */\n  dismissButtonMode?: 'inside' | 'outside';\n  /**\n   * Передает атрибут `data-testid` для кнопки закрытия\n   */\n  dismissButtonTestId?: string;\n  /**\n   * Передает атрибут `data-testid` для заголовка\n   */\n  titleTestId?: string;\n  /**\n   * Передает атрибут `data-testid` для описания\n   */\n  descriptionTestId?: string;\n  usePortal?: AppRootPortalProps['usePortal'];\n  /**\n   * По умолчанию событие onClick не всплывает\n   */\n  allowClickPropagation?: boolean;\n}\n\nconst warn = warnOnce('Alert');\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Alert\n */\nexport const Alert = ({\n  usePortal,\n  style,\n  className,\n  getRootRef,\n  ...restProps\n}: AlertProps): React.ReactNode => {\n  const [closing, setClosing] = React.useState(false);\n\n  const close = React.useCallback(() => {\n    setClosing(true);\n  }, []);\n\n  useScrollLock();\n\n  if (\n    process.env.NODE_ENV === 'development' &&\n    !restProps.title &&\n    !restProps['aria-label'] &&\n    !restProps['aria-labelledby']\n  ) {\n    warn(\n      'Если \"title\" не используется, то необходимо задать либо \"aria-label\", либо \"aria-labelledby\" (см. правило axe aria-dialog-name)',\n    );\n  }\n\n  return (\n    <AppRootPortal usePortal={usePortal}>\n      <PopoutWrapper\n        className={className}\n        closing={closing}\n        style={style}\n        onClick={close}\n        getRootRef={getRootRef}\n        strategy=\"fixed\"\n      >\n        <AlertBase {...restProps} closing={closing} setClosing={setClosing} />\n      </PopoutWrapper>\n    </AppRootPortal>\n  );\n};\n"],"mappings":"AAAA;;;;;;AAEA,YAAYA,KAAA,MAAW;AAEvB,SAASC,QAAQ,QAAQ;AAQzB,SAASC,aAAa,QAAQ;AAC9B,SAASC,aAAa,QAAQ;AAE9B,SAASC,aAAa,QAAQ;AAE9B,SAASC,SAAS,QAAQ;AAgE1B,MAAMC,IAAA,GAAOL,QAAA,CAAS;AAEtB;;;AAGA,OAAO,MAAMM,KAAA,GAAQC,MAAA;MAAC;MACpBC,SAAS;MACTC,KAAK;MACLC,SAAS;MACTC;IAAU,CAEC,GAAAJ,MAAA;IADRK,SAAA,GAAAC,0BAAA,CAAAN,MAAA,GAJH,aACA,SACA,aACA,a;EAGA,MAAM,CAACO,OAAA,EAASC,UAAA,CAAW,GAAGhB,KAAA,CAAMiB,QAAQ,CAAC;EAE7C,MAAMC,KAAA,GAAQlB,KAAA,CAAMmB,WAAW,CAAC;IAC9BH,UAAA,CAAW;EACb,GAAG,EAAE;EAELb,aAAA;EAEA,IACEiB,OAAA,CAAQC,GAAG,CAACC,QAAQ,KAAK,iBACzB,CAACT,SAAA,CAAUU,KAAK,IAChB,CAACV,SAAS,CAAC,aAAa,IACxB,CAACA,SAAS,CAAC,kBAAkB,EAC7B;IACAP,IAAA,CACE;EAEJ;EAEA,oBACEkB,IAAA,CAACtB,aAAA;IAAcO,SAAA,EAAWA,SAAA;cACxB,aAAAe,IAAA,CAACpB,aAAA;MACCO,SAAA,EAAWA,SAAA;MACXI,OAAA,EAASA,OAAA;MACTL,KAAA,EAAOA,KAAA;MACPe,OAAA,EAASP,KAAA;MACTN,UAAA,EAAYA,UAAA;MACZc,QAAA,EAAS;gBAET,aAAAF,IAAA,CAACnB,SAAA,EAAAsB,oBAAA,CAAAC,cAAA,KAAcf,SAAA;QAAWE,OAAA,EAASA,OAAA;QAASC,UAAA,EAAYA;;;;AAIhE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}