{"ast":null,"code":"import { classNames } from \"@vkontakte/vkjs\";\nexport const focusVisiblePresetModeClassNames = {\n  inside: \"vkuistyles__-focus-visible--mode-inside\",\n  outside: \"vkuistyles__-focus-visible--mode-outside\"\n};\nconst isPresetMode = mode => mode === 'inside' || mode === 'outside';\n/**\n * Используется для проброса классов состояния :focus-visible в компонент.\n *\n * Рулит исключительно классами. Чтобы определить, есть ли фокусное состояние,\n * используйте хуки `useFocusVisible()` и `useFocusWithin()`.\n */\nexport function useFocusVisibleClassName(_ref) {\n  let {\n    focusVisible = false,\n    mode = 'inside'\n  } = _ref;\n  const modeClassName = isPresetMode(mode) ? focusVisiblePresetModeClassNames[mode] : mode;\n  const focusVisibleClassNames = classNames(\"vkuistyles__-focus-visible\", focusVisible && \"vkuistyles__-focus-visible--focused\", focusVisible && modeClassName);\n  return focusVisibleClassNames;\n}","map":{"version":3,"names":["classNames","focusVisiblePresetModeClassNames","inside","outside","isPresetMode","mode","useFocusVisibleClassName","_ref","focusVisible","modeClassName","focusVisibleClassNames"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/hooks/useFocusVisibleClassName.ts"],"sourcesContent":["import { classNames } from '@vkontakte/vkjs';\nimport type { LiteralUnion } from '../types';\nimport styles from '../styles/focusVisible.module.css';\n\nexport const focusVisiblePresetModeClassNames: Record<'inside' | 'outside', string> = {\n  inside: styles['-focus-visible--mode-inside'],\n  outside: styles['-focus-visible--mode-outside'],\n};\n\ntype FocusVisiblePresetMode = keyof typeof focusVisiblePresetModeClassNames;\n\nexport type FocusVisibleMode = LiteralUnion<FocusVisiblePresetMode, string>;\n\nconst isPresetMode = (mode: FocusVisibleMode): mode is FocusVisiblePresetMode =>\n  mode === 'inside' || mode === 'outside';\n\nexport interface FocusVisibleModeProps {\n  /**\n   * Стиль аутлайна focus visible. Если передать произвольную строку, она добавится как css-класс при :focus-visible\n   */\n  focusVisibleMode?: FocusVisibleMode;\n}\n\nexport interface UseFocusVisibleClassNameProps {\n  focusVisible?: boolean;\n  mode?: FocusVisibleMode;\n}\n\n/**\n * Используется для проброса классов состояния :focus-visible в компонент.\n *\n * Рулит исключительно классами. Чтобы определить, есть ли фокусное состояние,\n * используйте хуки `useFocusVisible()` и `useFocusWithin()`.\n */\nexport function useFocusVisibleClassName({\n  focusVisible = false,\n  mode = 'inside',\n}: UseFocusVisibleClassNameProps): string {\n  const modeClassName = isPresetMode(mode) ? focusVisiblePresetModeClassNames[mode] : mode;\n\n  const focusVisibleClassNames = classNames(\n    styles['-focus-visible'],\n    focusVisible && styles['-focus-visible--focused'],\n    focusVisible && modeClassName,\n  );\n\n  return focusVisibleClassNames;\n}\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ;AAI3B,OAAO,MAAMC,gCAAA,GAAyE;EACpFC,MAAM;EACNC,OAAO;AACT;AAMA,MAAMC,YAAA,GAAgBC,IAAA,IACpBA,IAAA,KAAS,YAAYA,IAAA,KAAS;AAchC;;;;;;AAMA,OAAO,SAASC,yBAAAC,IAAA,EAGgB;EAAA,IAHS;IACvCC,YAAA,GAAe,KAAK;IACpBH,IAAA,GAAO;EAAQ,CACe,GAAAE,IAAA;EAC9B,MAAME,aAAA,GAAgBL,YAAA,CAAaC,IAAA,IAAQJ,gCAAgC,CAACI,IAAA,CAAK,GAAGA,IAAA;EAEpF,MAAMK,sBAAA,GAAyBV,UAAA,+BAE7BQ,YAAA,2CACAA,YAAA,IAAgBC,aAAA;EAGlB,OAAOC,sBAAA;AACT","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}