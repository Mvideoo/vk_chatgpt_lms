{"ast":null,"code":"import * as React from \"react\";\nexport function useResizeTextarea(onResize, grow) {\n  const elementRef = React.useRef(null);\n  const currentScrollHeight = React.useRef(undefined);\n  const resizeElement = React.useCallback(el => {\n    if (grow && el.offsetParent) {\n      el.style.height = '';\n      el.style.height = `${el.scrollHeight}px`;\n      if (el.scrollHeight !== currentScrollHeight.current && onResize) {\n        onResize(el);\n        currentScrollHeight.current = el.scrollHeight;\n      }\n    }\n  }, [grow, onResize]);\n  const resize = React.useCallback(() => {\n    const el = elementRef.current;\n    if (!el) {\n      /* istanbul ignore next: нет возможности воспроизвести */return;\n    }\n    resizeElement(el);\n  }, [elementRef, resizeElement]);\n  return [elementRef, resize];\n}","map":{"version":3,"names":["React","useResizeTextarea","onResize","grow","elementRef","useRef","currentScrollHeight","undefined","resizeElement","useCallback","el","offsetParent","style","height","scrollHeight","current","resize"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/components/Textarea/useResizeTextarea.ts"],"sourcesContent":["import * as React from 'react';\n\nexport function useResizeTextarea(\n  onResize: ((el: HTMLTextAreaElement) => void) | undefined,\n  grow: boolean,\n): readonly [React.RefObject<HTMLTextAreaElement | null>, () => void] {\n  const elementRef = React.useRef<HTMLTextAreaElement | null>(null);\n  const currentScrollHeight = React.useRef<number>(undefined);\n\n  const resizeElement = React.useCallback(\n    (el: HTMLTextAreaElement) => {\n      if (grow && el.offsetParent) {\n        el.style.height = '';\n        el.style.height = `${el.scrollHeight}px`;\n\n        if (el.scrollHeight !== currentScrollHeight.current && onResize) {\n          onResize(el);\n          currentScrollHeight.current = el.scrollHeight;\n        }\n      }\n    },\n    [grow, onResize],\n  );\n\n  const resize = React.useCallback(() => {\n    const el = elementRef.current;\n    if (!el) {\n      /* istanbul ignore next: нет возможности воспроизвести */\n      return;\n    }\n\n    resizeElement(el);\n  }, [elementRef, resizeElement]);\n\n  return [elementRef, resize];\n}\n"],"mappings":"AAAA,YAAYA,KAAA,MAAW;AAEvB,OAAO,SAASC,kBACdC,QAAyD,EACzDC,IAAa;EAEb,MAAMC,UAAA,GAAaJ,KAAA,CAAMK,MAAM,CAA6B;EAC5D,MAAMC,mBAAA,GAAsBN,KAAA,CAAMK,MAAM,CAASE,SAAA;EAEjD,MAAMC,aAAA,GAAgBR,KAAA,CAAMS,WAAW,CACpCC,EAAA;IACC,IAAIP,IAAA,IAAQO,EAAA,CAAGC,YAAY,EAAE;MAC3BD,EAAA,CAAGE,KAAK,CAACC,MAAM,GAAG;MAClBH,EAAA,CAAGE,KAAK,CAACC,MAAM,GAAG,GAAGH,EAAA,CAAGI,YAAY,IAAI;MAExC,IAAIJ,EAAA,CAAGI,YAAY,KAAKR,mBAAA,CAAoBS,OAAO,IAAIb,QAAA,EAAU;QAC/DA,QAAA,CAASQ,EAAA;QACTJ,mBAAA,CAAoBS,OAAO,GAAGL,EAAA,CAAGI,YAAY;MAC/C;IACF;EACF,GACA,CAACX,IAAA,EAAMD,QAAA,CAAS;EAGlB,MAAMc,MAAA,GAAShB,KAAA,CAAMS,WAAW,CAAC;IAC/B,MAAMC,EAAA,GAAKN,UAAA,CAAWW,OAAO;IAC7B,IAAI,CAACL,EAAA,EAAI;MACP,yDACA;IACF;IAEAF,aAAA,CAAcE,EAAA;EAChB,GAAG,CAACN,UAAA,EAAYI,aAAA,CAAc;EAE9B,OAAO,CAACJ,UAAA,EAAYY,MAAA,CAAO;AAC7B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}