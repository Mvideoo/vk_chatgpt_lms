{"ast":null,"code":"import { getNodeScroll, getScrollHeight, getScrollRect } from \"../../lib/dom.js\";\nimport { rafSchd } from \"../../lib/rafSchd.js\";\nconst SCROLL_SPEED = 10;\nexport const EDGE_SIZE = 50;\nexport const getAutoScrollingData = (clientY, scrollEl) => {\n  const scrollTop = Math.floor(getNodeScroll(scrollEl).scrollTop);\n  const {\n    relative,\n    edges\n  } = getScrollRect(scrollEl);\n  const viewportHeight = relative.height;\n  const documentHeight = getScrollHeight(scrollEl);\n  const maxScrollY = documentHeight - viewportHeight;\n  const canScrollUp = scrollTop > 0;\n  const canScrollDown = scrollTop < maxScrollY;\n  const [edgeTop, edgeBottom] = edges.y;\n  const topDistance = clientY - edgeTop;\n  const bottomDistance = edgeBottom - clientY;\n  const isInTopEdge = topDistance <= EDGE_SIZE;\n  const isInBottomEdge = bottomDistance <= EDGE_SIZE;\n  const result = {\n    shouldScrolling: canScrollUp && isInTopEdge || canScrollDown && isInBottomEdge,\n    y: 0\n  };\n  // Inspired by https://github.com/SortableJS/Sortable/issues/1907#issuecomment-1495403785\n  if (isInTopEdge) {\n    result.y = -1 * ((EDGE_SIZE - topDistance) / EDGE_SIZE) * SCROLL_SPEED;\n  } else if (isInBottomEdge) {\n    result.y = (EDGE_SIZE - bottomDistance) / EDGE_SIZE * SCROLL_SPEED;\n  }\n  return result;\n};\nexport const createAutoScrollController = scrollEl => {\n  let isRunning = false;\n  const scheduledScroll = rafSchd(scroll);\n  function scroll(fn) {\n    const {\n      shouldScrolling,\n      y\n    } = fn();\n    if (shouldScrolling) {\n      isRunning = true;\n      scrollEl.scrollBy(0, y);\n      scheduledScroll(fn);\n    } else {\n      isRunning = false;\n      scheduledScroll.cancel();\n    }\n  }\n  const tryAutoScroll = fn => {\n    scheduledScroll(fn);\n  };\n  const stop = () => {\n    isRunning = false;\n    scheduledScroll.cancel();\n  };\n  return {\n    tryAutoScroll,\n    stop,\n    get isRunning() {\n      return isRunning;\n    }\n  };\n};","map":{"version":3,"names":["getNodeScroll","getScrollHeight","getScrollRect","rafSchd","SCROLL_SPEED","EDGE_SIZE","getAutoScrollingData","clientY","scrollEl","scrollTop","Math","floor","relative","edges","viewportHeight","height","documentHeight","maxScrollY","canScrollUp","canScrollDown","edgeTop","edgeBottom","y","topDistance","bottomDistance","isInTopEdge","isInBottomEdge","result","shouldScrolling","createAutoScrollController","isRunning","scheduledScroll","scroll","fn","scrollBy","cancel","tryAutoScroll","stop"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/hooks/useDraggableWithDomApi/autoScroll.ts"],"sourcesContent":["import { getNodeScroll, getScrollHeight, getScrollRect } from '../../lib/dom';\nimport { rafSchd } from '../../lib/rafSchd';\n\nconst SCROLL_SPEED = 10;\nexport const EDGE_SIZE = 50;\n\nexport const getAutoScrollingData = (\n  clientY: number,\n  scrollEl: Element | Window,\n): {\n  shouldScrolling: boolean;\n  y: number;\n} => {\n  const scrollTop = Math.floor(getNodeScroll(scrollEl).scrollTop);\n\n  const { relative, edges } = getScrollRect(scrollEl);\n  const viewportHeight = relative.height;\n  const documentHeight = getScrollHeight(scrollEl);\n  const maxScrollY = documentHeight - viewportHeight;\n  const canScrollUp = scrollTop > 0;\n  const canScrollDown = scrollTop < maxScrollY;\n\n  const [edgeTop, edgeBottom] = edges.y;\n  const topDistance = clientY - edgeTop;\n  const bottomDistance = edgeBottom - clientY;\n  const isInTopEdge = topDistance <= EDGE_SIZE;\n  const isInBottomEdge = bottomDistance <= EDGE_SIZE;\n\n  const result = {\n    shouldScrolling: (canScrollUp && isInTopEdge) || (canScrollDown && isInBottomEdge),\n    y: 0,\n  };\n\n  // Inspired by https://github.com/SortableJS/Sortable/issues/1907#issuecomment-1495403785\n  if (isInTopEdge) {\n    result.y = -1 * ((EDGE_SIZE - topDistance) / EDGE_SIZE) * SCROLL_SPEED;\n  } else if (isInBottomEdge) {\n    result.y = ((EDGE_SIZE - bottomDistance) / EDGE_SIZE) * SCROLL_SPEED;\n  }\n\n  return result;\n};\n\nexport type AutoScrollingDataFn = () => { shouldScrolling: boolean; y: number };\n\nexport const createAutoScrollController = (\n  scrollEl: Element | Window,\n): {\n  tryAutoScroll: (fn: AutoScrollingDataFn) => void;\n  stop: () => void;\n  readonly isRunning: boolean;\n} => {\n  let isRunning = false;\n  const scheduledScroll = rafSchd(scroll);\n\n  function scroll(fn: AutoScrollingDataFn) {\n    const { shouldScrolling, y } = fn();\n    if (shouldScrolling) {\n      isRunning = true;\n      scrollEl.scrollBy(0, y);\n      scheduledScroll(fn);\n    } else {\n      isRunning = false;\n      scheduledScroll.cancel();\n    }\n  }\n\n  const tryAutoScroll = (fn: AutoScrollingDataFn) => {\n    scheduledScroll(fn);\n  };\n\n  const stop = () => {\n    isRunning = false;\n    scheduledScroll.cancel();\n  };\n\n  return {\n    tryAutoScroll,\n    stop,\n    get isRunning() {\n      return isRunning;\n    },\n  };\n};\n"],"mappings":"AAAA,SAASA,aAAa,EAAEC,eAAe,EAAEC,aAAa,QAAQ;AAC9D,SAASC,OAAO,QAAQ;AAExB,MAAMC,YAAA,GAAe;AACrB,OAAO,MAAMC,SAAA,GAAY;AAEzB,OAAO,MAAMC,oBAAA,GAAuBA,CAClCC,OAAA,EACAC,QAAA;EAKA,MAAMC,SAAA,GAAYC,IAAA,CAAKC,KAAK,CAACX,aAAA,CAAcQ,QAAA,EAAUC,SAAS;EAE9D,MAAM;IAAEG,QAAQ;IAAEC;EAAK,CAAE,GAAGX,aAAA,CAAcM,QAAA;EAC1C,MAAMM,cAAA,GAAiBF,QAAA,CAASG,MAAM;EACtC,MAAMC,cAAA,GAAiBf,eAAA,CAAgBO,QAAA;EACvC,MAAMS,UAAA,GAAaD,cAAA,GAAiBF,cAAA;EACpC,MAAMI,WAAA,GAAcT,SAAA,GAAY;EAChC,MAAMU,aAAA,GAAgBV,SAAA,GAAYQ,UAAA;EAElC,MAAM,CAACG,OAAA,EAASC,UAAA,CAAW,GAAGR,KAAA,CAAMS,CAAC;EACrC,MAAMC,WAAA,GAAchB,OAAA,GAAUa,OAAA;EAC9B,MAAMI,cAAA,GAAiBH,UAAA,GAAad,OAAA;EACpC,MAAMkB,WAAA,GAAcF,WAAA,IAAelB,SAAA;EACnC,MAAMqB,cAAA,GAAiBF,cAAA,IAAkBnB,SAAA;EAEzC,MAAMsB,MAAA,GAAS;IACbC,eAAA,EAAiBV,WAAC,IAAeO,WAAA,IAAiBN,aAAA,IAAiBO,cAAA;IACnEJ,CAAA,EAAG;EACL;EAEA;EACA,IAAIG,WAAA,EAAa;IACfE,MAAA,CAAOL,CAAC,GAAG,CAAC,KAAK,CAACjB,SAAA,GAAYkB,WAAU,IAAKlB,SAAQ,IAAKD,YAAA;EAC5D,OAAO,IAAIsB,cAAA,EAAgB;IACzBC,MAAA,CAAOL,CAAC,GAAG,CAAEjB,SAAA,GAAYmB,cAAa,IAAKnB,SAAA,GAAaD,YAAA;EAC1D;EAEA,OAAOuB,MAAA;AACT;AAIA,OAAO,MAAME,0BAAA,GACXrB,QAAA;EAMA,IAAIsB,SAAA,GAAY;EAChB,MAAMC,eAAA,GAAkB5B,OAAA,CAAQ6B,MAAA;EAEhC,SAASA,OAAOC,EAAuB;IACrC,MAAM;MAAEL,eAAe;MAAEN;IAAC,CAAE,GAAGW,EAAA;IAC/B,IAAIL,eAAA,EAAiB;MACnBE,SAAA,GAAY;MACZtB,QAAA,CAAS0B,QAAQ,CAAC,GAAGZ,CAAA;MACrBS,eAAA,CAAgBE,EAAA;IAClB,OAAO;MACLH,SAAA,GAAY;MACZC,eAAA,CAAgBI,MAAM;IACxB;EACF;EAEA,MAAMC,aAAA,GAAiBH,EAAA;IACrBF,eAAA,CAAgBE,EAAA;EAClB;EAEA,MAAMI,IAAA,GAAOA,CAAA;IACXP,SAAA,GAAY;IACZC,eAAA,CAAgBI,MAAM;EACxB;EAEA,OAAO;IACLC,aAAA;IACAC,IAAA;IACA,IAAIP,UAAA,EAAY;MACd,OAAOA,SAAA;IACT;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}