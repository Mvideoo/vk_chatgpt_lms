{"ast":null,"code":"import { useCallback, useContext, useState } from \"react\";\nimport { AppRootContext } from \"../components/AppRoot/AppRootContext.js\";\n/**\n * Определяет фокус элемента, когда его наличие необходимо обозначить визуально.\n *\n * Этот хук полезен для обозначения фокуса, когда для навигации используется\n * клавиатура\n *\n * @since 7.2.0\n */\nexport function useFocusVisible() {\n  const [isFocused, setIsFocused] = useState(false);\n  // FIXME: Избавиться от чека контекста, так как без AppRoot не работает фокус\n  const withKeyboardInputCheck = true;\n  const {\n    keyboardInput\n  } = useContext(AppRootContext);\n  const onFocus = useCallback(event => {\n    event.stopPropagation();\n    setIsFocused(true);\n  }, [setIsFocused]);\n  const onBlur = useCallback(event => {\n    event.stopPropagation();\n    setIsFocused(false);\n  }, [setIsFocused]);\n  const focusVisible = withKeyboardInputCheck ? keyboardInput && isFocused : isFocused;\n  return {\n    focusVisible,\n    onFocus,\n    onBlur\n  };\n}","map":{"version":3,"names":["useCallback","useContext","useState","AppRootContext","useFocusVisible","isFocused","setIsFocused","withKeyboardInputCheck","keyboardInput","onFocus","event","stopPropagation","onBlur","focusVisible"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/hooks/useFocusVisible.ts"],"sourcesContent":["import { type FocusEvent, useCallback, useContext, useState } from 'react';\nimport { AppRootContext } from '../components/AppRoot/AppRootContext';\n\n/**\n * Определяет фокус элемента, когда его наличие необходимо обозначить визуально.\n *\n * Этот хук полезен для обозначения фокуса, когда для навигации используется\n * клавиатура\n *\n * @since 7.2.0\n */\nexport function useFocusVisible(): {\n  focusVisible: boolean;\n  onFocus: (event: FocusEvent<HTMLElement>) => void;\n  onBlur: (event: FocusEvent<HTMLElement>) => void;\n} {\n  const [isFocused, setIsFocused] = useState(false);\n\n  // FIXME: Избавиться от чека контекста, так как без AppRoot не работает фокус\n  const withKeyboardInputCheck = true;\n  const { keyboardInput } = useContext(AppRootContext);\n\n  const onFocus = useCallback(\n    (event: FocusEvent<HTMLElement>) => {\n      event.stopPropagation();\n      setIsFocused(true);\n    },\n    [setIsFocused],\n  );\n\n  const onBlur = useCallback(\n    (event: FocusEvent<HTMLElement>) => {\n      event.stopPropagation();\n      setIsFocused(false);\n    },\n    [setIsFocused],\n  );\n\n  const focusVisible = withKeyboardInputCheck ? keyboardInput && isFocused : isFocused;\n\n  return {\n    focusVisible,\n    onFocus,\n    onBlur,\n  };\n}\n"],"mappings":"AAAA,SAA0BA,WAAW,EAAEC,UAAU,EAAEC,QAAQ,QAAQ;AACnE,SAASC,cAAc,QAAQ;AAE/B;;;;;;;;AAQA,OAAO,SAASC,gBAAA;EAKd,MAAM,CAACC,SAAA,EAAWC,YAAA,CAAa,GAAGJ,QAAA,CAAS;EAE3C;EACA,MAAMK,sBAAA,GAAyB;EAC/B,MAAM;IAAEC;EAAa,CAAE,GAAGP,UAAA,CAAWE,cAAA;EAErC,MAAMM,OAAA,GAAUT,WAAA,CACbU,KAAA;IACCA,KAAA,CAAMC,eAAe;IACrBL,YAAA,CAAa;EACf,GACA,CAACA,YAAA,CAAa;EAGhB,MAAMM,MAAA,GAASZ,WAAA,CACZU,KAAA;IACCA,KAAA,CAAMC,eAAe;IACrBL,YAAA,CAAa;EACf,GACA,CAACA,YAAA,CAAa;EAGhB,MAAMO,YAAA,GAAeN,sBAAA,GAAyBC,aAAA,IAAiBH,SAAA,GAAYA,SAAA;EAE3E,OAAO;IACLQ,YAAA;IACAJ,OAAA;IACAG;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}