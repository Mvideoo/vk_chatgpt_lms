{"ast":null,"code":"import { rubberbandIfOutOfBounds } from \"../../lib/animation/index.js\";\nexport function resolveOffsetYCssStyle(placement, offsetY) {\n  if (offsetY === undefined) {\n    return undefined;\n  }\n  switch (placement) {\n    case 'top-start':\n    case 'top':\n    case 'top-end':\n      return {\n        top: offsetY\n      };\n    case 'bottom-start':\n    case 'bottom':\n    case 'bottom-end':\n      return {\n        bottom: offsetY\n      };\n  }\n}\nexport function revertRtlValue(value, isRtl) {\n  return isRtl ? -1 * value : value;\n}\nexport function getInitialShiftData(width, height, mediaQueries) {\n  return {\n    shifted: false,\n    direction: null,\n    isDesktop: mediaQueries.smallTabletPlus.matches,\n    x: 0,\n    y: 0,\n    width,\n    height\n  };\n}\nexport function getMovedShiftData(placement, shiftData, nextShift) {\n  let isRtl = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  /* istanbul ignore else: TODO чтобы протестировать кейс в блоке else, нужно мокать useMediaQueries(), чтобы перебивать mediaQueries.smallTabletPlus.matches */if (shiftData.isDesktop) {\n    if (placement.endsWith('start')) {\n      shiftData.x = isRtl ? rubberbandIfOutOfBounds(nextShift.x, 0, shiftData.width) : rubberbandIfOutOfBounds(nextShift.x, -shiftData.width, 0);\n    } else if (placement.endsWith('end')) {\n      shiftData.x = isRtl ? rubberbandIfOutOfBounds(nextShift.x, -shiftData.width, 0) : rubberbandIfOutOfBounds(nextShift.x, 0, shiftData.width);\n    }\n    if (placement.startsWith('bottom')) {\n      shiftData.y = rubberbandIfOutOfBounds(nextShift.y, 0, shiftData.height);\n    }\n  } else if (placement.startsWith('bottom')) {\n    shiftData.x = nextShift.x;\n    const movingToLeft = nextShift.x < 0 ? -1 : null;\n    const movingToRight = nextShift.x > 0 ? 1 : null;\n    shiftData.direction = movingToLeft || movingToRight;\n  }\n  if (placement.startsWith('top')) {\n    shiftData.y = rubberbandIfOutOfBounds(nextShift.y, -shiftData.height, 0);\n  }\n  shiftData.shifted = true;\n  return shiftData;\n}\nconst MINIMUM_PAN_GESTURE_FOR_TRIGGER_CLOSE = 200;\nexport function shouldBeClosedByShiftData(placement, shiftData, relativeClientRect, velocity) {\n  let isRtl = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  if (!shiftData.shifted) {\n    return false;\n  }\n  const shouldBeClosedThreshold = {\n    x: false,\n    y: false\n  };\n  const shouldBeClosedByVelocity = {\n    x: false,\n    y: false\n  };\n  /* istanbul ignore else: TODO чтобы протестировать кейс в блоке else, нужно мокать useMediaQueries(), чтобы перебивать mediaQueries.smallTabletPlus.matches */\n  if (shiftData.isDesktop) {\n    if (placement.endsWith('start')) {\n      shouldBeClosedThreshold.x = revertRtlValue(relativeClientRect.x, isRtl) < -relativeClientRect.width / 2;\n      shouldBeClosedByVelocity.x = revertRtlValue(relativeClientRect.x, isRtl) < 0 ? revertRtlValue(velocity.x, isRtl) < revertRtlValue(-MINIMUM_PAN_GESTURE_FOR_TRIGGER_CLOSE, isRtl) : false;\n    } else if (placement.endsWith('end')) {\n      shouldBeClosedThreshold.x = revertRtlValue(relativeClientRect.x, isRtl) > relativeClientRect.width / 2;\n      shouldBeClosedByVelocity.x = revertRtlValue(relativeClientRect.x, isRtl) > 0 ? revertRtlValue(velocity.x, isRtl) > revertRtlValue(MINIMUM_PAN_GESTURE_FOR_TRIGGER_CLOSE, isRtl) : false;\n    }\n    if (placement.startsWith('bottom')) {\n      shouldBeClosedThreshold.y = relativeClientRect.y > relativeClientRect.height / 2;\n      shouldBeClosedByVelocity.y = relativeClientRect.y > 0 ? velocity.y > MINIMUM_PAN_GESTURE_FOR_TRIGGER_CLOSE : false;\n    }\n  } else if (placement.startsWith('bottom')) {\n    shouldBeClosedThreshold.x = relativeClientRect.x < -relativeClientRect.width / 2 || relativeClientRect.x > relativeClientRect.width / 2;\n    shouldBeClosedByVelocity.x = relativeClientRect.x < 0 && velocity.x < -MINIMUM_PAN_GESTURE_FOR_TRIGGER_CLOSE || relativeClientRect.x > 0 && velocity.x > MINIMUM_PAN_GESTURE_FOR_TRIGGER_CLOSE;\n  }\n  if (placement.startsWith('top')) {\n    shouldBeClosedThreshold.y = relativeClientRect.y < -relativeClientRect.height / 2;\n    shouldBeClosedByVelocity.y = relativeClientRect.y < 0 ? velocity.y < -MINIMUM_PAN_GESTURE_FOR_TRIGGER_CLOSE : false;\n  }\n  return shouldBeClosedThreshold.x || shouldBeClosedByVelocity.x || shouldBeClosedThreshold.y || /* istanbul ignore next: подсвечивает жёлтым и пишет \"branch not covered\" */shouldBeClosedByVelocity.y;\n}","map":{"version":3,"names":["rubberbandIfOutOfBounds","resolveOffsetYCssStyle","placement","offsetY","undefined","top","bottom","revertRtlValue","value","isRtl","getInitialShiftData","width","height","mediaQueries","shifted","direction","isDesktop","smallTabletPlus","matches","x","y","getMovedShiftData","shiftData","nextShift","arguments","length","endsWith","startsWith","movingToLeft","movingToRight","MINIMUM_PAN_GESTURE_FOR_TRIGGER_CLOSE","shouldBeClosedByShiftData","relativeClientRect","velocity","shouldBeClosedThreshold","shouldBeClosedByVelocity"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/components/Snackbar/utils.ts"],"sourcesContent":["import type * as React from 'react';\nimport type { MediaQueries } from '../../lib/adaptivity';\nimport { rubberbandIfOutOfBounds } from '../../lib/animation';\nimport type { ShiftData, SnackbarPlacement } from './types';\n\nexport function resolveOffsetYCssStyle(\n  placement: SnackbarPlacement,\n  offsetY?: React.CSSProperties['inset'],\n): React.CSSProperties | undefined {\n  if (offsetY === undefined) {\n    return undefined;\n  }\n  switch (placement) {\n    case 'top-start':\n    case 'top':\n    case 'top-end':\n      return { top: offsetY };\n    case 'bottom-start':\n    case 'bottom':\n    case 'bottom-end':\n      return { bottom: offsetY };\n  }\n}\n\nexport function revertRtlValue(value: number, isRtl: boolean) {\n  return isRtl ? -1 * value : value;\n}\n\nexport function getInitialShiftData(\n  width: number,\n  height: number,\n  mediaQueries: MediaQueries,\n): ShiftData {\n  return {\n    shifted: false,\n    direction: null,\n    isDesktop: mediaQueries.smallTabletPlus.matches, // eslint-disable-line no-restricted-properties,\n    x: 0,\n    y: 0,\n    width,\n    height,\n  };\n}\n\nexport function getMovedShiftData(\n  placement: SnackbarPlacement,\n  shiftData: ShiftData,\n  nextShift: { x: number; y: number },\n  isRtl = false,\n): ShiftData {\n  /* istanbul ignore else: TODO чтобы протестировать кейс в блоке else, нужно мокать useMediaQueries(), чтобы перебивать mediaQueries.smallTabletPlus.matches */\n  if (shiftData.isDesktop) {\n    if (placement.endsWith('start')) {\n      shiftData.x = isRtl\n        ? rubberbandIfOutOfBounds(nextShift.x, 0, shiftData.width)\n        : rubberbandIfOutOfBounds(nextShift.x, -shiftData.width, 0);\n    } else if (placement.endsWith('end')) {\n      shiftData.x = isRtl\n        ? rubberbandIfOutOfBounds(nextShift.x, -shiftData.width, 0)\n        : rubberbandIfOutOfBounds(nextShift.x, 0, shiftData.width);\n    }\n\n    if (placement.startsWith('bottom')) {\n      shiftData.y = rubberbandIfOutOfBounds(nextShift.y, 0, shiftData.height);\n    }\n  } else if (placement.startsWith('bottom')) {\n    shiftData.x = nextShift.x;\n\n    const movingToLeft = nextShift.x < 0 ? -1 : null;\n    const movingToRight = nextShift.x > 0 ? 1 : null;\n    shiftData.direction = movingToLeft || movingToRight;\n  }\n\n  if (placement.startsWith('top')) {\n    shiftData.y = rubberbandIfOutOfBounds(nextShift.y, -shiftData.height, 0);\n  }\n\n  shiftData.shifted = true;\n\n  return shiftData;\n}\n\nconst MINIMUM_PAN_GESTURE_FOR_TRIGGER_CLOSE = 200;\n\nexport function shouldBeClosedByShiftData(\n  placement: SnackbarPlacement,\n  shiftData: ShiftData,\n  relativeClientRect: DOMRect,\n  velocity: { x: number; y: number },\n  isRtl = false,\n): boolean {\n  if (!shiftData.shifted) {\n    return false;\n  }\n\n  const shouldBeClosedThreshold = { x: false, y: false };\n  const shouldBeClosedByVelocity = { x: false, y: false };\n\n  /* istanbul ignore else: TODO чтобы протестировать кейс в блоке else, нужно мокать useMediaQueries(), чтобы перебивать mediaQueries.smallTabletPlus.matches */\n  if (shiftData.isDesktop) {\n    if (placement.endsWith('start')) {\n      shouldBeClosedThreshold.x =\n        revertRtlValue(relativeClientRect.x, isRtl) < -relativeClientRect.width / 2;\n      shouldBeClosedByVelocity.x =\n        revertRtlValue(relativeClientRect.x, isRtl) < 0\n          ? revertRtlValue(velocity.x, isRtl) <\n            revertRtlValue(-MINIMUM_PAN_GESTURE_FOR_TRIGGER_CLOSE, isRtl)\n          : false;\n    } else if (placement.endsWith('end')) {\n      shouldBeClosedThreshold.x =\n        revertRtlValue(relativeClientRect.x, isRtl) > relativeClientRect.width / 2;\n      shouldBeClosedByVelocity.x =\n        revertRtlValue(relativeClientRect.x, isRtl) > 0\n          ? revertRtlValue(velocity.x, isRtl) >\n            revertRtlValue(MINIMUM_PAN_GESTURE_FOR_TRIGGER_CLOSE, isRtl)\n          : false;\n    }\n\n    if (placement.startsWith('bottom')) {\n      shouldBeClosedThreshold.y = relativeClientRect.y > relativeClientRect.height / 2;\n      shouldBeClosedByVelocity.y =\n        relativeClientRect.y > 0 ? velocity.y > MINIMUM_PAN_GESTURE_FOR_TRIGGER_CLOSE : false;\n    }\n  } else if (placement.startsWith('bottom')) {\n    shouldBeClosedThreshold.x =\n      relativeClientRect.x < -relativeClientRect.width / 2 ||\n      relativeClientRect.x > relativeClientRect.width / 2;\n    shouldBeClosedByVelocity.x =\n      (relativeClientRect.x < 0 && velocity.x < -MINIMUM_PAN_GESTURE_FOR_TRIGGER_CLOSE) ||\n      (relativeClientRect.x > 0 && velocity.x > MINIMUM_PAN_GESTURE_FOR_TRIGGER_CLOSE);\n  }\n\n  if (placement.startsWith('top')) {\n    shouldBeClosedThreshold.y = relativeClientRect.y < -relativeClientRect.height / 2;\n    shouldBeClosedByVelocity.y =\n      relativeClientRect.y < 0 ? velocity.y < -MINIMUM_PAN_GESTURE_FOR_TRIGGER_CLOSE : false;\n  }\n\n  return (\n    shouldBeClosedThreshold.x ||\n    shouldBeClosedByVelocity.x ||\n    shouldBeClosedThreshold.y ||\n    /* istanbul ignore next: подсвечивает жёлтым и пишет \"branch not covered\" */\n    shouldBeClosedByVelocity.y\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}