{"ast":null,"code":"import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nimport { hasReactNode } from \"@vkontakte/vkjs\";\nimport { SelectionControl } from \"../SelectionControl/SelectionControl.js\";\nimport { SelectionControlLabel } from \"../SelectionControl/SelectionControlLabel/SelectionControlLabel.js\";\nimport { CheckboxInput } from \"./CheckboxInput/CheckboxInput.js\";\nimport { CheckboxSimple } from \"./CheckboxSimple/CheckboxSimple.js\";\nconst CheckboxComponent = _param => {\n  var {\n      children,\n      className,\n      style,\n      getRootRef,\n      description,\n      hoverMode,\n      activeMode,\n      hasHover,\n      hasActive,\n      focusVisibleMode,\n      titleAfter\n    } = _param,\n    restProps = _object_without_properties(_param, [\"children\", \"className\", \"style\", \"getRootRef\", \"description\", \"hoverMode\", \"activeMode\", \"hasHover\", \"hasActive\", \"focusVisibleMode\", \"titleAfter\"]);\n  return /*#__PURE__*/_jsxs(SelectionControl, {\n    className: className,\n    style: style,\n    disabled: restProps.disabled,\n    getRootRef: getRootRef,\n    hoverMode: hoverMode,\n    activeMode: activeMode,\n    hasHover: hasHover,\n    hasActive: hasActive,\n    focusVisibleMode: focusVisibleMode,\n    children: [/*#__PURE__*/_jsx(CheckboxInput, _object_spread({}, restProps)), /*#__PURE__*/_jsx(SelectionControlLabel, {\n      titleAfter: titleAfter,\n      description: description,\n      children: children\n    })]\n  });\n};\n/**\n * @see https://vkcom.github.io/VKUI/#/Checkbox\n */\nexport const Checkbox = props => {\n  const simple = !(hasReactNode(props.children) || hasReactNode(props.description));\n  if (simple) {\n    return /*#__PURE__*/_jsx(CheckboxSimple, _object_spread({}, props));\n  }\n  return /*#__PURE__*/_jsx(CheckboxComponent, _object_spread({}, props));\n};\nCheckbox.Input = CheckboxInput;","map":{"version":3,"names":["React","hasReactNode","SelectionControl","SelectionControlLabel","CheckboxInput","CheckboxSimple","CheckboxComponent","_param","children","className","style","getRootRef","description","hoverMode","activeMode","hasHover","hasActive","focusVisibleMode","titleAfter","restProps","_object_without_properties","_jsxs","disabled","_jsx","_object_spread","Checkbox","props","simple","Input"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/components/Checkbox/Checkbox.tsx"],"sourcesContent":["import * as React from 'react';\nimport { hasReactNode } from '@vkontakte/vkjs';\nimport type { HasRootRef } from '../../types';\nimport { SelectionControl } from '../SelectionControl/SelectionControl';\nimport { SelectionControlLabel } from '../SelectionControl/SelectionControlLabel/SelectionControlLabel';\nimport type { TappableProps } from '../Tappable/Tappable';\nimport { CheckboxInput, type CheckboxInputProps } from './CheckboxInput/CheckboxInput';\nimport { CheckboxSimple } from './CheckboxSimple/CheckboxSimple';\n\nexport interface CheckboxProps\n  extends Omit<CheckboxInputProps, 'getRootRef'>,\n    HasRootRef<HTMLLabelElement>,\n    Pick<\n      TappableProps,\n      'hoverMode' | 'activeMode' | 'hasHover' | 'hasActive' | 'focusVisibleMode'\n    > {\n  description?: React.ReactNode;\n  titleAfter?: React.ReactNode;\n}\n\nconst CheckboxComponent = ({\n  children,\n  className,\n  style,\n  getRootRef,\n  description,\n  hoverMode,\n  activeMode,\n  hasHover,\n  hasActive,\n  focusVisibleMode,\n  titleAfter,\n  ...restProps\n}: CheckboxProps): React.ReactNode => {\n  return (\n    <SelectionControl\n      className={className}\n      style={style}\n      disabled={restProps.disabled}\n      getRootRef={getRootRef}\n      hoverMode={hoverMode}\n      activeMode={activeMode}\n      hasHover={hasHover}\n      hasActive={hasActive}\n      focusVisibleMode={focusVisibleMode}\n    >\n      <CheckboxInput {...restProps} />\n      <SelectionControlLabel titleAfter={titleAfter} description={description}>\n        {children}\n      </SelectionControlLabel>\n    </SelectionControl>\n  );\n};\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Checkbox\n */\nexport const Checkbox = (props: CheckboxProps): React.ReactNode => {\n  const simple = !(hasReactNode(props.children) || hasReactNode(props.description));\n  if (simple) {\n    return <CheckboxSimple {...props} />;\n  }\n\n  return <CheckboxComponent {...props} />;\n};\n\nCheckbox.Input = CheckboxInput;\n"],"mappings":";;;AAAA,YAAYA,KAAA,MAAW;AACvB,SAASC,YAAY,QAAQ;AAE7B,SAASC,gBAAgB,QAAQ;AACjC,SAASC,qBAAqB,QAAQ;AAEtC,SAASC,aAAa,QAAiC;AACvD,SAASC,cAAc,QAAQ;AAa/B,MAAMC,iBAAA,GAAoBC,MAAA;MAAC;MACzBC,QAAQ;MACRC,SAAS;MACTC,KAAK;MACLC,UAAU;MACVC,WAAW;MACXC,SAAS;MACTC,UAAU;MACVC,QAAQ;MACRC,SAAS;MACTC,gBAAgB;MAChBC;IAAU,CAEI,GAAAX,MAAA;IADXY,SAAA,GAAAC,0BAAA,CAAAb,MAAA,GAXH,YACA,aACA,SACA,cACA,eACA,aACA,cACA,YACA,aACA,oBACA,a;EAGA,oBACEc,KAAA,CAACnB,gBAAA;IACCO,SAAA,EAAWA,SAAA;IACXC,KAAA,EAAOA,KAAA;IACPY,QAAA,EAAUH,SAAA,CAAUG,QAAQ;IAC5BX,UAAA,EAAYA,UAAA;IACZE,SAAA,EAAWA,SAAA;IACXC,UAAA,EAAYA,UAAA;IACZC,QAAA,EAAUA,QAAA;IACVC,SAAA,EAAWA,SAAA;IACXC,gBAAA,EAAkBA,gBAAA;4BAElBM,IAAA,CAACnB,aAAA,EAAAoB,cAAA,KAAkBL,SAAA,I,aACnBI,IAAA,CAACpB,qBAAA;MAAsBe,UAAA,EAAYA,UAAA;MAAYN,WAAA,EAAaA,WAAA;gBACzDJ;;;AAIT;AAEA;;;AAGA,OAAO,MAAMiB,QAAA,GAAYC,KAAA;EACvB,MAAMC,MAAA,GAAS,EAAE1B,YAAA,CAAayB,KAAA,CAAMlB,QAAQ,KAAKP,YAAA,CAAayB,KAAA,CAAMd,WAAW;EAC/E,IAAIe,MAAA,EAAQ;IACV,oBAAOJ,IAAA,CAAClB,cAAA,EAAAmB,cAAA,KAAmBE,KAAA;EAC7B;EAEA,oBAAOH,IAAA,CAACjB,iBAAA,EAAAkB,cAAA,KAAsBE,KAAA;AAChC;AAEAD,QAAA,CAASG,KAAK,GAAGxB,aAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}