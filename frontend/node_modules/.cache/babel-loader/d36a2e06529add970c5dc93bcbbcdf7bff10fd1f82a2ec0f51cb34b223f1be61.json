{"ast":null,"code":"import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nimport { classNames } from \"@vkontakte/vkjs\";\nimport { RootComponent } from \"../RootComponent/RootComponent.js\";\n/**\n * `AspectRatio` позволяет поддерживать постоянное соотношение ширины и высоты.\n * Его можно использовать для отображения изображений, карт, видео и других медиафайлов.\n\n * @since 5.5.0\n * @see https://vkcom.github.io/VKUI/#/AspectRatio\n */\nexport function AspectRatio(_param) {\n  var {\n      ratio,\n      mode = 'stretch'\n    } = _param,\n    props = _object_without_properties(_param, [\"ratio\", \"mode\"]);\n  const style = {\n    '--vkui_internal--aspect_ratio': typeof ratio === 'number' ? String(ratio) : ratio\n  };\n  return /*#__PURE__*/_jsx(RootComponent, _object_spread({\n    baseClassName: classNames(\"vkuiAspectRatio__host\", mode === 'stretch' && \"vkuiAspectRatio__modeStretch\"),\n    baseStyle: style\n  }, props));\n}","map":{"version":3,"names":["React","classNames","RootComponent","AspectRatio","_param","ratio","mode","props","_object_without_properties","style","String","_jsx","_object_spread","baseClassName","baseStyle"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/components/AspectRatio/AspectRatio.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport type { CSSCustomProperties } from '../../types';\nimport { RootComponent, type RootComponentProps } from '../RootComponent/RootComponent';\nimport styles from './AspectRatio.module.css';\n\nexport interface AspectRatioProps extends Omit<RootComponentProps<HTMLElement>, 'baseClassName'> {\n  className?: string;\n  /**\n   * По умолчанию, вложенный контент будет растягиваться и заполнять весь блок.\n   */\n  mode?: 'stretch' | 'none';\n  /**\n   * Например:\n   * - в виде числа: 16 / 9, 4 / 3, 1920 / 1080,\n   * - в виде css переменной: `var(--css-aspect-ratio-var)`\n   * - в виде сложного выражения: `calc(<какие-то вычисления>)`\n   */\n  ratio: number | string;\n}\n\n/**\n * `AspectRatio` позволяет поддерживать постоянное соотношение ширины и высоты.\n * Его можно использовать для отображения изображений, карт, видео и других медиафайлов.\n\n * @since 5.5.0\n * @see https://vkcom.github.io/VKUI/#/AspectRatio\n */\nexport function AspectRatio({\n  ratio,\n  mode = 'stretch',\n  ...props\n}: AspectRatioProps): React.JSX.Element {\n  const style: React.CSSProperties & CSSCustomProperties = {\n    '--vkui_internal--aspect_ratio': typeof ratio === 'number' ? String(ratio) : ratio,\n  };\n\n  return (\n    <RootComponent\n      baseClassName={classNames(styles.host, mode === 'stretch' && styles.modeStretch)}\n      baseStyle={style}\n      {...props}\n    />\n  );\n}\n"],"mappings":";;;AAAA,YAAYA,KAAA,MAAW;AACvB,SAASC,UAAU,QAAQ;AAE3B,SAASC,aAAa,QAAiC;AAkBvD;;;;;;;AAOA,OAAO,SAASC,YAAYC,MAAA;MAAA;MAC1BC,KAAK;MACLC,IAAA,GAAO;IAAS,CAEC,GAJSF,MAAA;IAGvBG,KAAA,GAAAC,0BAAA,CAHuBJ,MAAA,GAC1B,SACA,O;EAGA,MAAMK,KAAA,GAAmD;IACvD,iCAAiC,OAAOJ,KAAA,KAAU,WAAWK,MAAA,CAAOL,KAAA,IAASA;EAC/E;EAEA,oBACEM,IAAA,CAACT,aAAA,EAAAU,cAAA;IACCC,aAAA,EAAeZ,UAAA,0BAAwBK,IAAA,KAAS;IAChDQ,SAAA,EAAWL;KACPF,KAAA;AAGV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}