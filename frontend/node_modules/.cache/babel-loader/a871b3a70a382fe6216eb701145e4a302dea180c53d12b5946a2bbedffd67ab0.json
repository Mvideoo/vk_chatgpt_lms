{"ast":null,"code":"'use client';\n\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nimport { Icon24Cancel } from \"@vkontakte/icons\";\nimport { classNames } from \"@vkontakte/vkjs\";\nimport { useConfigDirection } from \"../../hooks/useConfigDirection.js\";\nimport { useGlobalEventListener } from \"../../hooks/useGlobalEventListener.js\";\nimport { usePlatform } from \"../../hooks/usePlatform.js\";\nimport { getTextFromChildren } from \"../../lib/children.js\";\nimport { useDOM } from \"../../lib/dom.js\";\nimport { IconButton } from \"../IconButton/IconButton.js\";\nimport { RootComponent } from \"../RootComponent/RootComponent.js\";\nimport { Tappable } from \"../Tappable/Tappable.js\";\nimport { VisuallyHidden } from \"../VisuallyHidden/VisuallyHidden.js\";\n/**\n * @see https://vkcom.github.io/VKUI/#/RemovableIos\n */\nconst RemovableIos = _ref => {\n  let {\n    onRemove,\n    removePlaceholder,\n    removePlaceholderString,\n    children: childrenProp,\n    toggleButtonTestId,\n    removeButtonTestId,\n    disabled\n  } = _ref;\n  const direction = useConfigDirection();\n  const isRtl = direction === 'rtl';\n  const {\n    window\n  } = useDOM();\n  const removeButtonRef = React.useRef(null);\n  const disabledRef = React.useRef(true);\n  const [removeOffset, updateRemoveOffset] = React.useState(0);\n  useGlobalEventListener(window, 'click', () => {\n    if (removeOffset > 0) {\n      updateRemoveOffset(0);\n    }\n  }, {\n    capture: true\n  });\n  const onRemoveTransitionEnd = () => {\n    if (removeOffset > 0) {\n      var _removeButtonRef_current;\n      removeButtonRef === null || removeButtonRef === void 0 ? void 0 : (_removeButtonRef_current = removeButtonRef.current) === null || _removeButtonRef_current === void 0 ? void 0 : _removeButtonRef_current.focus();\n    } else {\n      disabledRef.current = true;\n    }\n  };\n  const onRemoveActivateClick = e => {\n    e.stopPropagation();\n    if (!removeButtonRef.current) {\n      return;\n    }\n    const {\n      offsetWidth\n    } = removeButtonRef.current;\n    disabledRef.current = false;\n    updateRemoveOffset(offsetWidth);\n  };\n  const style = {\n    '--vkui_internal_Removable_remove_offset': String(removeOffset !== null && removeOffset !== void 0 ? removeOffset : 0)\n  };\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: classNames(\"vkuiRemovable__content\", isRtl && \"vkuiRemovable__rtl\", 'vkuiInternalRemovable__content'),\n    style: style,\n    onTransitionEnd: onRemoveTransitionEnd,\n    children: [/*#__PURE__*/_jsxs(IconButton, {\n      hasActive: false,\n      hasHover: false,\n      className: classNames(\"vkuiRemovable__action\", \"vkuiRemovable__toggle\", 'vkuiInternalRemovable__action'),\n      onClick: onRemoveActivateClick,\n      disabled: removeOffset > 0 || disabled,\n      \"data-testid\": toggleButtonTestId,\n      children: [/*#__PURE__*/_jsx(VisuallyHidden, {\n        children: removePlaceholderString\n      }), /*#__PURE__*/_jsx(\"i\", {\n        className: \"vkuiRemovable__toggleIn\",\n        role: \"presentation\"\n      })]\n    }), typeof childrenProp === 'function' ? childrenProp({\n      isRemoving: removeOffset > 0\n    }) : childrenProp, /*#__PURE__*/_jsx(\"span\", {\n      className: \"vkuiRemovable__offset\",\n      \"aria-hidden\": true\n    }), /*#__PURE__*/_jsx(Tappable, {\n      Component: \"button\",\n      hasActive: false,\n      hasHover: false,\n      disabled: disabledRef.current,\n      getRootRef: removeButtonRef,\n      className: \"vkuiRemovable__remove\",\n      onClick: onRemove,\n      \"data-testid\": removeButtonTestId,\n      children: /*#__PURE__*/_jsx(\"span\", {\n        className: \"vkuiRemovable__removeIn\",\n        children: removePlaceholder\n      })\n    })]\n  });\n};\n/**\n * @see https://vkcom.github.io/VKUI/#/Removable\n */\nexport const Removable = _param => {\n  var {\n      children,\n      onRemove,\n      removePlaceholder = 'Удалить',\n      align = 'center',\n      indent = false,\n      toggleButtonTestId,\n      removeButtonTestId,\n      disabled,\n      noPadding\n    } = _param,\n    restProps = _object_without_properties(_param, [\"children\", \"onRemove\", \"removePlaceholder\", \"align\", \"indent\", \"toggleButtonTestId\", \"removeButtonTestId\", \"disabled\", \"noPadding\"]);\n  const platform = usePlatform();\n  const onRemoveClick = e => {\n    e.preventDefault();\n    onRemove === null || onRemove === void 0 ? void 0 : onRemove(e);\n  };\n  const removePlaceholderString = getTextFromChildren(removePlaceholder);\n  return /*#__PURE__*/_jsxs(RootComponent, _object_spread_props(_object_spread({}, restProps), {\n    baseClassName: classNames(platform === 'ios' && \"vkuiRemovable__ios\", align === 'start' && \"vkuiRemovable__alignStart\", indent && \"vkuiRemovable__indent\"),\n    children: [platform !== 'ios' && /*#__PURE__*/_jsxs(\"div\", {\n      className: classNames(\"vkuiRemovable__content\", !noPadding && \"vkuiRemovable__withPadding\", 'vkuiInternalRemovable__content'),\n      children: [typeof children === 'function' ? children({\n        isRemoving: false\n      }) : children, /*#__PURE__*/_jsx(IconButton, {\n        activeMode: \"opacity\",\n        hoverMode: \"opacity\",\n        className: classNames(\"vkuiRemovable__action\", 'vkuiInternalRemovable__action'),\n        onClick: onRemoveClick,\n        label: removePlaceholderString,\n        \"data-testid\": removeButtonTestId,\n        disabled: disabled,\n        children: /*#__PURE__*/_jsx(Icon24Cancel, {\n          role: \"presentation\"\n        })\n      }), /*#__PURE__*/_jsx(\"span\", {\n        className: \"vkuiRemovable__offset\",\n        \"aria-hidden\": true\n      })]\n    }), platform === 'ios' && /*#__PURE__*/_jsx(RemovableIos, {\n      onRemove: onRemoveClick,\n      removePlaceholder: removePlaceholder,\n      removePlaceholderString: removePlaceholderString,\n      toggleButtonTestId: toggleButtonTestId,\n      removeButtonTestId: removeButtonTestId,\n      disabled: disabled,\n      children: children\n    })]\n  }));\n};","map":{"version":3,"names":["React","Icon24Cancel","classNames","useConfigDirection","useGlobalEventListener","usePlatform","getTextFromChildren","useDOM","IconButton","RootComponent","Tappable","VisuallyHidden","RemovableIos","_ref","onRemove","removePlaceholder","removePlaceholderString","children","childrenProp","toggleButtonTestId","removeButtonTestId","disabled","direction","isRtl","window","removeButtonRef","useRef","disabledRef","removeOffset","updateRemoveOffset","useState","capture","onRemoveTransitionEnd","_removeButtonRef_current","current","focus","onRemoveActivateClick","e","stopPropagation","offsetWidth","style","String","_jsxs","className","onTransitionEnd","hasActive","hasHover","onClick","_jsx","role","isRemoving","Component","getRootRef","Removable","_param","align","indent","noPadding","restProps","_object_without_properties","platform","onRemoveClick","preventDefault","_object_spread_props","_object_spread","baseClassName","activeMode","hoverMode","label"],"sources":["/Users/viktoriaromazanova/PycharmProjects/vk_chatgpt/frontend/node_modules/@vkontakte/vkui/src/components/Removable/Removable.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { Icon24Cancel } from '@vkontakte/icons';\nimport { classNames } from '@vkontakte/vkjs';\nimport { useConfigDirection } from '../../hooks/useConfigDirection';\nimport { useGlobalEventListener } from '../../hooks/useGlobalEventListener';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { getTextFromChildren } from '../../lib/children';\nimport { useDOM } from '../../lib/dom';\nimport type { CSSCustomProperties, HTMLAttributesWithRootRef } from '../../types';\nimport { IconButton } from '../IconButton/IconButton';\nimport { RootComponent } from '../RootComponent/RootComponent';\nimport { Tappable } from '../Tappable/Tappable';\nimport { VisuallyHidden } from '../VisuallyHidden/VisuallyHidden';\nimport styles from './Removable.module.css';\n\nexport interface RemovableProps {\n  /**\n   * Текст кнопки удаления ячейки. Визуально скрыт везде, кроме iOS. На iOS появляется в выезжающей кнопке для удаления ячейки.\n   */\n  removePlaceholder?: React.ReactNode;\n  /**\n   * Коллбэк срабатывает при клике на контрол удаления.\n   */\n  onRemove?: (e: React.MouseEvent, rootEl?: HTMLElement | null) => void;\n  /**\n   * Передает атрибут `data-testid` для кнопки, которая активирует кнопку удаления (iOS only)\n   */\n  toggleButtonTestId?: string;\n  /**\n   * Передает атрибут `data-testid` для кнопки удаления\n   */\n  removeButtonTestId?: string;\n  /**\n   * Ячейка превращается в неактивную\n   */\n  disabled?: boolean;\n}\n\ninterface RemovableIosOwnProps extends RemovableProps {\n  removePlaceholderString?: string;\n  children?: React.ReactNode | ((renderProps: RemovableIosRenderProps) => React.ReactNode);\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/RemovableIos\n */\nconst RemovableIos = ({\n  onRemove,\n  removePlaceholder,\n  removePlaceholderString,\n  children: childrenProp,\n  toggleButtonTestId,\n  removeButtonTestId,\n  disabled,\n}: RemovableIosOwnProps) => {\n  const direction = useConfigDirection();\n  const isRtl = direction === 'rtl';\n  const { window } = useDOM();\n\n  const removeButtonRef = React.useRef<HTMLElement>(null);\n  const disabledRef = React.useRef(true);\n  const [removeOffset, updateRemoveOffset] = React.useState(0);\n\n  useGlobalEventListener(\n    window,\n    'click',\n    () => {\n      if (removeOffset > 0) {\n        updateRemoveOffset(0);\n      }\n    },\n    { capture: true },\n  );\n\n  const onRemoveTransitionEnd = () => {\n    if (removeOffset > 0) {\n      removeButtonRef?.current?.focus();\n    } else {\n      disabledRef.current = true;\n    }\n  };\n\n  const onRemoveActivateClick = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    if (!removeButtonRef.current) {\n      return;\n    }\n    const { offsetWidth } = removeButtonRef.current;\n    disabledRef.current = false;\n    updateRemoveOffset(offsetWidth);\n  };\n\n  const style: CSSCustomProperties = {\n    '--vkui_internal_Removable_remove_offset': String(removeOffset ?? 0),\n  };\n\n  return (\n    <div\n      className={classNames(styles.content, isRtl && styles.rtl, 'vkuiInternalRemovable__content')}\n      style={style}\n      onTransitionEnd={onRemoveTransitionEnd}\n    >\n      <IconButton\n        hasActive={false}\n        hasHover={false}\n        className={classNames(styles.action, styles.toggle, 'vkuiInternalRemovable__action')}\n        onClick={onRemoveActivateClick}\n        disabled={removeOffset > 0 || disabled}\n        data-testid={toggleButtonTestId}\n      >\n        <VisuallyHidden>{removePlaceholderString}</VisuallyHidden>\n        <i className={styles.toggleIn} role=\"presentation\" />\n      </IconButton>\n      {typeof childrenProp === 'function'\n        ? childrenProp({ isRemoving: removeOffset > 0 })\n        : childrenProp}\n\n      <span className={styles.offset} aria-hidden />\n\n      <Tappable\n        Component=\"button\"\n        hasActive={false}\n        hasHover={false}\n        disabled={disabledRef.current}\n        getRootRef={removeButtonRef}\n        className={styles.remove}\n        onClick={onRemove}\n        data-testid={removeButtonTestId}\n      >\n        <span className={styles.removeIn}>{removePlaceholder}</span>\n      </Tappable>\n    </div>\n  );\n};\n\ninterface RemovableIosRenderProps {\n  /**\n   * Показывает состояние Removable на платформе iOS при клике на иконку удаления.\n   * Для имитации поведения на iOS при клике на иконку удаления самого удаление не происходит,\n   * контент сдвигается влево и справа выезжает настоящая кнопка \"Удалить\".\n   * Когда контент сдвинут `isRemoving = true`.\n   */\n  isRemoving: boolean;\n}\n\ninterface RemovableOwnProps\n  extends Omit<HTMLAttributesWithRootRef<HTMLDivElement>, 'children'>,\n    RemovableProps {\n  /**\n   * Расположение кнопки удаления.\n   */\n  align?: 'start' | 'center';\n  /**\n   * Скрывает кнопку, но оставляет отступ.\n   * @since 5.4.0\n   */\n  indent?: boolean;\n  /**\n   * Убирает базовые отступы для базовой платформы\n   */\n  noPadding?: boolean;\n  children?: React.ReactNode | ((renderProps: RemovableIosRenderProps) => React.ReactNode);\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Removable\n */\nexport const Removable = ({\n  children,\n  onRemove,\n  removePlaceholder = 'Удалить',\n  align = 'center',\n  indent = false,\n  toggleButtonTestId,\n  removeButtonTestId,\n  disabled,\n  noPadding,\n  ...restProps\n}: RemovableOwnProps): React.ReactNode => {\n  const platform = usePlatform();\n\n  const onRemoveClick = (e: React.MouseEvent) => {\n    e.preventDefault();\n    onRemove?.(e);\n  };\n\n  const removePlaceholderString: string = getTextFromChildren(removePlaceholder);\n\n  return (\n    <RootComponent\n      {...restProps}\n      baseClassName={classNames(\n        platform === 'ios' && styles.ios,\n        align === 'start' && styles.alignStart,\n        indent && styles.indent,\n      )}\n    >\n      {platform !== 'ios' && (\n        <div\n          className={classNames(\n            styles.content,\n            !noPadding && styles.withPadding,\n            'vkuiInternalRemovable__content',\n          )}\n        >\n          {typeof children === 'function' ? children({ isRemoving: false }) : children}\n\n          <IconButton\n            activeMode=\"opacity\"\n            hoverMode=\"opacity\"\n            className={classNames(styles.action, 'vkuiInternalRemovable__action')}\n            onClick={onRemoveClick}\n            label={removePlaceholderString}\n            data-testid={removeButtonTestId}\n            disabled={disabled}\n          >\n            <Icon24Cancel role=\"presentation\" />\n          </IconButton>\n\n          <span className={styles.offset} aria-hidden />\n        </div>\n      )}\n\n      {platform === 'ios' && (\n        <RemovableIos\n          onRemove={onRemoveClick}\n          removePlaceholder={removePlaceholder}\n          removePlaceholderString={removePlaceholderString}\n          toggleButtonTestId={toggleButtonTestId}\n          removeButtonTestId={removeButtonTestId}\n          disabled={disabled}\n        >\n          {children}\n        </RemovableIos>\n      )}\n    </RootComponent>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}